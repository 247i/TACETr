#
msgid ""
msgstr ""
"Project-Id-Version: Tamil (pypa)\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-01-27 23:53+0200\n"
"PO-Revision-Date: 2025-02-17 06:13+0530\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Tamil <https://hosted.weblate.org/projects/pypa/packaging-python-org/ta/>\n"
"Language: ta\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 5.10-dev\n"

#: ../source/contribute.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Contribute to this guide"
msgstr "இந்த வழிகாட்டிக்கு பங்களிக்கவும்"

#: ../source/contribute.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The |PyPUG| welcomes contributors! There are lots of ways to help out, "
"including:"
msgstr ""
"தி | பைபக் | பங்களிப்பாளர்களை வரவேற்கிறது! உட்பட உதவ நிறைய வழிகள் உள்ளன:"

#: ../source/contribute.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Reading the guide and giving feedback"
msgstr "வழிகாட்டியைப் படித்து கருத்துக்களை வழங்குதல்"

#: ../source/contribute.rst:11
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Reviewing new contributions"
msgstr "புதிய பங்களிப்புகளை மதிப்பாய்வு செய்தல்"

#: ../source/contribute.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Revising existing content"
msgstr "இருக்கும் உள்ளடக்கத்தை திருத்துதல்"

#: ../source/contribute.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Writing new content"
msgstr "புதிய உள்ளடக்கத்தை எழுதுதல்"

#: ../source/contribute.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Translate the guide"
msgstr "வழிகாட்டியை மொழிபெயர்க்கவும்"

#: ../source/contribute.rst:16
#, placeholders:pip:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:"open issues":"pull requests":contributing_style_guide, regex:"`[\w\d.\"]+[\w\d\s.\"]+ <(project's GitHub repository|open issues|pull requests)>`__|:ref:`[\w\d.\"]+[\w\d\s.\"]+ <contributing_style_guide>`", rst-text
msgid ""
"Most of the work on the |PyPUG| takes place on the `project's GitHub "
"repository`__. To get started, check out the list of `open issues`__ and "
"`pull requests`__. If you're planning to write or edit the guide, please "
"read the :ref:`style guide <contributing_style_guide>`."
msgstr ""
"| பைபக் | இல் பெரும்பாலான வேலைகள் `திட்டத்தின் அறிவிலிமையம் களஞ்சியத்தில்`. "
"தொடங்குவதற்கு, `திறந்த சிக்கல்கள்`__ மற்றும்` கோரிக்கைகளை இழுக்கவும்` __ இன்"
" பட்டியலைப் பாருங்கள். வழிகாட்டியை எழுதவோ திருத்தவோ நீங்கள் திட்டமிட்டால், "
"தயவுசெய்து படிக்கவும்: குறிப்பு: `பாணி வழிகாட்டி <பங்களிப்பு_ச்டைல்_கூட்>`."

#: ../source/contribute.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:"`[\w\d.\"]+[\w\d\s.\"]+ <Code of Conduct>`__", rst-text
msgid ""
"By contributing to the |PyPUG|, you're expected to follow the PSF's `Code of"
" Conduct`__."
msgstr "| பைபக் |"

#: ../source/contribute.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Documentation types"
msgstr "ஆவணப்படுத்தல் வகைகள்"

#: ../source/contribute.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This project consists of four distinct documentation types with specific "
"purposes. The project aspires to follow the `Diátaxis process`_ for creating"
" quality documentation. When proposing new additions to the project please "
"pick the appropriate documentation type."
msgstr ""
"இந்த திட்டம் குறிப்பிட்ட நோக்கங்களுடன் நான்கு தனித்துவமான ஆவணப்படுத்தல் "
"வகைகளைக் கொண்டுள்ளது. தரமான ஆவணங்களை உருவாக்குவதற்கு `டியடாக்சிச் "
"செயல்முறை`_ ஐப் பின்பற்ற இந்த திட்டம் விரும்புகிறது. திட்டத்தில் புதிய "
"சேர்த்தல்களை முன்மொழியும்போது பொருத்தமான ஆவணப்படுத்தல் வகையைத் "
"தேர்ந்தெடுக்கவும்."

#: ../source/contribute.rst:42 ../source/index.rst:55
#: ../source/tutorials/index.rst:2
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Tutorials"
msgstr "பயிற்சிகள்"

#: ../source/contribute.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:"`[^\s]+.*? <example tutorial-style document>`_", rst-text
msgid ""
"Tutorials are focused on teaching the reader new concepts by accomplishing a"
" goal. They are opinionated step-by-step guides. They do not include "
"extraneous warnings or information. `example tutorial-style document`_."
msgstr ""
"பயிற்சிகள் ஒரு இலக்கை அடைவதன் மூலம் வாசகருக்கு புதிய கருத்துக்களை "
"கற்பிப்பதில் கவனம் செலுத்துகின்றன. அவர்கள் படிப்படியான வழிகாட்டிகளாக "
"கருதப்படுகிறார்கள். அவை வெளிப்புற எச்சரிக்கைகள் அல்லது தகவல்களைக் "
"கொண்டிருக்கவில்லை. `எடுத்துக்காட்டு பயிற்சி-பாணி ஆவணம்`_."

#: ../source/contribute.rst:51 ../source/guides/index.rst:2
#: ../source/index.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Guides"
msgstr "வழிகாட்டிகள்"

#: ../source/contribute.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:":doc:`[\w\d.\"]+[\w\d\s.\"]+ <guides/packaging-namespace-packages>`", rst-text
msgid ""
"Guides are focused on accomplishing a specific task and can assume some "
"level of pre-requisite knowledge. These are similar to tutorials, but have a"
" narrow and clear focus and can provide lots of caveats and additional "
"information as needed. They may also discuss multiple approaches to "
"accomplishing the task. :doc:`example guide-style document "
"<guides/packaging-namespace-packages>`."
msgstr ""
"வழிகாட்டிகள் ஒரு குறிப்பிட்ட பணியை நிறைவேற்றுவதில் கவனம் செலுத்துகின்றன, "
"மேலும் அவை முன்நிபந்தனைக்கு முந்தைய அறிவை எடுத்துக் கொள்ளலாம். இவை "
"பயிற்சிகளைப் போன்றவை, ஆனால் ஒரு குறுகிய மற்றும் தெளிவான கவனம் "
"செலுத்துகின்றன, மேலும் தேவைக்கேற்ப நிறைய எச்சரிக்கைகள் மற்றும் கூடுதல் "
"தகவல்களை வழங்க முடியும். பணியை நிறைவேற்றுவதற்கான பல அணுகுமுறைகளையும் அவர்கள்"
" விவாதிக்கலாம். ."

#: ../source/contribute.rst:60 ../source/discussions/index.rst:2
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Discussions"
msgstr "விவாதங்கள்"

#: ../source/contribute.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:":doc:`[\w\d.\"]+[\w\d\s.\"]+ <discussions/install-requires-vs-requirements>`", rst-text
msgid ""
"Discussions are focused on understanding and information. These explore a "
"specific topic without a specific goal in mind. :doc:`example discussion-"
"style document <discussions/install-requires-vs-requirements>`."
msgstr ""
"புரிந்துகொள்ளுதல் மற்றும் தகவல்களில் விவாதங்கள் கவனம் செலுத்துகின்றன. இவை "
"ஒரு குறிப்பிட்ட இலக்கை மனதில் கொண்டு ஒரு குறிப்பிட்ட தலைப்பை ஆராய்கின்றன. ."

#: ../source/contribute.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Specifications"
msgstr "விவரக்குறிப்புகள்"

#: ../source/contribute.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Specifications are reference documentation focused on comprehensively "
"documenting an agreed-upon interface for interoperability between packaging "
"tools. :doc:`example specification-style document <specifications/core-"
"metadata>`."
msgstr ""
"விவரக்குறிப்புகள் என்பது பேக்கேசிங் கருவிகளுக்கு இடையில் இயங்குதலுக்காக "
"ஒப்புக் கொள்ளப்பட்ட இடைமுகத்தை விரிவாக ஆவணப்படுத்துவதில் கவனம் செலுத்தும் "
"குறிப்பு ஆவணங்கள் ஆகும். : டாக்: `எடுத்துக்காட்டு விவரக்குறிப்பு-பாணி ஆவணம் "
"<விவரக்குறிப்புகள்/கோர்-மெட்டாடேட்டா>`."

#: ../source/contribute.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Translations"
msgstr "மொழிபெயர்ப்புகள்"

#: ../source/contribute.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"We use `Weblate`_ to manage translations of this project. Please visit the "
"`packaging.python.org`_ project on Weblate to contribute."
msgstr ""
"இந்த திட்டத்தின் மொழிபெயர்ப்புகளை நிர்வகிக்க `வெப்லேட்`_ ஐப் "
"பயன்படுத்துகிறோம். பங்களிக்க வெப்லேட்டில் உள்ள `பேக்கேசிங்.பிதான்.ஆர்ச்`_ "
"திட்டத்தைப் பார்வையிடவும்."

#: ../source/contribute.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you are experiencing issues while you are working on translations, please"
" open an issue on `GitHub`_."
msgstr ""
"நீங்கள் மொழிபெயர்ப்புகளில் பணிபுரியும் போது சிக்கல்களைச் சந்திக்கிறீர்கள் "
"என்றால், தயவுசெய்து `github`_ இல் ஒரு சிக்கலைத் திறக்கவும்."

#: ../source/contribute.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Any translations of this project should follow `reStructuredText syntax`_."
msgstr ""
"இந்த திட்டத்தின் எந்த மொழிபெயர்ப்புகளும் `மறுசீரமைப்பு டெக்ச்ட் தொடரியல்`_ "
"ஐப் பின்பற்ற வேண்டும்."

#: ../source/contribute.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Adding a language"
msgstr "ஒரு மொழியைச் சேர்ப்பது"

#: ../source/contribute.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your language is not listed on `packaging.python.org`_, click the button "
":guilabel:`Start new translation` at the bottom of the language list and add"
" the language you want to translate."
msgstr ""
"உங்கள் மொழி `பேக்கேசிங்.பிதான்.ஆர்ச்`_ இல் பட்டியலிடப்படவில்லை என்றால், "
"பொத்தானைக் சொடுக்கு செய்க: கிலாபெல்:` மொழி பட்டியலின் கீழே புதிய "
"மொழிபெயர்ப்பைத் தொடங்கவும், நீங்கள் மொழிபெயர்க்க விரும்பும் மொழியைச் "
"சேர்க்கவும்."

#: ../source/contribute.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Following reStructuredText syntax"
msgstr "மறுசீரமைப்பின் தொடரியல் தொடரியல்"

#: ../source/contribute.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you are not familiar with reStructuredText (RST) syntax, please read "
"`this guide`_ before translating on Weblate."
msgstr ""
"மறுசீரமைப்பு (RST) தொடரியல் உங்களுக்கு தெரிந்திருக்கவில்லை என்றால், "
"வெப்லேட்டில் மொழிபெயர்ப்பதற்கு முன் `இந்த வழிகாட்டி`_ ஐப் படிக்கவும்."

#: ../source/contribute.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**Do not translate the text in reference directly**"
msgstr "** உரையை நேரடியாக மொழிபெயர்க்க வேண்டாம் **"

#: ../source/contribute.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When translating the text in reference, please do not translate them "
"directly."
msgstr ""
"உரையை குறிப்பில் மொழிபெயர்க்கும்போது, ​​அவற்றை நேரடியாக மொழிபெயர்க்க "
"வேண்டாம்."

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wrong: Translate the following text directly:"
msgstr "தவறு: பின்வரும் உரையை நேரடியாக மொழிபெயர்க்கவும்:"

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Right: Translate the following text with your own language and add the "
"original reference:"
msgstr ""
"வலது: பின்வரும் உரையை உங்கள் சொந்த மொழியுடன் மொழிபெயர்த்து அசல் குறிப்பைச் "
"சேர்க்கவும்:"

#: ../source/contribute.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Building the guide locally"
msgstr "வழிகாட்டியை உள்நாட்டில் உருவாக்குதல்"

#: ../source/contribute.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Though not required to contribute, it may be useful to build this guide "
"locally in order to test your changes. In order to build this guide locally,"
" you'll need:"
msgstr ""
"பங்களிக்கத் தேவையில்லை என்றாலும், உங்கள் மாற்றங்களைச் சோதிக்க இந்த "
"வழிகாட்டியை உள்நாட்டில் உருவாக்குவது பயனுள்ளதாக இருக்கும். இந்த வழிகாட்டியை "
"உள்ளூரில் உருவாக்க, உங்களுக்குத் தேவை:"

#: ../source/contribute.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`Nox <nox:index>`. You can install or upgrade nox using ``pip``:"
msgstr ""
": டாக்: `NOX <NOX: INDEX>`. `` பிப்`` ஐப் பயன்படுத்தி நீங்கள் NOX ஐ "
"நிறுவலாம் அல்லது மேம்படுத்தலாம்:"

#: ../source/contribute.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python 3.11. Our build scripts are usually tested with Python 3.11 only. See"
" the :doc:`Hitchhiker's Guide to Python installation instructions <python-"
"guide:starting/installation>` to install Python 3.11 on your operating "
"system."
msgstr ""
"பைதான் 3.11. எங்கள் உருவாக்க ச்கிரிப்ட்கள் பொதுவாக பைதான் 3.11 உடன் மட்டுமே "
"சோதிக்கப்படுகின்றன. பார்க்க: டாக்: `பைதான் நிறுவல் வழிமுறைகளுக்கான "
"இட்சிகரின் வழிகாட்டி <பைதான்-வழிகாட்டி: தொடக்க/நிறுவல்>` உங்கள் இயக்க "
"முறைமையில் பைதான் 3.11 ஐ நிறுவ."

#: ../source/contribute.rst:141
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To build the guide, run the following shell command in the project's root "
"folder:"
msgstr ""
"வழிகாட்டியை உருவாக்க, திட்டத்தின் ரூட் கோப்புறையில் பின்வரும் செல் கட்டளையை "
"இயக்கவும்:"

#: ../source/contribute.rst:147
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:``./build/html``:``index.html``, rst-text
msgid ""
"After the process has completed you can find the HTML output in the "
"``./build/html`` directory. You can open the ``index.html`` file to view the"
" guide in web browser, but it's recommended to serve the guide using an HTTP"
" server."
msgstr ""
"செயல்முறை முடிந்ததும் நீங்கள் உஉகுமொ வெளியீட்டை ``./பில்ட்/HTML`` "
"கோப்பகத்தில் காணலாம். வலை உலாவியில் வழிகாட்டியைக் காண நீங்கள் `` "
"index.html`` கோப்பைத் திறக்கலாம், ஆனால் HTTP சேவையகத்தைப் பயன்படுத்தி "
"வழிகாட்டியை வழங்க பரிந்துரைக்கப்படுகிறது."

#: ../source/contribute.rst:152
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can build the guide and serve it via an HTTP server using the following "
"command:"
msgstr ""
"நீங்கள் வழிகாட்டியை உருவாக்கி பின்வரும் கட்டளையைப் பயன்படுத்தி ஒரு HTTP "
"சேவையகம் வழியாக பணி செய்யலாம்:"

#: ../source/contribute.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The guide will be browsable via http://localhost:8000."
msgstr "வழிகாட்டி http: // localhost: 8000 வழியாக உலாவக்கூடியதாக இருக்கும்."

#: ../source/contribute.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Where the guide is deployed"
msgstr "வழிகாட்டி பயன்படுத்தப்படும் இடத்தில்"

#: ../source/contribute.rst:165
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:ReadTheDocs:"https://readthedocs.org/projects/python-packaging-user-guide/":Fast.ly, rst-text
msgid ""
"The guide is deployed via ReadTheDocs and the configuration lives at "
"https://readthedocs.org/projects/python-packaging-user-guide/. It's served "
"from a custom domain and fronted by Fast.ly."
msgstr ""
"வழிகாட்டி ReadThedocs வழியாகவும், உள்ளமைவு "
"https://readthedocs.org/projects/python-packaging-user-guide/ இல் "
"பயன்படுத்தப்படுகிறது. இது ஒரு தனிப்பயன் களத்திலிருந்து வழங்கப்படுகிறது "
"மற்றும் ஃபாச்ட்.லியின் முன்னால் உள்ளது."

#: ../source/contribute.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Style guide"
msgstr "நடை வழிகாட்டி"

#: ../source/contribute.rst:173
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This style guide has recommendations for how you should write the |PyPUG|. "
"Before you start writing, please review it. By following the style guide, "
"your contributions will help add to a cohesive whole and make it easier for "
"your contributions to be accepted into the project."
msgstr ""
"இந்த பாணி வழிகாட்டியில் நீங்கள் | பைபக் | ஐ எவ்வாறு எழுத வேண்டும் என்பதற்கான"
" பரிந்துரைகள் உள்ளன. நீங்கள் எழுதத் தொடங்குவதற்கு முன், அதை மதிப்பாய்வு "
"செய்யவும். பாணி வழிகாட்டியைப் பின்பற்றுவதன் மூலம், உங்கள் பங்களிப்புகள் ஒரு "
"ஒருங்கிணைந்த முழுமையைச் சேர்க்க உதவும் மற்றும் உங்கள் பங்களிப்புகளை "
"திட்டத்தில் ஏற்றுக்கொள்வதை எளிதாக்கும்."

#: ../source/contribute.rst:180
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Purpose"
msgstr "நோக்கம்"

#: ../source/contribute.rst:182
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The purpose of the |PyPUG| is to be the authoritative resource on how to "
"package, publish, and install Python projects using current tools."
msgstr ""
"| பைபக் | இன் நோக்கம் தற்போதைய கருவிகளைப் பயன்படுத்தி பைதான் திட்டங்களை "
"எவ்வாறு தொகுத்தல், வெளியிடுவது மற்றும் நிறுவுவது என்பதற்கான அதிகாரப்பூர்வ "
"ஆதாரமாக இருக்க வேண்டும்."

#: ../source/contribute.rst:187
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Scope"
msgstr "நோக்கம்"

#: ../source/contribute.rst:189
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The guide is meant to answer questions and solve problems with accurate and "
"focused recommendations."
msgstr ""
"வழிகாட்டி என்பது கேள்விகளுக்கு பதிலளிப்பதற்கும் துல்லியமான மற்றும் கவனம் "
"செலுத்தும் பரிந்துரைகளுடன் சிக்கல்களைத் தீர்ப்பதற்கும் ஆகும்."

#: ../source/contribute.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The guide isn't meant to be comprehensive and it's not meant to replace "
"individual projects' documentation. For example, pip has dozens of commands,"
" options, and settings. The pip documentation describes each of them in "
"detail, while this guide describes only the parts of pip that are needed to "
"complete the specific tasks described in this guide."
msgstr ""
"வழிகாட்டி விரிவானதாக இருக்கக்கூடாது, மேலும் இது தனிப்பட்ட திட்டங்களின் "
"ஆவணங்களை மாற்றுவதற்காக அல்ல. எடுத்துக்காட்டாக, பிஐபி டசன் கணக்கான கட்டளைகள்,"
" விருப்பங்கள் மற்றும் அமைப்புகளைக் கொண்டுள்ளது. பிஐபி ஆவணங்கள் அவை "
"ஒவ்வொன்றையும் விரிவாக விவரிக்கிறது, அதே நேரத்தில் இந்த வழிகாட்டி இந்த "
"வழிகாட்டியில் விவரிக்கப்பட்டுள்ள குறிப்பிட்ட பணிகளை முடிக்க தேவையான பிஐபி "
"பகுதிகளை மட்டுமே விவரிக்கிறது."

#: ../source/contribute.rst:200
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Audience"
msgstr "பார்வையாளர்கள்"

#: ../source/contribute.rst:202
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The audience of this guide is anyone who uses Python with packages."
msgstr ""
"இந்த வழிகாட்டியின் பார்வையாளர்கள் பைத்தானை தொகுப்புகளுடன் பயன்படுத்தும் "
"எவரும்."

#: ../source/contribute.rst:204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Don't forget that the Python community is big and welcoming. Readers may not"
" share your age, gender, education, culture, and more, but they deserve to "
"learn about packaging just as much as you do."
msgstr ""
"பைதான் சமூகம் பெரியது மற்றும் வரவேற்கத்தக்கது என்பதை மறந்துவிடாதீர்கள். "
"வாசகர்கள் உங்கள் அகவை, பாலினம், கல்வி, பண்பாடு மற்றும் பலவற்றைப் பகிர்ந்து "
"கொள்ளக்கூடாது, ஆனால் அவர்கள் உங்களைப் போலவே பேக்கேசிங் பற்றி அறிய "
"தகுதியுடையவர்கள்."

#: ../source/contribute.rst:208
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In particular, keep in mind that not all people who use Python see "
"themselves as programmers. The audience of this guide includes astronomers "
"or painters or students as well as professional software developers."
msgstr ""
"குறிப்பாக, பைத்தானைப் பயன்படுத்தும் அனைவரும் தங்களை புரோகிராமர்களாகப் "
"பார்க்கவில்லை என்பதை நினைவில் கொள்ளுங்கள். இந்த வழிகாட்டியின் "
"பார்வையாளர்களில் வானியலாளர்கள் அல்லது ஓவியர்கள் அல்லது மாணவர்கள் மற்றும் "
"தொழில்முறை மென்பொருள் உருவாக்குநர்கள் உள்ளனர்."

#: ../source/contribute.rst:214
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Voice and tone"
msgstr "குரல் மற்றும் தொனி"

#: ../source/contribute.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When writing this guide, strive to write with a voice that's approachable "
"and humble, even if you have all the answers."
msgstr ""
"இந்த வழிகாட்டியை எழுதும் போது, ​​உங்களிடம் எல்லா பதில்களும் இருந்தாலும், "
"அணுகக்கூடிய மற்றும் தாழ்மையான குரலுடன் எழுத முயற்சி செய்யுங்கள்."

#: ../source/contribute.rst:219
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Imagine you're working on a Python project with someone you know to be smart"
" and skilled. You like working with them and they like working with you. "
"That person has asked you a question and you know the answer. How do you "
"respond? *That* is how you should write this guide."
msgstr ""
"அறிவாளி மற்றும் திறமையானவர் என்று உங்களுக்குத் தெரிந்த ஒருவருடன் நீங்கள் ஒரு"
" பைதான் திட்டத்தில் பணிபுரிகிறீர்கள் என்று கற்பனை செய்து பாருங்கள். நீங்கள் "
"அவர்களுடன் பணியாற்ற விரும்புகிறீர்கள், அவர்கள் உங்களுடன் பணியாற்ற "
"விரும்புகிறார்கள். அந்த நபர் உங்களிடம் ஒரு கேள்வியைக் கேட்டிருக்கிறார், "
"உங்களுக்கு பதில் தெரியும். நீங்கள் எவ்வாறு பதிலளிப்பீர்கள்? * அதுதான்* இந்த "
"வழிகாட்டியை நீங்கள் எவ்வாறு எழுத வேண்டும்."

#: ../source/contribute.rst:224
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Here's a quick check: try reading aloud to get a sense for your writing's "
"voice and tone. Does it sound like something you would say or does it sound "
"like you're acting out a part or giving a speech? Feel free to use "
"contractions and don't worry about sticking to fussy grammar rules. You are "
"hereby granted permission to end a sentence in a preposition, if that's what"
" you want to end it with."
msgstr ""
"இங்கே விரைவான சோதனை: உங்கள் எழுத்தின் குரல் மற்றும் தொனியைப் புரிந்துகொள்ள "
"சத்தமாக படிக்க முயற்சிக்கவும். இது நீங்கள் சொல்வதைப் போலத் தோன்றுகிறதா "
"அல்லது நீங்கள் ஒரு பகுதியை செயல்படுத்துவது அல்லது ஒரு உரையை வழங்குவது போல் "
"தெரிகிறது? சுருக்கங்களைப் பயன்படுத்த தயங்காதீர்கள், மேலும் கடுமையான இலக்கண "
"விதிகளில் ஒட்டிக்கொள்வதைப் பற்றி கவலைப்பட வேண்டாம். ஒரு வாக்கியத்தை ஒரு "
"முன்மொழிவில் முடிக்க உங்களுக்கு இதன்மூலம் இசைவு வழங்கப்படுகிறது, அதுதான் "
"நீங்கள் அதை முடிக்க விரும்பினால்."

#: ../source/contribute.rst:231
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When writing the guide, adjust your tone for the seriousness and difficulty "
"of the topic. If you're writing an introductory tutorial, it's OK to make a "
"joke, but if you're covering a sensitive security recommendation, you might "
"want to avoid jokes altogether."
msgstr ""
"வழிகாட்டியை எழுதும் போது, ​​தலைப்பின் தீவிரத்தன்மைக்கும் சிரமத்திற்கும் "
"உங்கள் தொனியை சரிசெய்யவும். நீங்கள் ஒரு அறிமுக டுடோரியலை எழுதுகிறீர்கள் "
"என்றால், ஒரு நகைச்சுவையை உருவாக்குவது சரி, ஆனால் நீங்கள் ஒரு முக்கியமான "
"பாதுகாப்பு பரிந்துரையை உள்ளடக்கியிருந்தால், நீங்கள் நகைச்சுவைகளை முழுவதுமாக "
"தவிர்க்க விரும்பலாம்."

#: ../source/contribute.rst:238
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Conventions and mechanics"
msgstr "மாநாடுகள் மற்றும் இயக்கவியல்"

#: ../source/contribute.rst:246
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**Write to the reader**"
msgstr "** வாசகருக்கு எழுதுங்கள் **"

#: ../source/contribute.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When giving recommendations or steps to take, address the reader as *you* or"
" use the imperative mood."
msgstr ""
"எடுக்க வேண்டிய பரிந்துரைகள் அல்லது படிகளை வழங்கும்போது, ​​வாசகரை * நீங்கள் *"
" என உரையாற்றவும் அல்லது கட்டாய மனநிலையைப் பயன்படுத்தவும்."

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wrong: To install it, the user runs…"
msgstr "தவறு: அதை நிறுவ, பயனர் இயங்குகிறார்…"

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Right: You can install it by running…"
msgstr "வலது: இயங்குவதன் மூலம் அதை நிறுவலாம்…"

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Right: To install it, run…"
msgstr "வலது: அதை நிறுவ, இயக்க…"

#: ../source/contribute.rst:252
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**State assumptions**"
msgstr "** மாநில அனுமானங்கள் **"

#: ../source/contribute.rst:249
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Avoid making unstated assumptions. Reading on the web means that any page of"
" the guide may be the first page of the guide that the reader ever sees. If "
"you're going to make assumptions, then say what assumptions that you're "
"going to make."
msgstr ""
"நிலையற்ற அனுமானங்களைச் செய்வதைத் தவிர்க்கவும். வலையில் படிப்பது என்பது "
"வழிகாட்டியின் எந்தப் பக்கமும் வாசகர் பார்க்கும் வழிகாட்டியின் முதல் பக்கமாக "
"இருக்கலாம். நீங்கள் அனுமானங்களைச் செய்யப் போகிறீர்கள் என்றால், நீங்கள் என்ன "
"செய்யப் போகிறீர்கள் என்று சொல்லுங்கள்."

#: ../source/contribute.rst:257
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**Cross-reference generously**"
msgstr "** குறுக்கு-குறிப்பு தாராளமாக **"

#: ../source/contribute.rst:255
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The first time you mention a tool or practice, link to the part of the guide"
" that covers it, or link to a relevant document elsewhere. Save the reader a"
" search."
msgstr ""
"முதல் முறையாக நீங்கள் ஒரு கருவி அல்லது பயிற்சியைக் குறிப்பிடும்போது, ​​அதை "
"உள்ளடக்கிய வழிகாட்டியின் ஒரு பகுதியுடன் இணைக்கவும் அல்லது வேறு இடங்களில் "
"தொடர்புடைய ஆவணத்துடன் இணைக்கவும். வாசகரை ஒரு தேடலைச் சேமிக்கவும்."

#: ../source/contribute.rst:267
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**Respect naming practices**"
msgstr "** பெயரிடும் நடைமுறைகளை மதிக்கவும் **"

#: ../source/contribute.rst:260
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When naming tools, sites, people, and other proper nouns, use their "
"preferred capitalization."
msgstr ""
"கருவிகள், தளங்கள், நபர்கள் மற்றும் பிற சரியான பெயர்ச்சொற்களுக்கு பெயரிடும் "
"போது, ​​தங்களுக்கு விருப்பமான மூலதனத்தைப் பயன்படுத்துங்கள்."

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wrong: Pip uses…"
msgstr "தவறு: பிஐபி பயன்படுத்துகிறது…"

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Right: pip uses…"
msgstr "வலது: பிஐபி பயன்படுத்துகிறது…"

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wrong: …hosted on github."
msgstr "தவறு:… கிட்அப்பில் புரவலன் செய்யப்பட்டது."

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Right: …hosted on GitHub."
msgstr "வலது:… கிட்அப்பில் புரவலன் செய்யப்பட்டது."

#: ../source/contribute.rst:276
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**Use a gender-neutral style**"
msgstr "** பாலின-நடுநிலை பாணியைப் பயன்படுத்தவும் **"

#: ../source/contribute.rst:270
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Often, you'll address the reader directly with *you*, *your* and *yours*. "
"Otherwise, use gender-neutral pronouns *they*, *their*, and *theirs* or "
"avoid pronouns entirely."
msgstr ""
"பெரும்பாலும், நீங்கள் *நீங்கள் *, *உங்கள் *மற்றும் *உங்களுடைய *உடன் நேரடியாக"
" வாசகரை உரையாற்றுவீர்கள். இல்லையெனில், பாலின-நடுநிலை பிரதிபெயர்களைப் "
"பயன்படுத்துங்கள் *அவை *, *அவற்றின் *, மற்றும் *அவர்களுடைய *அல்லது "
"பிரதிபெயர்களை முழுவதுமாக தவிர்க்கவும்."

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wrong: A maintainer uploads the file. Then he…"
msgstr "தவறு: ஒரு பராமரிப்பாளர் கோப்பை பதிவேற்றுகிறார். பின்னர் அவர்…"

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Right: A maintainer uploads the file. Then they…"
msgstr "வலது: ஒரு பராமரிப்பாளர் கோப்பை பதிவேற்றுகிறார். பின்னர் அவர்கள்…"

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Right: A maintainer uploads the file. Then the maintainer…"
msgstr ""
"வலது: ஒரு பராமரிப்பாளர் கோப்பை பதிவேற்றுகிறார். பின்னர் பராமரிப்பாளர்…"

#: ../source/contribute.rst:288
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**Headings**"
msgstr "** தலைப்புகள் **"

#: ../source/contribute.rst:279
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:MyLibrary, rst-text
msgid ""
"Write headings that use words the reader is searching for. A good way to do "
"this is to have your heading complete an implied question. For example, a "
"reader might want to know *How do I install MyLibrary?* so a good heading "
"might be *Install MyLibrary*."
msgstr ""
"வாசகர் தேடும் சொற்களைப் பயன்படுத்தும் தலைப்புகளை எழுதுங்கள். இதைச் "
"செய்வதற்கான ஒரு சிறந்த வழி, உங்கள் தலைப்பு மறைமுகமான கேள்வியை முடிக்க "
"வேண்டும். எடுத்துக்காட்டாக, ஒரு வாசகர் தெரிந்து கொள்ள விரும்பலாம் *மைலிபரியை"
" எவ்வாறு நிறுவுவது? *எனவே ஒரு நல்ல தலைப்பு *மைலிபரியை நிறுவலாம் *."

#: ../source/contribute.rst:284
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In section headings, use sentence case. In other words, write headings as "
"you would write a typical sentence."
msgstr ""
"பிரிவு தலைப்புகளில், வாக்கிய வழக்கைப் பயன்படுத்துங்கள். வேறு வார்த்தைகளில் "
"கூறுவதானால், நீங்கள் ஒரு பொதுவான வாக்கியத்தை எழுதுவதால் தலைப்புகளை "
"எழுதுங்கள்."

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wrong: Things You Should Know About Python"
msgstr "தவறு: பைத்தானைப் பற்றி நீங்கள் தெரிந்து கொள்ள வேண்டிய விசயங்கள்"

#: ../source/contribute.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Right: Things you should know about Python"
msgstr "உரிமை: பைத்தானைப் பற்றி நீங்கள் தெரிந்து கொள்ள வேண்டிய விசயங்கள்"

#: ../source/contribute.rst:291
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**Numbers**"
msgstr "** எண்கள் **"

#: ../source/contribute.rst:291
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In body text, write numbers one through nine as words. For other numbers or "
"numbers in tables, use numerals."
msgstr ""
"உடல் உரையில், எண்களை ஒன்பது முதல் சொற்களாக எழுதுங்கள். அட்டவணையில் உள்ள பிற "
"எண்கள் அல்லது எண்களுக்கு, எண்களைப் பயன்படுத்துங்கள்."

#: ../source/discussions/deploying-python-applications.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Deploying Python applications"
msgstr "பைதான் பயன்பாடுகளை வரிசைப்படுத்துதல்"

#: ../source/discussions/deploying-python-applications.rst:0
#: ../source/discussions/single-source-version.rst:0
#: ../source/guides/distributing-packages-using-setuptools.rst:0
#: ../source/guides/index-mirrors-and-caches.rst:0
#: ../source/guides/installing-using-linux-tools.rst:0
#: ../source/guides/migrating-to-pypi-org.rst:0
#: ../source/guides/multi-version-installs.rst:0
#: ../source/guides/packaging-binary-extensions.rst:0
#: ../source/guides/supporting-multiple-python-versions.rst:0
#: ../source/guides/supporting-windows-using-appveyor.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Page Status"
msgstr "பக்க நிலை"

#: ../source/discussions/deploying-python-applications.rst:6
#: ../source/guides/index-mirrors-and-caches.rst:7
#: ../source/guides/installing-using-linux-tools.rst:7
#: ../source/guides/packaging-binary-extensions.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Incomplete"
msgstr "முழுமையற்ற"

#: ../source/discussions/deploying-python-applications.rst:0
#: ../source/discussions/single-source-version.rst:0
#: ../source/guides/distributing-packages-using-setuptools.rst:0
#: ../source/guides/index-mirrors-and-caches.rst:0
#: ../source/guides/installing-using-linux-tools.rst:0
#: ../source/guides/packaging-binary-extensions.rst:0
#: ../source/guides/supporting-multiple-python-versions.rst:0
#: ../source/guides/supporting-windows-using-appveyor.rst:0
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Last Reviewed"
msgstr "கடைசியாக மதிப்பாய்வு செய்யப்பட்டது"

#: ../source/discussions/deploying-python-applications.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2021-8-24"
msgstr "2021-8-24"

#: ../source/discussions/deploying-python-applications.rst:11
#: ../source/specifications/externally-managed-environments.rst:130
#: ../source/specifications/platform-compatibility-tags.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Overview"
msgstr "கண்ணோட்டம்"

#: ../source/discussions/deploying-python-applications.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Supporting multiple hardware platforms"
msgstr "பல வன்பொருள் தளங்களை ஆதரிக்கிறது"

#: ../source/discussions/deploying-python-applications.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "OS packaging & installers"
msgstr "OS பேக்கேசிங் மற்றும் நிறுவிகள்"

#. This string is an OS name and mustn't be translated.
#: ../source/discussions/deploying-python-applications.rst:49
#: ../source/discussions/deploying-python-applications.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "Windows"
msgstr "சாளரங்கள்"

#. This string is a package name and mustn't be translated.
#: ../source/discussions/deploying-python-applications.rst:58
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "Pynsist"
msgstr "பைன்சிச்ட்"

#: ../source/discussions/deploying-python-applications.rst:60
#, placeholders:"`Pynsist <https://pypi.org/project/pynsist>`__":NSIS:Python:Windows, rst-text
msgid ""
"`Pynsist <https://pypi.org/project/pynsist>`__ is a tool that bundles Python"
" programs together with the Python-interpreter into a single installer based"
" on NSIS. In most cases, packaging only requires the user to choose a "
"version of the Python-interpreter and declare the dependencies of the "
"program. The tool downloads the specified Python-interpreter for Windows and"
" packages it with all the dependencies in a single Windows-executable "
"installer."
msgstr ""
"`Pynsist <https://pypi.org/project/pynsist> ____ என்பது பைதான் நிரல்களை "
"பைதான்-இன்டர்ச்பிரெட்டருடன் NSIS ஐ அடிப்படையாகக் கொண்ட ஒற்றை நிறுவியில் "
"தொகுக்கும் ஒரு கருவியாகும். பெரும்பாலான சந்தர்ப்பங்களில், பேக்கேசிங் மட்டுமே"
" பயனருக்கு பைதான்-இன்டர்ச்பிரீட்டரின் பதிப்பைத் தேர்வுசெய்து நிரலின் "
"சார்புகளை அறிவிக்க வேண்டும். கருவி விண்டோசிற்கான குறிப்பிட்ட "
"பைதான்-இடைக்காலத்தை பதிவிறக்கம் செய்து, விண்டோச்-செயல்படுத்தக்கூடிய "
"நிறுவியில் அனைத்து சார்புகளையும் தொகுப்பாக மாற்றுகிறது."

#: ../source/discussions/deploying-python-applications.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The installed program can be started from a shortcut that the installer adds"
" to the start-menu. It uses a Python interpreter installed within its "
"application directory, independent of any other Python installation on the "
"computer."
msgstr ""
"நிறுவப்பட்ட நிரலை தொடக்க-மெனுவில் நிறுவி சேர்க்கும் குறுக்குவழியில் இருந்து "
"தொடங்கலாம். இது கணினியில் வேறு எந்த பைதான் நிறுவலிலிருந்தும் சுயாதீனமாக, "
"அதன் பயன்பாட்டு கோப்பகத்தில் நிறுவப்பட்ட பைதான் மொழிபெயர்ப்பாளரைப் "
"பயன்படுத்துகிறது."

#: ../source/discussions/deploying-python-applications.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A big advantage of Pynsist is that the Windows packages can be built on "
"Linux. There are several examples for different kinds of programs (console, "
"GUI) in the :any:`documentation <pynsist:index>`. The tool is released under"
" the MIT-licence."
msgstr ""
"பைன்சிச்ட்டின் ஒரு பெரிய நன்மை என்னவென்றால், சாளரங்கள் தொகுப்புகளை லினக்சில்"
" உருவாக்க முடியும். பல்வேறு வகையான நிரல்களுக்கு (கன்சோல், சி.யு.ஐ) பல "
"எடுத்துக்காட்டுகள் உள்ளன: ஏதேனும்: `ஆவணங்கள் <pynsist: index>`. கருவி "
"எம்ஐடி-உரிமத்தின் கீழ் வெளியிடப்படுகிறது."

#: ../source/discussions/deploying-python-applications.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Application bundles"
msgstr "பயன்பாட்டு மூட்டைகள்"

#. This is a name of an application. It doesn't need translating.
#: ../source/discussions/deploying-python-applications.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "py2exe"
msgstr "py2exe"

#: ../source/discussions/deploying-python-applications.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`py2exe <https://pypi.org/project/py2exe/>`__ is a distutils extension which"
" allows to build standalone Windows executable programs (32-bit and 64-bit) "
"from Python scripts. Python versions included in the official development "
"cycle are supported (refers to `Status of Python branches`__). py2exe can "
"build console executables and windows (GUI) executables. Building windows "
"services, and DLL/EXE COM servers might work but it is not actively "
"supported. The distutils extension is released under the MIT-licence and "
"Mozilla Public License 2.0."
msgstr ""
"`py2exe <https://pypi.org/project/py2exe/> ____ என்பது ஒரு தொலைதூர "
"நீட்டிப்பு ஆகும், இது பைத்தான் ச்கிரிப்ட்களிலிருந்து முழுமையான சாளரங்கள் "
"இயங்கக்கூடிய நிரல்களை (32-பிட் மற்றும் 64-பிட்) உருவாக்க அனுமதிக்கிறது. "
"உத்தியோகபூர்வ மேம்பாட்டு சுழற்சியில் சேர்க்கப்பட்டுள்ள பைதான் பதிப்புகள் "
"ஆதரிக்கப்படுகின்றன (பைதான் கிளைகளின் நிலையை` என்பதைக் குறிக்கிறது). PY2EXE "
"கன்சோல் இயங்கக்கூடிய மற்றும் சாளரங்கள் (GUI) இயங்கக்கூடியவற்றை உருவாக்க "
"முடியும். சாளரங்கள் சேவைகளை உருவாக்குதல், மற்றும் டி.எல்.எல்/எக்ச்இ காம் "
"சேவையகங்கள் வேலை செய்யக்கூடும், ஆனால் அது தீவிரமாக ஆதரிக்கப்படவில்லை. "
"டிச்டிடில்ச் நீட்டிப்பு எம்ஐடி-உரிமம் மற்றும் மொசில்லா பொது உரிமம் 2.0 இன் "
"கீழ் வெளியிடப்படுகிறது."

#. This is a name of an application. It doesn't need translating.
#: ../source/discussions/deploying-python-applications.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "macOS"
msgstr "மேகோச்"

#. This is a name of an application. It doesn't need translating.
#: ../source/discussions/deploying-python-applications.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "py2app"
msgstr "py2app"

#: ../source/discussions/deploying-python-applications.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`py2app <https://pypi.org/project/py2app/>`__ is a Python setuptools command"
" which will allow you to make standalone macOS application bundles and "
"plugins from Python scripts. Note that py2app MUST be used on macOS to build"
" applications, it cannot create Mac applications on other platforms. py2app "
"is released under the MIT-license."
msgstr ""
"`py2app <https://pypi.org/project/py2app/> ____ என்பது ஒரு பைதான் "
"செட்டுப்டூல்ச் கட்டளை, இது பைதான் ச்கிரிப்ட்களிலிருந்து முழுமையான மேகோச் "
"பயன்பாட்டு மூட்டைகள் மற்றும் செருகுநிரல்களை உருவாக்க உங்களை அனுமதிக்கும். "
"பயன்பாடுகளை உருவாக்க மாகோ களில் PY2APP பயன்படுத்தப்பட வேண்டும் என்பதை "
"நினைவில் கொள்க, இது மற்ற தளங்களில் MAC பயன்பாடுகளை உருவாக்க முடியாது. PY2APP"
" MIT-LICENSE இன் கீழ் வெளியிடப்படுகிறது."

#: ../source/discussions/deploying-python-applications.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Unix (including Linux and macOS)"
msgstr "யூனிக்ச் (லினக்ச் மற்றும் மேகோச் உட்பட)"

#: ../source/discussions/deploying-python-applications.rst:118
#: ../source/key_projects.rst:576
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pex"
msgstr "பெக்ச்"

#: ../source/discussions/deploying-python-applications.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`pex <https://pypi.org/project/pex/>`__ is  a library for generating .pex "
"(Python EXecutable) files which are executable Python environments in the "
"spirit of virtualenvs. pex is an expansion upon the ideas outlined in "
":pep:`441` and makes the deployment of Python applications as simple as cp. "
"pex files may even include multiple platform-specific Python distributions, "
"meaning that a single pex file can be portable across Linux and macOS. pex "
"is released under the Apache License 2.0."
msgstr ""
". PEX என்பது கோடிட்டுக் காட்டப்பட்டுள்ள கருத்துக்களின் விரிவாக்கமாகும்: PEP:"
" `441` மற்றும் பைதான் பயன்பாடுகளை சிபி போல எளிமையாக பயன்படுத்துகிறது. PEX "
"கோப்புகளில் பல இயங்குதள-குறிப்பிட்ட பைதான் விநியோகங்கள் கூட இருக்கலாம், "
"அதாவது லினக்ச் மற்றும் மேகோச் முழுவதும் ஒற்றை PEX கோப்பு சிறியதாக இருக்கும்."
" PEX அப்பாச்சி உரிமம் 2.0 இன் கீழ் வெளியிடப்பட்டது."

#: ../source/discussions/deploying-python-applications.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Configuration management"
msgstr "உள்ளமைவு மேலாண்மை"

#: ../source/discussions/distribution-package-vs-import-package.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Distribution package vs. import package"
msgstr "விநியோக தொகுப்பு எதிராக இறக்குமதி தொகுப்பு"

#: ../source/discussions/distribution-package-vs-import-package.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A number of different concepts are commonly referred to by the word "
"\"package\". This page clarifies the differences between two distinct but "
"related meanings in Python packaging, \"distribution package\" and \"import "
"package\"."
msgstr ""
"பல்வேறு கருத்துக்கள் பொதுவாக \"தொகுப்பு\" என்ற வார்த்தையால் "
"குறிப்பிடப்படுகின்றன. பைதான் பேக்கேசிங், \"விநியோக தொகுப்பு\" மற்றும் "
"\"இறக்குமதி தொகுப்பு\" ஆகியவற்றில் இரண்டு தனித்துவமான ஆனால் தொடர்புடைய "
"அர்த்தங்களுக்கு இடையிலான வேறுபாடுகளை இந்த பக்கம் தெளிவுபடுத்துகிறது."

#: ../source/discussions/distribution-package-vs-import-package.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What's a distribution package?"
msgstr "விநியோக தொகுப்பு என்றால் என்ன?"

#: ../source/discussions/distribution-package-vs-import-package.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A distribution package is a piece of software that you can install. Most of "
"the time, this is synonymous with \"project\". When you type ``pip install "
"pkg``, or when you write ``dependencies = [\"pkg\"]`` in your "
"``pyproject.toml``, ``pkg`` is the name of a distribution package. When you "
"search or browse the PyPI_, the most widely known centralized source for "
"installing Python libraries and tools, what you see is a list of "
"distribution packages. Alternatively, the term \"distribution package\" can "
"be used to refer to a specific file that contains a certain version of a "
"project."
msgstr ""
"விநியோக தொகுப்பு என்பது நீங்கள் நிறுவக்கூடிய மென்பொருளின் ஒரு பகுதி. "
"பெரும்பாலான நேரங்களில், இது \"திட்டத்திற்கு\" ஒத்ததாகும். நீங்கள் `` பிஐபி "
"நிறுவவும் pkg`` அல்லது உங்கள் `` pyproject.toml`` இல் `` சார்புகள் = "
"[\"pkg\"] `` `` pkg`` ஒரு விநியோக தொகுப்பின் பெயர். பைதான் நூலகங்கள் மற்றும்"
" கருவிகளை நிறுவுவதற்கான மிகவும் பரவலாக அறியப்பட்ட மையப்படுத்தப்பட்ட மூலமான "
"PYPI_ ஐ நீங்கள் தேடும்போது அல்லது உலாவும்போது, ​​நீங்கள் பார்ப்பது விநியோக "
"தொகுப்புகளின் பட்டியல். மாற்றாக, ஒரு திட்டத்தின் ஒரு குறிப்பிட்ட பதிப்பைக் "
"கொண்ட ஒரு குறிப்பிட்ட கோப்பைக் குறிக்க \"விநியோக தொகுப்பு\" என்ற சொல் "
"பயன்படுத்தப்படலாம்."

#: ../source/discussions/distribution-package-vs-import-package.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that in the Linux world, a \"distribution package\", most commonly "
"abbreviated as \"distro package\" or just \"package\", is something provided"
" by the system package manager of the `Linux distribution <distro_>`_, which"
" is a different meaning."
msgstr ""
"லினக்ச் உலகில், ஒரு \"விநியோக தொகுப்பு\", பொதுவாக \"டிச்ட்ரோ தொகுப்பு\" "
"அல்லது \"தொகுப்பு\" என சுருக்கமாக, `லினக்ச் விநியோக <stisho_>` _ இன் கணினி "
"தொகுப்பு மேலாளரால் வழங்கப்பட்ட ஒன்று என்பதை நினைவில் கொள்க, இது வேறு பொருள்."

#: ../source/discussions/distribution-package-vs-import-package.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What's an import package?"
msgstr "இறக்குமதி தொகுப்பு என்றால் என்ன?"

#: ../source/discussions/distribution-package-vs-import-package.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An import package is a Python module. Thus, when you write ``import pkg`` or"
" ``from pkg import func`` in your Python code, ``pkg`` is the name of an "
"import package. More precisely, import packages are special Python modules "
"that can contain submodules. For example, the ``numpy`` package contains "
"modules like ``numpy.linalg`` and ``numpy.fft``. Usually, an import package "
"is a directory on the file system, containing modules as ``.py`` files and "
"subpackages as subdirectories."
msgstr ""
"இறக்குமதி தொகுப்பு ஒரு பைதான் தொகுதி. ஆகவே, உங்கள் பைதான் குறியீட்டில் "
"பி.கே.சி இறக்குமதி ஃபன்சி` இலிருந்து `` இறக்குமதி pkg`` அல்லது `` "
"எழுதும்போது, ​​`` pkg`` என்பது இறக்குமதி தொகுப்பின் பெயர். இன்னும் "
"துல்லியமாக, இறக்குமதி தொகுப்புகள் சிறப்பு பைதான் தொகுதிகள் ஆகும், அவை "
"சப்மோடூல்களைக் கொண்டிருக்கலாம். எடுத்துக்காட்டாக, `` Numpy`` தொகுப்பில் `` "
"numpy.linalg`` மற்றும் `` numpy.fft`` போன்ற தொகுதிகள் உள்ளன. வழக்கமாக, ஒரு "
"இறக்குமதி தொகுப்பு என்பது கோப்பு முறைமையில் ஒரு கோப்பகமாகும், இதில் `` .பீ``"
" கோப்புகள் மற்றும் துணை பேக்கேச்கள் துணை அடைப்புகளாக தொகுதிகள் உள்ளன."

#: ../source/discussions/distribution-package-vs-import-package.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can use an import package as soon as you have installed a distribution "
"package that provides it."
msgstr ""
"இறக்குமதி தொகுப்பை நீங்கள் வழங்கும் விநியோக தொகுப்பை நிறுவியவுடன் "
"பயன்படுத்தலாம்."

#: ../source/discussions/distribution-package-vs-import-package.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What are the links between distribution packages and import packages?"
msgstr ""
"விநியோக தொகுப்புகள் மற்றும் இறக்குமதி தொகுப்புகளுக்கு இடையிலான இணைப்புகள் "
"என்ன?"

#: ../source/discussions/distribution-package-vs-import-package.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Most of the time, a distribution package provides one single import package "
"(or non-package module), with a matching name. For example, ``pip install "
"numpy`` lets you ``import numpy``."
msgstr ""
"பெரும்பாலான நேரங்களில், ஒரு விநியோக தொகுப்பு ஒரு ஒற்றை இறக்குமதி தொகுப்பை "
"(அல்லது பேக்கேச் அல்லாத தொகுதி), பொருந்தக்கூடிய பெயருடன் வழங்குகிறது. "
"எடுத்துக்காட்டாக, `` பிஐபி நிறுவுதல் எண் `` உங்களை `` இறக்குமதி numpy`` "
"உங்களை அனுமதிக்கிறது."

#: ../source/discussions/distribution-package-vs-import-package.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, this is only a convention. PyPI and other package indices *do not "
"enforce any relationship* between the name of a distribution package and the"
" import packages it provides. (A consequence of this is that you cannot "
"blindly install the PyPI package ``foo`` if you see ``import foo``; this may"
" install an unintended, and potentially even malicious package.)"
msgstr ""
"இருப்பினும், இது ஒரு மாநாடு மட்டுமே. PYPI மற்றும் பிற தொகுப்பு குறியீடுகள் *"
" விநியோக தொகுப்பின் பெயர் மற்றும் அது வழங்கும் இறக்குமதி தொகுப்புகளுக்கு "
"இடையில் எந்த உறவையும் செயல்படுத்த வேண்டாம். ."

#: ../source/discussions/distribution-package-vs-import-package.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A distribution package could provide an import package with a different "
"name. An example of this is the popular Pillow_ library for image "
"processing. Its distribution package name is ``Pillow``, but it provides the"
" import package ``PIL``. This is for historical reasons: Pillow started as a"
" fork of the PIL library, thus it kept the import name ``PIL`` so that "
"existing PIL users could switch to Pillow with little effort. More "
"generally, a fork of an existing library is a common reason for differing "
"names between the distribution package and the import package."
msgstr ""
"ஒரு விநியோக தொகுப்பு வேறு பெயருடன் இறக்குமதி தொகுப்பை வழங்க முடியும். பட "
"செயலாக்கத்திற்கான பிரபலமான தலையணை_ நூலகம் இதற்கு ஒரு எடுத்துக்காட்டு. அதன் "
"விநியோக தொகுப்பு பெயர் `` தலையணை``, ஆனால் இது இறக்குமதி தொகுப்பை `` pil`` "
"வழங்குகிறது. இது வரலாற்று காரணங்களுக்காக: தலையணை PIL நூலகத்தின் ஒரு "
"முட்கரண்டியாகத் தொடங்கியது, இதனால் இது இறக்குமதி பெயரை `` pil`` உடன் "
"வைத்திருந்தது, இதனால் தற்போதுள்ள PIL பயனர்கள் சிறிய முயற்சியுடன் தலையணைக்கு "
"மாற முடியும். மிகவும் பொதுவாக, தற்போதுள்ள நூலகத்தின் முட்கரண்டி விநியோக "
"தொகுப்பு மற்றும் இறக்குமதி தொகுப்புக்கு இடையில் மாறுபட்ட பெயர்களுக்கு ஒரு "
"பொதுவான காரணம்."

#: ../source/discussions/distribution-package-vs-import-package.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On a given package index (like PyPI), distribution package names must be "
"unique. On the other hand, import packages have no such requirement. Import "
"packages with the same name can be provided by several distribution "
"packages. Again, forks are a common reason for this."
msgstr ""
"கொடுக்கப்பட்ட தொகுப்பு குறியீட்டில் (PYPI போன்றது), விநியோக தொகுப்பு "
"பெயர்கள் தனித்துவமாக இருக்க வேண்டும். மறுபுறம், இறக்குமதி தொகுப்புகளுக்கு "
"அத்தகைய தேவை இல்லை. அதே பெயருடன் இறக்குமதி தொகுப்புகளை பல விநியோக "
"தொகுப்புகள் வழங்கலாம். மீண்டும், ஃபோர்க்ச் இதற்கு ஒரு பொதுவான காரணம்."

#: ../source/discussions/distribution-package-vs-import-package.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Conversely, a distribution package can provide several import packages, "
"although this is less common. An example is the attrs_ distribution package,"
" which provides both an ``attrs`` import package with a newer API, and an "
"``attr`` import package with an older but supported API."
msgstr ""
"மாறாக, ஒரு விநியோக தொகுப்பு பல இறக்குமதி தொகுப்புகளை வழங்க முடியும், "
"இருப்பினும் இது குறைவாகவே காணப்படுகிறது. ஒரு எடுத்துக்காட்டு ATTRS_ விநியோக "
"தொகுப்பு, இது ஒரு புதிய பநிஇ உடன் `` attrs`` இறக்குமதி தொகுப்பு இரண்டையும் "
"வழங்குகிறது, மேலும் பழைய ஆனால் ஆதரிக்கப்பட்ட பநிஇ உடன் `` attr`` இறக்குமதி "
"தொகுப்பு."

#: ../source/discussions/distribution-package-vs-import-package.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "How do distribution package names and import package names compare?"
msgstr ""
"விநியோக தொகுப்பு பெயர்கள் மற்றும் இறக்குமதி தொகுப்பு பெயர்கள் எவ்வாறு "
"ஒப்பிடுகின்றன?"

#: ../source/discussions/distribution-package-vs-import-package.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Import packages should have valid Python identifiers as their name (the "
":ref:`exact rules <python:identifiers>` are found in the Python "
"documentation) [#non-identifier-mod-name]_. In particular, they use "
"underscores ``_`` as word separator and they are case-sensitive."
msgstr ""
"இறக்குமதி தொகுப்புகளில் செல்லுபடியாகும் பைதான் அடையாளங்காட்டிகள் அவற்றின் "
"பெயராக இருக்க வேண்டும் (தி: ரெஃப்: `சரியான விதிகள் <பைதான்: "
"அடையாளங்காட்டிகள்>` பைதான் ஆவணத்தில் காணப்படுகின்றன) [#அடையாளங்காட்டி "
"அல்லாத-மோட்-பெயர்] _. குறிப்பாக, அவர்கள் அடிக்குறிப்புகளை `` _`` என்ற சொல் "
"பிரிப்பானாகப் பயன்படுத்துகிறார்கள், மேலும் அவை வழக்கு உணர்திறன் கொண்டவை."

#: ../source/discussions/distribution-package-vs-import-package.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On the other hand, distribution packages can use hyphens ``-`` or "
"underscores ``_``. They can also contain dots ``.``, which is sometimes used"
" for packaging a subpackage of a :ref:`namespace package <packaging-"
"namespace-packages>`. For most purposes, they are insensitive to case and to"
" ``-`` vs.  ``_`` differences, e.g., ``pip install Awesome_Package`` is the "
"same as ``pip install awesome-package`` (the precise rules are given in the "
":ref:`name normalization specification <name-normalization>`)."
msgstr ""
"மறுபுறம், விநியோக தொகுப்புகள் ஐபன்களைப் பயன்படுத்தலாம் `` -`` அல்லது `` _`` "
"ஐ அடிக்கோடிட்டுக் காட்டலாம். அவை `` .`` புள்ளிகளையும் கொண்டிருக்கலாம், இது "
"சில நேரங்களில் ஒரு துணைப் பேக்கேசை பேக்கேசிங் செய்யப் பயன்படுகிறது: ref: "
"`பெயர்வெளி தொகுப்பு <பேக்கேசிங்-பெயர்ச்பேச்-பேக்கேச்கள்>`. பெரும்பாலான "
"நோக்கங்களுக்காக, அவை வழக்குக்கு உணர்ச்சியற்றவை மற்றும் `` -` எதிராக `` _`` "
"வேறுபாடுகள், எ.கா. விதிகள் கொடுக்கப்பட்டுள்ளன: ref: `பெயர் இயல்பாக்கம் "
"விவரக்குறிப்பு <பெயர்-இயல்பாக்கம்>`)."

#: ../source/discussions/distribution-package-vs-import-package.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Although it is technically possible to import packages/modules that do not "
"have a valid Python identifier as their name, using :doc:`importlib "
"<python:library/importlib>`, this is vanishingly rare and strongly "
"discouraged."
msgstr ""
"செல்லுபடியாகும் பைதான் அடையாளங்காட்டி இல்லாத தொகுப்புகள்/தொகுதிகளை அவற்றின் "
"பெயராக இறக்குமதி செய்வது தொழில்நுட்ப ரீதியாக சாத்தியமானது என்றாலும், "
"பயன்படுத்துகிறது: டாக்: `இறக்குமதி <பைதான்: நூலகம்/இறக்குமதி லிப்>`, இது "
"மறைந்துபோகும் அரிதானது மற்றும் கடுமையாக ஊக்கமளிக்கிறது."

#: ../source/discussions/index.rst:4
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux:":doc:`/guides/index`", rst-text
msgid ""
"**Discussions** are focused on providing comprehensive information about a "
"specific topic. If you're just trying to get stuff done, see "
":doc:`/guides/index`."
msgstr ""
"** கலந்துரையாடல்கள் ** ஒரு குறிப்பிட்ட தலைப்பைப் பற்றிய விரிவான தகவல்களை "
"வழங்குவதில் கவனம் செலுத்துகின்றன. நீங்கள் விசயங்களைச் செய்ய "
"முயற்சிக்கிறீர்கள் என்றால், காண்க: DOC: `/வழிகாட்டிகள்/குறியீட்டு`."

#: ../source/discussions/install-requires-vs-requirements.rst:5
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux:install_requires:requirements, rst-text
msgid "install_requires vs requirements files"
msgstr "Install_requires vs தேவைகள் கோப்புகள்"

#. This string is a literal and mustn't be translated.
#: ../source/discussions/install-requires-vs-requirements.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "install_requires"
msgstr "Install_requires"

#: ../source/discussions/install-requires-vs-requirements.rst:11
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux:``install_requires``:":ref:`setuptools`":":file:`setup.py`":":ref:`pip`", rst-text
msgid ""
"``install_requires`` is a :ref:`setuptools` :file:`setup.py` keyword that "
"should be used to specify what a project **minimally** needs to run "
"correctly. When the project is installed by :ref:`pip`, this is the "
"specification that is used to install its dependencies."
msgstr ""
"`` install_requires`` என்பது ஒரு: ref: `setuptools`: கோப்பு:` setup.py` "
"முக்கிய சொல் ஒரு திட்டம் ** குறைந்தபட்சமாக ** சரியாக இயங்க வேண்டும் என்பதைக்"
" குறிப்பிட பயன்படுத்த வேண்டும். திட்டத்தை நிறுவும் போது: ref: `பிப்`, இது "
"அதன் சார்புகளை நிறுவ பயன்படும் விவரக்குறிப்பு."

#: ../source/discussions/install-requires-vs-requirements.rst:16
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:``install_requires``:A:B, rst-text
msgid ""
"For example, if the project requires A and B, your ``install_requires`` "
"would be like so:"
msgstr ""
"எடுத்துக்காட்டாக, திட்டத்திற்கு A மற்றும் B தேவைப்பட்டால், உங்கள் `` "
"install_requires`` அவ்வாறு இருக்கும்:"

#: ../source/discussions/install-requires-vs-requirements.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Additionally, it's best practice to indicate any known lower or upper "
"bounds."
msgstr ""
"கூடுதலாக, அறியப்பட்ட குறைந்த அல்லது மேல் எல்லைகளைக் குறிப்பது சிறந்த "
"நடைமுறையாகும்."

#: ../source/discussions/install-requires-vs-requirements.rst:28
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux:A:B:v1:v2, rst-text
msgid ""
"For example, it may be known, that your project requires at least v1 of 'A',"
" and v2 of 'B', so it would be like so:"
msgstr ""
"எடுத்துக்காட்டாக, உங்கள் திட்டத்திற்கு குறைந்தது 'A' இன் V1 மற்றும் 'B' இன் "
"V2 தேவைப்படுகிறது, எனவே இது அப்படியே இருக்கும்:"

#: ../source/discussions/install-requires-vs-requirements.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It may also be known that project 'A' introduced a change in its v2 that "
"breaks the compatibility of your project with v2 of 'A' and later, so it "
"makes sense to not allow v2:"
msgstr ""
"'A' திட்டம் அதன் V2 இல் ஒரு மாற்றத்தை அறிமுகப்படுத்தியது, இது உங்கள் "
"திட்டத்தின் பொருந்தக்கூடிய தன்மையை 'A' இன் V2 மற்றும் அதற்குப் பிறகு "
"உடைக்கிறது, எனவே V2 ஐ அனுமதிக்காதது அர்த்தமுள்ளதாக இருக்கும்:"

#: ../source/discussions/install-requires-vs-requirements.rst:49
#, placeholders:``install_requires``:Python:Windows, rst-text
msgid ""
"It is not considered best practice to use ``install_requires`` to pin "
"dependencies to specific versions, or to specify sub-dependencies (i.e. "
"dependencies of your dependencies).  This is overly-restrictive, and "
"prevents the user from gaining the benefit of dependency upgrades."
msgstr ""
"குறிப்பிட்ட பதிப்புகளுக்கு சார்புகளை பின் செய்ய `` install_requires`` ஐப் "
"பயன்படுத்துவது அல்லது துணை சார்புநிலைகளைக் குறிப்பிடுவது சிறந்த நடைமுறையாக "
"கருதப்படவில்லை (அதாவது உங்கள் சார்புகளின் சார்புநிலைகள்). இது அதிகப்படியான "
"கட்டுப்பாடானது, மேலும் பயனர்கள் சார்பு மேம்பாடுகளின் நன்மையைப் பெறுவதைத் "
"தடுக்கிறது."

#: ../source/discussions/install-requires-vs-requirements.rst:54
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux::``install_requires``:":ref:`pip`":[1]_, rst-text
msgid ""
"Lastly, it's important to understand that ``install_requires`` is a listing "
"of \"Abstract\" requirements, i.e just names and version restrictions that "
"don't determine where the dependencies will be fulfilled from (i.e. from "
"what index or source).  The where (i.e. how they are to be made "
"\"Concrete\") is to be determined at install time using :ref:`pip` options. "
"[1]_"
msgstr ""
"கடைசியாக, `` Install_requires`` என்பது \"சுருக்கம்\" தேவைகளின் பட்டியல் "
"என்பதை புரிந்து கொள்ள வேண்டியது தேவை, அதாவது பெயர்கள் மற்றும் பதிப்பு "
"கட்டுப்பாடுகள் சார்புநிலைகள் எங்கிருந்து நிறைவு செய்யப்படும் என்பதை "
"தீர்மானிக்காத (அதாவது எந்த குறியீட்டு அல்லது மூலத்திலிருந்து). எங்கே (அதாவது"
" அவை எவ்வாறு \"கான்கிரீட்\" செய்யப்பட வேண்டும்) நிறுவும் நேரத்தில் "
"தீர்மானிக்கப்பட வேண்டும்: குறிப்பு: `பிப்` விருப்பங்கள். [1] _"

#: ../source/discussions/install-requires-vs-requirements.rst:62
#: ../source/tutorials/installing-packages.rst:464
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requirements files"
msgstr "தேவைகள் கோப்புகள்"

#: ../source/discussions/install-requires-vs-requirements.rst:64
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux:":ref:`pip:pip install`", regex:":ref:`[^\s]+.*? <pip:Requirements Files>`", rst-text
msgid ""
":ref:`Requirements Files <pip:Requirements Files>` described most simply, "
"are just a list of :ref:`pip:pip install` arguments placed into a file."
msgstr ""
":ref:`Requirements கோப்புகள் <pip:Requirements Files>` described "
"பெரும்பாலானவை simply, அரே just a பட்டியல் of :ref:`pip:pip install` "
"arguments placed into a file."

#: ../source/discussions/install-requires-vs-requirements.rst:67
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux:``install_requires``, regex:":ref:`[^\s]+.*? <pip:Requirements Files>`", rst-text
msgid ""
"Whereas ``install_requires`` defines the dependencies for a single project, "
":ref:`Requirements Files <pip:Requirements Files>` are often used to define "
"the requirements for a complete Python environment."
msgstr ""
"அதேசமயம் `` Install_requires`` ஒரு திட்டத்திற்கான சார்புகளை வரையறுக்கிறது,: "
"ref: `தேவைகள் கோப்புகள் <PIP: தேவைகள் கோப்புகள்>` ஒரு முழுமையான பைதான் "
"சூழலுக்கான தேவைகளை வரையறுக்க பெரும்பாலும் பயன்படுத்தப்படுகின்றன."

#: ../source/discussions/install-requires-vs-requirements.rst:71
#, placeholders:``install_requires``:Python:Windows, regex:":ref:`[^\s]+.*? <pip:Repeatability>`", rst-text
msgid ""
"Whereas ``install_requires`` requirements are minimal, requirements files "
"often contain an exhaustive listing of pinned versions for the purpose of "
"achieving :ref:`repeatable installations <pip:Repeatability>` of a complete "
"environment."
msgstr ""
"`` Install_requires`` தேவைகள் மிகக் குறைவு, தேவைகள் கோப்புகள் பெரும்பாலும் "
"அடைவதற்கான நோக்கத்திற்காக பின் செய்யப்பட்ட பதிப்புகளின் முழுமையான பட்டியலைக்"
" கொண்டிருக்கின்றன: குறிப்பு: `மீண்டும் மீண்டும் செய்யக்கூடிய நிறுவல்கள் "
"<PIP: மீண்டும் நிகழ்தகவு>` ஒரு முழுமையான சூழலின்."

#: ../source/discussions/install-requires-vs-requirements.rst:76
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux:``install_requires``:``--index-url``:``--find-links``:[1]_, rst-text
msgid ""
"Whereas ``install_requires`` requirements are \"Abstract\", i.e. not "
"associated with any particular index, requirements files often contain pip "
"options like ``--index-url`` or ``--find-links`` to make requirements "
"\"Concrete\", i.e. associated with a particular index or directory of "
"packages. [1]_"
msgstr ""
"`` Install_requires`` தேவைகள் \"சுருக்கம்\", அதாவது எந்தவொரு குறிப்பிட்ட "
"குறியீட்டுடனும் தொடர்புடையவை அல்ல, தேவைகள் கோப்புகளில் பெரும்பாலும் தேவைகள் "
"`` --index-URL`` அல்லது ``-FIND-LINKS`` போன்ற பிஐபி விருப்பங்கள் உள்ளன "
"கான்கிரீட் \", அதாவது தொகுப்புகளின் ஒரு குறிப்பிட்ட குறியீட்டு அல்லது "
"கோப்பகத்துடன் தொடர்புடையது. [1] _"

#: ../source/discussions/install-requires-vs-requirements.rst:82
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:Linux:``install_requires``:"``python -m pip install -r``", rst-text
msgid ""
"Whereas ``install_requires`` metadata is automatically analyzed by pip "
"during an install, requirements files are not, and only are used when a user"
" specifically installs them using ``python -m pip install -r``."
msgstr ""
"அதேசமயம் `` Install_requires`` ஒரு நிறுவலின் போது PIP ஆல் தானாகவே "
"பகுப்பாய்வு செய்யப்படுகிறது, தேவைகள் கோப்புகள் இல்லை, மேலும் ஒரு பயனர் "
"குறிப்பாக `` பைதான் -எம் பிஐபி நிறுவல் -r`` ஐப் பயன்படுத்தி அவற்றை "
"நிறுவும்போது மட்டுமே பயன்படுத்தப்படுகிறது."

#: ../source/discussions/install-requires-vs-requirements.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more on \"Abstract\" vs \"Concrete\" requirements, see "
"https://caremad.io/posts/2013/07/setup-vs-requirement/."
msgstr ""
"\"சுருக்கம்\" Vs \"கான்கிரீட்\" தேவைகள் பற்றி மேலும் அறிய, "
"https://caremad.io/posts/2013/07/setup-vs-requirement/ ஐப் பார்க்கவும்."

#: ../source/discussions/package-formats.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package Formats"
msgstr "தொகுப்பு வடிவங்கள்"

#: ../source/discussions/package-formats.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This page discusses the file formats that are used to distribute Python "
"packages and the differences between them."
msgstr ""
"இந்த பக்கம் பைதான் தொகுப்புகளை விநியோகிக்கப் பயன்படும் கோப்பு வடிவங்களையும் "
"அவற்றுக்கிடையேயான வேறுபாடுகளையும் விவாதிக்கிறது."

#: ../source/discussions/package-formats.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You will find files in two formats on package indices such as PyPI_: "
"**source distributions**, or **sdists** for short, and **binary "
"distributions**, commonly called **wheels**.  For example, the `PyPI page "
"for pip 23.3.1 <pip-pypi_>`_ lets you download two files, "
"``pip-23.3.1.tar.gz`` and ``pip-23.3.1-py3-none-any.whl``.  The former is an"
" sdist, the latter is a wheel. As explained below, these serve different "
"purposes. When publishing a package on PyPI (or elsewhere), you should "
"always upload both an sdist and one or more wheel."
msgstr ""
"PYPI_: ** மூல விநியோகங்கள் **, அல்லது ** Sdists ** போன்ற தொகுப்பு "
"குறியீடுகளில் இரண்டு வடிவங்களில் கோப்புகளை நீங்கள் காண்பீர்கள், மற்றும் ** "
"பைனரி விநியோகங்கள் **, பொதுவாக ** சக்கரங்கள் ** என்று அழைக்கப்படுகின்றன. "
"எடுத்துக்காட்டாக, பிஐபி 23.3.1 <pip-pypi_> `_ க்கான` பைபி பக்கம் இரண்டு "
"கோப்புகளை பதிவிறக்கம் செய்ய அனுமதிக்கிறது, `` பிஐபி -23.3.1.tar.gz`` மற்றும்"
" `` PIP-23.3.1-NONE -any.whl``. முந்தையது ஒரு SDIST, பிந்தையது ஒரு சக்கரம். "
"கீழே விளக்கப்பட்டுள்ளபடி, இவை வெவ்வேறு நோக்கங்களுக்கு உதவுகின்றன. பைபியில் "
"(அல்லது வேறு இடங்களில்) ஒரு தொகுப்பை வெளியிடும்போது, ​​நீங்கள் எப்போதும் ஒரு"
" SDIST மற்றும் ஒன்று அல்லது அதற்கு மேற்பட்ட சக்கரம் இரண்டையும் பதிவேற்ற "
"வேண்டும்."

#: ../source/discussions/package-formats.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What is a source distribution?"
msgstr "மூல வழங்கல் என்றால் என்ன?"

#: ../source/discussions/package-formats.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Conceptually, a source distribution is an archive of the source code in raw "
"form. Concretely, an sdist is a ``.tar.gz`` archive containing the source "
"code plus an additional special file called ``PKG-INFO``, which holds the "
"project metadata. The presence of this file helps packaging tools to be more"
" efficient by not needing to compute the metadata themselves. The ``PKG-"
"INFO`` file follows the format specified in :ref:`core-metadata` and is not "
"intended to be written by hand [#core-metadata-format]_."
msgstr ""
"கருத்தியல் ரீதியாக, ஒரு மூல வழங்கல் என்பது மூல வடிவத்தில் உள்ள மூலக் "
"குறியீட்டின் காப்பகமாகும். இணக்கமாக, ஒரு SDIST என்பது மூலக் குறியீட்டைக் "
"கொண்ட `` .tar.gz`` காப்பகமாகும், மேலும் திட்ட மெட்டாடேட்டாவை வைத்திருக்கும் "
"`` pkg-info`` எனப்படும் கூடுதல் சிறப்புக் கோப்பு. இந்த கோப்பின் இருப்பு "
"மெட்டாடேட்டாவைக் கணக்கிடத் தேவையில்லை என்பதன் மூலம் பேக்கேசிங் கருவிகளை "
"மிகவும் திறமையாக இருக்க உதவுகிறது. `` பி.கே.சி-இன்ஃபோ`` கோப்பு "
"குறிப்பிடப்பட்ட வடிவமைப்பைப் பின்பற்றுகிறது: குறிப்பு: `கோர்-மெட்டாடேட்டா` "
"மற்றும் கையால் எழுதப்பட விரும்பவில்லை [#கோர்-மெட்டாடேட்டா-வடிவ] _."

#: ../source/discussions/package-formats.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can thus inspect the contents of an sdist by unpacking it using standard"
" tools to work with tar archives, such as ``tar -xvf`` on UNIX platforms "
"(like Linux and macOS), or :ref:`the command line interface of Python's "
"tarfile module <python:tarfile-commandline>` on any platform."
msgstr ""
"யுனிக்ச் இயங்குதளங்களில் (லினக்ச் மற்றும் மேகோச் போன்றவை) `` கரிக்கீல் "
"-xvf`` போன்ற தார் காப்பகங்களுடன் பணிபுரிய நிலையான கருவிகளைப் பயன்படுத்தி ஒரு"
" SDIST இன் உள்ளடக்கங்களை நீங்கள் ஆய்வு செய்யலாம், OR: ref: `இன் கட்டளை வரி "
"இடைமுகம் பைத்தானின் டார்ஃபைல் தொகுதி <பைதான்: டார்ஃபைல்-கமாண்ட்லைன்> `எந்த "
"தளத்திலும்."

#: ../source/discussions/package-formats.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Sdists serve several purposes in the packaging ecosystem. When :ref:`pip`, "
"the standard Python package installer, cannot find a wheel to install, it "
"will fall back on downloading a source distribution, compiling a wheel from "
"it, and installing the wheel. Furthermore, sdists are often used as the "
"package source by downstream packagers (such as Linux distributions, Conda, "
"Homebrew and MacPorts on macOS, ...), who, for various reasons, may prefer "
"them over, e.g., pulling from a Git repository."
msgstr ""
"SDISTS பேக்கேசிங் சுற்றுச்சூழல் அமைப்பில் பல நோக்கங்களுக்காக பணி செய்கிறது. "
"எப்போது: ref: `பிப்`, நிலையான பைதான் தொகுப்பு நிறுவி, நிறுவ ஒரு சக்கரத்தைக் "
"கண்டுபிடிக்க முடியவில்லை, அது ஒரு மூல விநியோகத்தைப் பதிவிறக்குவது, "
"அதிலிருந்து ஒரு சக்கரத்தை தொகுத்தல் மற்றும் சக்கரத்தை நிறுவுதல் ஆகியவற்றில் "
"மீண்டும் விழும். மேலும், SDISTS பெரும்பாலும் கீழ்நிலை பேக்கேசர்களால் "
"(லினக்ச் விநியோகங்கள், கான்டா, ஓம் ப்ரூ மற்றும் மேக்போர்ட் போன்றவை, ...) "
"தொகுப்பு மூலமாகப் பயன்படுத்தப்படுகின்றன, பல்வேறு காரணங்களுக்காக, அவற்றை "
"விரும்பலாம், எ.கா., ஒரு அறிவிலி களஞ்சியத்திலிருந்து இழுக்கலாம் ."

#: ../source/discussions/package-formats.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A source distribution is recognized by its file name, which has the form "
":samp:`{package_name}-{version}.tar.gz`, e.g., ``pip-23.3.1.tar.gz``."
msgstr ""
"ஒரு மூல வழங்கல் அதன் கோப்பு பெயரால் அங்கீகரிக்கப்பட்டுள்ளது, அதில் படிவம் "
"உள்ளது: SAMP: `{package_name}-{version} .tar.gz`, எ.கா."

#: ../source/discussions/package-formats.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you want technical details on the sdist format, read the :ref:`sdist "
"specification <source-distribution-format>`."
msgstr ""
"SDIST வடிவத்தில் தொழில்நுட்ப விவரங்களை நீங்கள் விரும்பினால், அதைப் "
"படியுங்கள்: Ref: `SDIST விவரக்குறிப்பு <மூல-விநியோக வடிவங்கள்>`."

#: ../source/discussions/package-formats.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What is a wheel?"
msgstr "சக்கரம் என்றால் என்ன?"

#: ../source/discussions/package-formats.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Conceptually, a wheel contains exactly the files that need to be copied when"
" installing the package."
msgstr ""
"கருத்தியல் ரீதியாக, ஒரு சக்கரத்தில் தொகுப்பை நிறுவும் போது நகலெடுக்க வேண்டிய"
" கோப்புகள் சரியாக உள்ளன."

#: ../source/discussions/package-formats.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There is a big difference between sdists and wheels for packages with "
":term:`extension modules <extension module>`, written in compiled languages "
"like C, C++ and Rust, which need to be compiled into platform-dependent "
"machine code. With these packages, wheels do not contain source code (like C"
" source files) but compiled, executable code (like ``.so`` files on Linux or"
" DLLs on Windows)."
msgstr ""
"தொகுப்புகளுக்கான SDISTS மற்றும் சக்கரங்களுக்கு இடையே ஒரு பெரிய வேறுபாடு "
"உள்ளது: கால: `நீட்டிப்பு தொகுதிகள் <நீட்டிப்பு தொகுதி>`, சி, சி ++ மற்றும் "
"ரச்ட் போன்ற தொகுக்கப்பட்ட மொழிகளில் எழுதப்பட்டவை, அவை இயங்குதள சார்ந்த "
"இயந்திரக் குறியீட்டில் தொகுக்கப்பட வேண்டும். இந்த தொகுப்புகள் மூலம், "
"சக்கரங்களில் மூலக் குறியீடு இல்லை (சி மூல கோப்புகள் போன்றவை) ஆனால் "
"தொகுக்கப்பட்ட, இயங்கக்கூடிய குறியீடு (`` .SO`` லினக்சில் கோப்புகள் அல்லது "
"சாளரங்களில் டி.எல்.எல்)."

#: ../source/discussions/package-formats.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Furthermore, while there is only one sdist per version of a project, there "
"may be many wheels. Again, this is most relevant in the context of extension"
" modules. The compiled code of an extension module is tied to an operating "
"system and processor architecture, and often also to the version of the "
"Python interpreter (unless the :ref:`Python stable ABI <cpython-stable-abi>`"
" is used)."
msgstr ""
"மேலும், ஒரு திட்டத்தின் பதிப்பிற்கு ஒரே ஒரு SDIST மட்டுமே இருக்கும்போது, "
"​​பல சக்கரங்கள் இருக்கலாம். மீண்டும், நீட்டிப்பு தொகுதிகளின் சூழலில் இது "
"மிகவும் பொருத்தமானது. ஒரு நீட்டிப்பு தொகுதியின் தொகுக்கப்பட்ட குறியீடு ஒரு "
"இயக்க முறைமை மற்றும் செயலி கட்டமைப்புடன் பிணைக்கப்பட்டுள்ளது, மேலும் "
"பெரும்பாலும் பைதான் மொழிபெயர்ப்பாளரின் பதிப்பிலும் பிணைக்கப்பட்டுள்ளது "
"(இல்லையென்றால்: குறிப்பு: `பைதான் நிலையான அபி <cpython- நிலைத்தன்மை-ABI>` "
"பயன்படுத்தப்படுகிறது)."

#: ../source/discussions/package-formats.rst:72
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For pure-Python packages, the difference between sdists and wheels is less "
"marked. There is normally one single wheel, for all platforms and Python "
"versions.  Python is an interpreted language, which does not need ahead-of-"
"time compilation, so wheels contain ``.py`` files just like sdists."
msgstr ""
"தூய-பைதான் தொகுப்புகளுக்கு, Sdists மற்றும் சக்கரங்களுக்கு இடையிலான வேறுபாடு "
"குறைவாகக் குறிக்கப்பட்டுள்ளது. எல்லா தளங்களுக்கும் பைதான் பதிப்புகளுக்கும் "
"பொதுவாக ஒரு ஒற்றை சக்கரம் உள்ளது. பைதான் என்பது ஒரு விளக்கமளிக்கப்பட்ட "
"மொழியாகும், இது நேரத்திற்கு முன்னதாகத் தேவையில்லை, எனவே சக்கரங்களில் sdists "
"போலவே `` .py`` கோப்புகள் உள்ளன."

#: ../source/discussions/package-formats.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you are wondering about ``.pyc`` bytecode files: they are not included in"
" wheels, since they are cheap to generate, and including them would "
"unnecessarily force a huge number of packages to distribute one wheel per "
"Python version instead of one single wheel. Instead, installers like "
":ref:`pip` generate them while installing the package."
msgstr ""
"`` .பிசி`` பைட்கோட் கோப்புகளைப் பற்றி நீங்கள் யோசிக்கிறீர்கள் என்றால்: அவை "
"சக்கரங்களில் சேர்க்கப்படவில்லை, ஏனெனில் அவை உருவாக்க மலிவானவை, மேலும் அவை "
"உட்பட ஒரு ஒற்றை ஒற்றை பதிப்பிற்கு பதிலாக ஒரு சக்கரத்தை விநியோகிக்க ஏராளமான "
"தொகுப்புகளை தேவையற்ற முறையில் கட்டாயப்படுத்தும் சக்கரம். அதற்கு பதிலாக, "
"நிறுவிகள்: ref: `PIP` தொகுப்பை நிறுவும் போது அவற்றை உருவாக்கவும்."

#: ../source/discussions/package-formats.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"With that being said, there are still important differences between sdists "
"and wheels, even for pure Python projects. Wheels are meant to contain "
"exactly what is to be installed, and nothing more. In particular, wheels "
"should never include tests and documentation, while sdists commonly do.  "
"Also, the wheel format is more complex than sdist. For example, it includes "
"a special file -- called ``RECORD`` -- that lists all files in the wheel "
"along with a hash of their content, as a safety check of the download's "
"integrity."
msgstr ""
"இவ்வாறு கூறப்படுவதால், தூய பைதான் திட்டங்களுக்கு கூட, SDISTS மற்றும் "
"சக்கரங்களுக்கு இடையில் இன்னும் முக்கியமான வேறுபாடுகள் உள்ளன. சக்கரங்கள் "
"நிறுவப்பட வேண்டியவற்றைக் கொண்டிருக்க வேண்டும், அதற்கு மேல் எதுவும் இல்லை. "
"குறிப்பாக, சக்கரங்கள் ஒருபோதும் சோதனைகள் மற்றும் ஆவணங்களை சேர்க்கக்கூடாது, "
"அதே நேரத்தில் Sdists பொதுவாக செய்கின்றன. மேலும், சக்கர வடிவம் SDIST ஐ விட "
"மிகவும் சிக்கலானது. எடுத்துக்காட்டாக, இது ஒரு சிறப்புக் கோப்பை உள்ளடக்கியது "
"- `` பதிவு`` - இது சக்கரத்தில் உள்ள அனைத்து கோப்புகளையும் அவற்றின் "
"உள்ளடக்கத்தின் ஆசுடன் பட்டியலிடுகிறது, இது பதிவிறக்கத்தின் ஒருமைப்பாட்டின் "
"பாதுகாப்பு சோதனையாக."

#: ../source/discussions/package-formats.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"At a glance, you might wonder if wheels are really needed for \"plain and "
"basic\" pure Python projects. Keep in mind that due to the flexibility of "
"sdists, installers like pip cannot install from sdists directly -- they need"
" to first build a wheel, by invoking the :term:`build backend` that the "
"sdist specifies (the build backend may do all sorts of transformations while"
" building the wheel, such as compiling C extensions). For this reason, even "
"for a pure Python project, you should always upload *both* an sdist and a "
"wheel to PyPI or other package indices. This makes installation much faster "
"for your users, since a wheel is directly installable. By only including "
"files that must be installed, wheels also make for smaller downloads."
msgstr ""
"ஒரு பார்வையில், \"வெற்று மற்றும் அடிப்படை\" தூய பைதான் திட்டங்களுக்கு "
"சக்கரங்கள் உண்மையில் தேவையா என்று நீங்கள் ஆச்சரியப்படலாம். SDIST களின் "
"நெகிழ்வுத்தன்மை காரணமாக, PIP போன்ற நிறுவிகள் SDISTS இலிருந்து நேரடியாக நிறுவ"
" முடியாது என்பதை நினைவில் கொள்ளுங்கள் - அவை முதலில் ஒரு சக்கரத்தை உருவாக்க "
"வேண்டும், இதைச் செயல்படுத்துவதன் மூலம்: கால: `பின்தளத்தில் உருவாக்குங்கள்` "
"SDIST குறிப்பிடுகிறது (கட்டர் பின்தளத்தில் அனைத்தையும் செய்யலாம் சி "
"நீட்டிப்புகளை தொகுத்தல் போன்ற சக்கரத்தை உருவாக்கும் போது மாற்றங்கள்). இந்த "
"காரணத்திற்காக, தூய பைதான் திட்டத்திற்கு கூட, நீங்கள் எப்போதும் * ஒரு SDIST "
"மற்றும் PYPI அல்லது பிற தொகுப்பு குறியீடுகளுக்கு ஒரு சக்கரம் இரண்டையும் "
"பதிவேற்ற வேண்டும். ஒரு சக்கரம் நேரடியாக நிறுவக்கூடியதாக இருப்பதால், இது "
"உங்கள் பயனர்களுக்கு நிறுவலை மிக வேகமாக செய்கிறது. நிறுவப்பட வேண்டிய "
"கோப்புகளை மட்டுமே சேர்ப்பதன் மூலம், சக்கரங்கள் சிறிய பதிவிறக்கங்களையும் "
"உருவாக்குகின்றன."

#: ../source/discussions/package-formats.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On the technical level, a wheel is a ZIP archive (unlike sdists which are "
"TAR archives). You can inspect its contents by unpacking it as a normal ZIP "
"archive, e.g., using ``unzip`` on UNIX platforms like Linux and macOS, "
"``Expand-Archive`` in Powershell on Windows, or :ref:`the command line "
"interface of Python's zipfile module <python:zipfile-commandline>`. This can"
" be very useful to check that the wheel includes all the files you need it "
"to."
msgstr ""
"தொழில்நுட்ப மட்டத்தில், ஒரு சக்கரம் ஒரு சிப் காப்பகம் (தார் காப்பகங்கள் "
"SDISTS போலல்லாமல்). லினக்ச் மற்றும் மேகோச் போன்ற யூனிக்ச் இயங்குதளங்களில் ``"
" அன்சிப்`` ஐப் பயன்படுத்தி, எ.கா. பைத்தானின் சிப்ஃபைல் தொகுதியின் இடைமுகம் "
"<பைதான்: சிப்ஃபைல்-கமாண்ட்லைன்> `. சக்கரம் உங்களுக்குத் தேவையான அனைத்து "
"கோப்புகளையும் உள்ளடக்கியுள்ளதா என்பதைச் சரிபார்க்க இது மிகவும் பயனுள்ளதாக "
"இருக்கும்."

#: ../source/discussions/package-formats.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Inside a wheel, you will find the package's files, plus an additional "
"directory called :samp:`{package_name}-{version}.dist-info`. This directory "
"contains various files, including a ``METADATA`` file which is the "
"equivalent of ``PKG-INFO`` in sdists, as well as ``RECORD``. This can be "
"useful to ensure no files are missing from your wheels."
msgstr ""
"ஒரு சக்கரத்தின் உள்ளே, நீங்கள் தொகுப்பின் கோப்புகளையும், கூடுதல் "
"கோப்பகத்தையும் காணலாம்: SAMP: `{package_name}-{version} .dist-info`. இந்த "
"கோப்பகத்தில் `` மெட்டாடேட்டா`` கோப்பு உள்ளிட்ட பல்வேறு கோப்புகள் உள்ளன, இது "
"Sdists இல் `` pkg-info`` க்கு சமமானதாகும், அத்துடன் `` பதிவு``. உங்கள் "
"சக்கரங்களில் இருந்து கோப்புகள் எதுவும் இல்லை என்பதை உறுதிப்படுத்த இது "
"பயனுள்ளதாக இருக்கும்."

#: ../source/discussions/package-formats.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The file name of a wheel (ignoring some rarely used features) looks like "
"this: "
":samp:`{package_name}-{version}-{python_tag}-{abi_tag}-{platform_tag}.whl`. "
"This naming convention identifies which platforms and Python versions the "
"wheel is compatible with. For example, the name ``pip-23.3.1-py3-none-"
"any.whl`` means that:"
msgstr ""
"ஒரு சக்கரத்தின் கோப்பு பெயர் (அரிதாகவே பயன்படுத்தப்படும் சில அம்சங்களை "
"புறக்கணித்து) இதுபோன்று தெரிகிறது :: SAMP: "
"`{package_name}-{version}-{python_tag}-{abi_tag}-{platform_tag} .whl`. இந்த "
"பெயரிடும் மாநாடு எந்த தளங்கள் மற்றும் பைதான் பதிப்புகள் சக்கரம் இணக்கமானது "
"என்பதை அடையாளம் காட்டுகிறது. எடுத்துக்காட்டாக, `` பிஐபி -23.3.1-பய் 3-none-"
"yn.whl`` என்ற பெயர் இதன் பொருள்:"

#: ../source/discussions/package-formats.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"(``py3``) This wheel can be installed on any implementation of Python 3, "
"whether CPython, the most widely used Python implementation, or an "
"alternative implementation like PyPy_;"
msgstr ""
"(``py3``) This wheel can be installed on any implementation of பைதான் 3, "
"whether CPython, the பெரும்பாலானவை widely used பைதான் implementation, or an "
"alternative implementation like PyPy_;"

#: ../source/discussions/package-formats.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "(``none``) It does not depend on the Python version;"
msgstr "(`` எதுவுமில்லை``) இது பைதான் பதிப்பைப் பொறுத்தது அல்ல;"

#: ../source/discussions/package-formats.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "(``any``) It does not depend on the platform."
msgstr "(`` ஏதேனும்``) இது தளத்தை சார்ந்தது அல்ல."

#: ../source/discussions/package-formats.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The pattern ``py3-none-any`` is common for pure Python projects. Packages "
"with extension modules typically ship multiple wheels with more complex "
"tags."
msgstr ""
"தூய பைதான் திட்டங்களுக்கு `` py3-none-any-`` முறை பொதுவானது. நீட்டிப்பு "
"தொகுதிகள் கொண்ட தொகுப்புகள் பொதுவாக பல சக்கரங்களை மிகவும் சிக்கலான "
"குறிச்சொற்களுடன் அனுப்புகின்றன."

#: ../source/discussions/package-formats.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All technical details on the wheel format can be found in the :ref:`wheel "
"specification <binary-distribution-format>`."
msgstr ""
"சக்கர வடிவத்தில் உள்ள அனைத்து தொழில்நுட்ப விவரங்களையும் இதில் காணலாம்: ref: "
"`சக்கர விவரக்குறிப்பு <பைனரி-டிச்ட்ரிபியூசன்-ஃபார்மாட்>`."

#: ../source/discussions/package-formats.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What about eggs?"
msgstr "முட்டைகள் பற்றி என்ன?"

#: ../source/discussions/package-formats.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"Egg\" is an old package format that has been replaced with the wheel "
"format.  It should not be used anymore. Since August 2023, PyPI `rejects egg"
" uploads <pypi-eggs-deprecation_>`_."
msgstr ""
"\"முட்டை\" என்பது ஒரு பழைய தொகுப்பு வடிவமாகும், இது சக்கர வடிவத்துடன் "
"மாற்றப்பட்டுள்ளது. இதை இனி பயன்படுத்தக்கூடாது. ஆகச்ட் 2023 முதல், பைபி "
"`முட்டை பதிவேற்றங்களை நிராகரிக்கிறது <பைபி-எக்ச்-டி.இ.பி."

#: ../source/discussions/package-formats.rst:144
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Here's a breakdown of the important differences between wheel and egg."
msgstr ""
"சக்கரத்திற்கும் முட்டைக்கும் இடையிலான முக்கியமான வேறுபாடுகளின் முறிவு இங்கே."

#: ../source/discussions/package-formats.rst:146
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The egg format was introduced by :ref:`setuptools` in 2004, whereas the "
"wheel format was introduced by :pep:`427` in 2012."
msgstr ""
"முட்டையின் வடிவம் அறிமுகப்படுத்தப்பட்டது: ref: `setuptools` 2004 இல், சக்கர "
"வடிவம் அறிமுகப்படுத்தப்பட்டது: PEP:` 427` 2012 இல்."

#: ../source/discussions/package-formats.rst:149
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel has an :doc:`official standard specification </specifications/binary-"
"distribution-format>`. Egg did not."
msgstr ""
"சக்கரத்தில் ஒரு: டாக்: `அதிகாரப்பூர்வ தரநிலை விவரக்குறிப்பு "
"</விவரக்குறிப்புகள்/பைனரி-விநியோக வடிவங்கள்>`. முட்டை அவ்வாறு செய்யவில்லை."

#: ../source/discussions/package-formats.rst:152
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel is a :term:`distribution <Distribution Package>` format, i.e a "
"packaging format. [#wheel-importable]_ Egg was both a distribution format "
"and a runtime installation format (if left zipped), and was designed to be "
"importable."
msgstr ""
"சக்கரம் ஒரு: கால: `விநியோக <விநியோக தொகுப்பு>` வடிவம், அதாவது பேக்கேசிங் "
"வடிவம். ."

#: ../source/discussions/package-formats.rst:156
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel archives do not include ``.pyc`` files. Therefore, when the "
"distribution only contains Python files (i.e. no compiled extensions), and "
"is compatible with Python 2 and 3, it's possible for a wheel to be "
"\"universal\", similar to an :term:`sdist <Source Distribution (or "
"\"sdist\")>`."
msgstr ""
"சக்கர காப்பகங்களில் `` .பிசி`` கோப்புகள் இல்லை. ஆகையால், விநியோகத்தில் "
"பைதான் கோப்புகள் மட்டுமே இருக்கும்போது (அதாவது தொகுக்கப்பட்ட நீட்டிப்புகள் "
"இல்லை), மற்றும் பைத்தான் 2 மற்றும் 3 உடன் இணக்கமானது sdist \")>`."

#: ../source/discussions/package-formats.rst:161
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel uses standard :ref:`.dist-info directories <recording-installed-"
"packages>`.  Egg used ``.egg-info``."
msgstr ""
"வீல் தரநிலையைப் பயன்படுத்துகிறது: ref: `.டிச்ட்-இன்ஃபோ கோப்பகங்கள் "
"<பதிவு-நிறுவப்பட்ட-பேக்கேச்கள்>`. முட்டை `` .egg-info``."

#: ../source/discussions/package-formats.rst:164
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel has a :ref:`richer file naming convention <wheel-file-name-spec>`. A "
"single wheel archive can indicate its compatibility with a number of Python "
"language versions and implementations, ABIs, and system architectures."
msgstr ""
"சக்கரத்தில் ஒரு: குறிப்பு உள்ளது: `பணக்கார கோப்பு பெயரிடும் மாநாடு "
"<சக்கர-கோப்பு-பெயர்-ச்பெக்>`. ஒரு ஒற்றை சக்கர காப்பகம் பல பைதான் மொழி "
"பதிப்புகள் மற்றும் செயலாக்கங்கள், ABIS மற்றும் கணினி கட்டமைப்புகளுடன் அதன் "
"பொருந்தக்கூடிய தன்மையைக் குறிக்கலாம்."

#: ../source/discussions/package-formats.rst:168
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel is versioned. Every wheel file contains the version of the wheel "
"specification and the implementation that packaged it."
msgstr ""
"சக்கரம் பதிக்கப்பட்டுள்ளது. ஒவ்வொரு சக்கர கோப்பிலும் சக்கர விவரக்குறிப்பின் "
"பதிப்பு மற்றும் அதை தொகுத்த செயல்படுத்தல் உள்ளது."

#: ../source/discussions/package-formats.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel is internally organized by `sysconfig path type "
"<https://docs.python.org/2/library/sysconfig.html#installation-paths>`_, "
"therefore making it easier to convert to other formats."
msgstr ""
"வீல் `சிச்கான்ஃபிக் பாதை வகை "
"<https://docs.python.org/2/library/sysconfig.html#installation-paths> _ _ "
"ஆல் உள்நாட்டில் ஒழுங்கமைக்கப்பட்டுள்ளது, எனவே மற்ற வடிவங்களுக்கு மாற்றுவதை "
"எளிதாக்குகிறது."

#: ../source/discussions/package-formats.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This format is email-based. Although this would be unlikely to be chosen "
"today, backwards compatibility considerations lead to it being kept as the "
"canonical format. From the user point of view, this is mostly invisible, "
"since the metadata is specified by the user in a way understood by the build"
" backend, typically ``[project]`` in ``pyproject.toml``, and translated by "
"the build backend into ``PKG-INFO``."
msgstr ""
"இந்த வடிவம் மின்னஞ்சல் அடிப்படையிலானது. இது இன்று தேர்வு செய்யப்பட "
"வாய்ப்பில்லை என்றாலும், பின்னோக்கி பொருந்தக்கூடிய பரிசீலனைகள் நியமன வடிவமாக "
"வைக்கப்படுவதற்கு வழிவகுக்கிறது. பயனர் பார்வையில், இது பெரும்பாலும் கண்ணுக்கு"
" தெரியாதது, ஏனெனில் மேனிலை தரவு பயனரால் கட்டிய பின்தளத்தில் புரிந்து "
"கொள்ளப்பட்ட விதத்தில் குறிப்பிடப்படுகிறது, பொதுவாக `` [திட்டம்] `` "
"`pyproject.toml`` இல், மற்றும் மொழிபெயர்க்கப்பட்டுள்ளது பின்தளத்தில் `` pkg-"
"info`` இல் உருவாக்குங்கள்."

#: ../source/discussions/package-formats.rst:184
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Circumstantially, in some cases, wheels can be used as an importable runtime"
" format, although :ref:`this is not officially supported at this time "
"<binary-distribution-format-import-wheel>`."
msgstr ""
"சூழ்நிலை ரீதியாக, சில சந்தர்ப்பங்களில், சக்கரங்களை இறக்குமதி செய்யக்கூடிய "
"இயக்க நேர வடிவமாகப் பயன்படுத்தலாம், இருப்பினும்: ref: `இது அதிகாரப்பூர்வமாக "
"இந்த நேரத்தில் ஆதரிக்கப்படவில்லை <பைனரி-விநியோகத்தை "
"உருவாக்கும்-இறக்குமதி-சக்கர>`."

#: ../source/discussions/pip-vs-easy-install.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pip vs easy_install"
msgstr "PIP vs Ease_install"

#: ../source/discussions/pip-vs-easy-install.rst:9
#, placeholders:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:":ref:`easy_install <easy_install>`":":ref:`setuptools`":2004, regex:":term:`[^\s]+.*? <(Distribution Package|Python Package Index \(PyPI\))>`|`[^\s]+.*? <deprecated>`_", rst-text
msgid ""
":ref:`easy_install <easy_install>`, now `deprecated`_, was released in 2004 "
"as part of :ref:`setuptools`. It was notable at the time for installing "
":term:`packages <Distribution Package>` from :term:`PyPI <Python Package "
"Index (PyPI)>` using requirement specifiers, and automatically installing "
"dependencies."
msgstr ""
". நிறுவும் நேரத்தில் இது குறிப்பிடத்தக்கதாக இருந்தது: கால: `தொகுப்புகள் "
"<விநியோக தொகுப்பு>` இருந்து: கால: `பைபி <பைதான் தொகுப்பு குறியீட்டு (PYPI)>`"
" தேவை குறிப்பான்களைப் பயன்படுத்துதல் மற்றும் தானாகவே சார்புகளை நிறுவுதல்."

#: ../source/discussions/pip-vs-easy-install.rst:14
#, placeholders:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:":ref:`pip`":2008:":ref:`easy_install <easy_install>`":":ref:`setuptools`":":term:`Eggs <Egg>`":":term:`sdists <Source Distribution (or \"sdist\")>`", regex:":ref:`[^\s]+[^`<]*? <pip:Requirements Files>`", rst-text
msgid ""
":ref:`pip` came later in 2008, as alternative to :ref:`easy_install "
"<easy_install>`, although still largely built on top of :ref:`setuptools` "
"components.  It was notable at the time for *not* installing packages as "
":term:`Eggs <Egg>` or from :term:`Eggs <Egg>` (but rather simply as 'flat' "
"packages from :term:`sdists <Source Distribution (or \"sdist\")>`), and "
"introducing the idea of :ref:`Requirements Files <pip:Requirements Files>`, "
"which gave users the power to easily replicate environments."
msgstr ""
". தொகுப்புகளை நிறுவாத நேரத்தில் இது குறிப்பிடத்தக்கதாக இருந்தது: கால: "
"`முட்டை <முட்டை>` அல்லது இருந்து: கால: `முட்டை <முட்டை>` (ஆனால் வெறுமனே "
"'தட்டையான' தொகுப்புகளிலிருந்து: கால: `Sdists <source வழங்கல் (அல்லது "
"\"SDIST\")> `), மற்றும் யோசனையை அறிமுகப்படுத்துதல்: குறிப்பு:` தேவைகள் "
"கோப்புகள் <PIP: தேவைகள் கோப்புகள்> `, இது பயனர்களுக்கு சூழல்களை எளிதில் "
"நகலெடுக்க சக்தியைக் கொடுத்தது."

#: ../source/discussions/pip-vs-easy-install.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Here's a breakdown of the important differences between pip and the "
"deprecated easy_install:"
msgstr ""
"பிஐபி மற்றும் நீக்கப்பட்ட ஈசி_இன்ச்டால் ஆகியவற்றுக்கு இடையிலான முக்கியமான "
"வேறுபாடுகளின் முறிவு இங்கே:"

#. This string is a literal and mustn't be translated.
#: ../source/discussions/pip-vs-easy-install.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "**pip**"
msgstr "** பிப் **"

#. This string is a literal and mustn't be translated.
#: ../source/discussions/pip-vs-easy-install.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "**easy_install**"
msgstr "** Ease_install **"

#: ../source/discussions/pip-vs-easy-install.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:":term:`[^\s]+.*? <Wheel>`", rst-text
msgid "Installs from :term:`Wheels <Wheel>`"
msgstr "இதிலிருந்து நிறுவுகிறது: கால: `சக்கரங்கள் <shewel>`"

#: ../source/discussions/pip-vs-easy-install.rst:27
#: ../source/discussions/pip-vs-easy-install.rst:38
#: ../source/discussions/pip-vs-easy-install.rst:44
#: ../source/discussions/pip-vs-easy-install.rst:48
#: ../source/discussions/pip-vs-easy-install.rst:54
#: ../source/discussions/pip-vs-easy-install.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Yes"
msgstr "ஆம்"

#: ../source/discussions/pip-vs-easy-install.rst:27
#: ../source/discussions/pip-vs-easy-install.rst:30
#: ../source/discussions/pip-vs-easy-install.rst:32
#: ../source/discussions/pip-vs-easy-install.rst:35
#: ../source/discussions/pip-vs-easy-install.rst:38
#: ../source/discussions/pip-vs-easy-install.rst:44
#: ../source/discussions/pip-vs-easy-install.rst:48
#: ../source/discussions/pip-vs-easy-install.rst:51
#: ../source/discussions/pip-vs-easy-install.rst:54
#: ../source/discussions/pip-vs-easy-install.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "No"
msgstr "இல்லை"

#: ../source/discussions/pip-vs-easy-install.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Uninstall Packages"
msgstr "தொகுப்புகளை நிறுவல் நீக்குதல்"

#: ../source/discussions/pip-vs-easy-install.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Yes (``python -m pip uninstall``)"
msgstr "ஆம் (`` பைதான் -எம் பிப் நிறுவல் நீக்குதல்``)"

#: ../source/discussions/pip-vs-easy-install.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dependency Overrides"
msgstr "சார்பு மீறுகிறது"

#: ../source/discussions/pip-vs-easy-install.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:":ref:`[^\s]+.*? <pip:Requirements Files>`", rst-text
msgid "Yes (:ref:`Requirements Files <pip:Requirements Files>`)"
msgstr "ஆம் (: குறிப்பு: `தேவைகள் கோப்பு <பிப்: தேவைகள் கோப்பு>`)"

#: ../source/discussions/pip-vs-easy-install.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "List Installed Packages"
msgstr "நிறுவப்பட்ட தொகுப்புகளை பட்டியலிடுங்கள்"

#: ../source/discussions/pip-vs-easy-install.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Yes (``python -m pip list`` and ``python -m pip freeze``)"
msgstr ""
"ஆம் (`` பைதான் -எம் பிப் பட்டியல்`` மற்றும் `` பைதான் -எம் பிப் ஃப்ரீச்``)"

#: ../source/discussions/pip-vs-easy-install.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":pep:`438` Support"
msgstr ": PEP: `438` உதவி"

#: ../source/discussions/pip-vs-easy-install.rst:41
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installation format"
msgstr "நிறுவல் வடிவம்"

#: ../source/discussions/pip-vs-easy-install.rst:41
#, placeholders:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:":file:`egg-info`", rst-text
msgid "'Flat' packages with :file:`egg-info` metadata."
msgstr "'பிளாட்' தொகுப்புகள்: கோப்பு: `முட்டை-இன்ஃபோ` மேனிலை தரவு."

#: ../source/discussions/pip-vs-easy-install.rst:41
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Encapsulated Egg format"
msgstr "இணைக்கப்பட்ட முட்டை வடிவம்"

#: ../source/discussions/pip-vs-easy-install.rst:44
#, placeholders:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:sys.path, rst-text
msgid "sys.path modification"
msgstr "sys.path மாற்றம்"

#: ../source/discussions/pip-vs-easy-install.rst:48
#, placeholders:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:":term:`Eggs <Egg>`", rst-text
msgid "Installs from :term:`Eggs <Egg>`"
msgstr "இதிலிருந்து நிறுவுகிறது: கால: `முட்டை <முட்டை>`"

#: ../source/discussions/pip-vs-easy-install.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`pylauncher support`_"
msgstr "`பைலாஞ்சர் ஆதரவு`_"

#: ../source/discussions/pip-vs-easy-install.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Yes [1]_"
msgstr "ஆம் [1] _"

#: ../source/discussions/pip-vs-easy-install.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:":ref:`\w+[\w\s]* <Multi-version Installs>`", rst-text
msgid ":ref:`Multi-version Installs`"
msgstr ": குறிப்பு: `மல்டி-பதிப்பு நிறுவல்கள்`"

#: ../source/discussions/pip-vs-easy-install.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Exclude scripts during install"
msgstr "நிறுவலின் போது ச்கிரிப்ட்களை விலக்கு"

#: ../source/discussions/pip-vs-easy-install.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "per project index"
msgstr "திட்டக் குறியீட்டிற்கு"

#: ../source/discussions/pip-vs-easy-install.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Only in virtualenv"
msgstr "மெய்நிகர்இன்வியில் மட்டுமே"

#: ../source/discussions/pip-vs-easy-install.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Yes, via setup.cfg"
msgstr "ஆம், setup.cfg வழியாக"

#. This is a mismarked link. The markup needs updating.
#: ../source/discussions/pip-vs-easy-install.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid ""
"https://setuptools.readthedocs.io/en/latest/deprecated/easy_install.html#natural-"
"script-launcher"
msgstr ""
"https://setuptools.readthedocs.io/en/latest/deprecated/easy_install.html#natural-"
"script-launcher"

#: ../source/discussions/setup-py-deprecated.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Is ``setup.py`` deprecated?"
msgstr "`` Setup.py`` நீக்கப்பட்டதா?"

#: ../source/discussions/setup-py-deprecated.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "No, :term:`setup.py` and :ref:`setuptools` are not deprecated."
msgstr "இல்லை,: கால: `setup.py` மற்றும்: ref:` setuptools` நீக்கப்படவில்லை."

#: ../source/discussions/setup-py-deprecated.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Setuptools is perfectly usable as a :term:`build backend` for packaging "
"Python projects. And :file:`setup.py` is a valid configuration file for "
":ref:`setuptools` that happens to be written in Python, instead of in *TOML*"
" for example (a similar practice is used by other tools like *nox* and its "
":file:`noxfile.py` configuration file, or *pytest* and :file:`conftest.py`)."
msgstr ""
"Setuptools ஒரு: கால: `பின்தளத்தில் உருவாக்கு` பைதான் திட்டங்களை பேக்கேசிங் "
"செய்வதற்கு முற்றிலும் பயன்படுத்தக்கூடியது. மேலும்: கோப்பு: `setup.py` என்பது"
" இதற்கான சரியான உள்ளமைவு கோப்பு: குறிப்பு:` செட்டப்டூல்ச்` இது பைத்தானில் "
"எழுதப்படுகிறது, எடுத்துக்காட்டாக *டாம்ல் *க்கு பதிலாக (இதேபோன்ற நடைமுறை *Nox"
" *போன்ற பிற கருவிகளால் பயன்படுத்தப்படுகிறது மற்றும் அதன்: கோப்பு: "
"`noxfile.py` உள்ளமைவு கோப்பு, அல்லது * பைட்டெச்ட் * மற்றும்: கோப்பு:` "
"conftest.py`)."

#: ../source/discussions/setup-py-deprecated.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, ``python setup.py`` and the use of :file:`setup.py` as a command "
"line tool are deprecated."
msgstr ""
"இருப்பினும், `` பைதான் setup.py`` மற்றும் பயன்பாடு: கோப்பு: `setup.py` ஒரு "
"கட்டளை வரி கருவியாக நீக்கப்படும்."

#: ../source/discussions/setup-py-deprecated.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This means that commands such as the following **MUST NOT** be run anymore:"
msgstr "இதன் பொருள் பின்வரும் ** போன்ற கட்டளைகள் ** இனி இயக்கப்படக்கூடாது:"

#: ../source/discussions/setup-py-deprecated.rst:23
#: ../source/discussions/setup-py-deprecated.rst:35
#: ../source/guides/modernize-setup-py-project.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python setup.py install``"
msgstr "`` பைதான் setup.py install``"

#: ../source/discussions/setup-py-deprecated.rst:24
#: ../source/discussions/setup-py-deprecated.rst:37
#: ../source/guides/modernize-setup-py-project.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python setup.py develop``"
msgstr "`` பைதான் setup.py உருவாக்கு``"

#: ../source/discussions/setup-py-deprecated.rst:25
#: ../source/discussions/setup-py-deprecated.rst:39
#: ../source/guides/modernize-setup-py-project.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python setup.py sdist``"
msgstr "`` பைதான் setup.py sdist``"

#: ../source/discussions/setup-py-deprecated.rst:26
#: ../source/discussions/setup-py-deprecated.rst:41
#: ../source/guides/modernize-setup-py-project.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python setup.py bdist_wheel``"
msgstr "`` பைதான் setup.py bdist_wheel``"

#: ../source/discussions/setup-py-deprecated.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What commands should be used instead?"
msgstr "அதற்கு பதிலாக என்ன கட்டளைகளைப் பயன்படுத்த வேண்டும்?"

#: ../source/discussions/setup-py-deprecated.rst:33
#: ../source/guides/modernize-setup-py-project.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Deprecated"
msgstr "மதிப்பிடப்பட்டது"

#: ../source/discussions/setup-py-deprecated.rst:33
#: ../source/guides/modernize-setup-py-project.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Recommendation"
msgstr "பரிந்துரை"

#: ../source/discussions/setup-py-deprecated.rst:35
#: ../source/guides/modernize-setup-py-project.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m pip install .``"
msgstr "`` பைதான் -எம் பிஐபி நிறுவல் .``"

#: ../source/discussions/setup-py-deprecated.rst:37
#: ../source/guides/modernize-setup-py-project.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m pip install --editable .``"
msgstr "`` பைதான் -எம் பிஐபி நிறுவல் -அடைக்கக்கூடியது .``"

#: ../source/discussions/setup-py-deprecated.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m build`` [#needs-build]_"
msgstr "`` பைதான் -எம் பில்ட்`` [#தேவைகள் -கட்டுதல்] _"

#: ../source/discussions/setup-py-deprecated.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This requires the :ref:`build` dependency. It is recommended to always build"
" and publish both the source distribution and wheel of a project, which is "
"what ``python -m build`` does. If necessary the ``--sdist`` and ``--wheel`` "
"options can be used to generate only one or the other."
msgstr ""
"இதற்கு: ref: `உருவாக்கு` சார்பு தேவை. ஒரு திட்டத்தின் மூல வழங்கல் மற்றும் "
"சக்கரம் இரண்டையும் எப்போதும் உருவாக்கி வெளியிட பரிந்துரைக்கப்படுகிறது, "
"இதுதான் `` பைதான் -எம் பில்ட்`` செய்கிறது. தேவைப்பட்டால் ``--ச்டிச்ட்`` "
"மற்றும் ``-வீல்`` விருப்பங்கள் ஒன்று அல்லது மற்றொன்றை மட்டுமே உருவாக்க "
"பயன்படுத்தப்படலாம்."

#: ../source/discussions/setup-py-deprecated.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to install a setuptools based project, it was common to run "
":file:`setup.py`'s ``install`` command such as: ``python setup.py install``."
" Nowadays, the recommended method is to use :ref:`pip` directly with a "
"command like this one: ``python -m pip install .``. Where the dot ``.`` is "
"actually a file system path, it is the path notation for the current "
"directory. Indeed, *pip* accepts a path to a project's source tree directory"
" on the local filesystem as argument to its ``install`` sub-command. So this"
" would also be a valid command: ``python -m pip install path/to/project``."
msgstr ""
"செட்ப்டூல்ச் அடிப்படையிலான திட்டத்தை நிறுவுவதற்கு, இயங்குவது பொதுவானது: "
"கோப்பு: `setup.py` இன்` `நிறுவு` கட்டளை போன்றவை:` `பைதான் அமைவு. "
"இப்போதெல்லாம், பரிந்துரைக்கப்பட்ட முறை பயன்படுத்த வேண்டும்: குறிப்பு: "
"`பிஐபி` இது போன்ற ஒரு கட்டளையுடன் நேரடியாக:` `பைதான் -எம் பிஐபி நிறுவல் .``."
" புள்ளி `` .`` உண்மையில் ஒரு கோப்பு முறைமை பாதை, இது தற்போதைய "
"கோப்பகத்திற்கான பாதை குறியீடாகும். உண்மையில், * பிப் * உள்ளக கோப்பு "
"முறைமையில் ஒரு திட்டத்தின் மூல மர கோப்பகத்திற்கான பாதையை அதன் `` நிறுவல்` "
"துணை கட்டளைக்கு வாதமாக ஏற்றுக்கொள்கிறது. எனவே இது செல்லுபடியாகும் "
"கட்டளையாகவும் இருக்கும்: `` பைதான் -எம் பிஐபி நிறுவல் பாதை/முதல்/திட்டம்``."

#: ../source/discussions/setup-py-deprecated.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As for the installation in *develop* mode aka *editable* mode, instead of "
"``python setup.py develop`` one can use the ``--editable`` option of pip's "
"*install* sub-command: ``python -m pip install --editable .``."
msgstr "* `` பைதான் அமைவு. -M PIP நிறுவல் --diable .``."

#: ../source/discussions/setup-py-deprecated.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"One recommended, simple, and straightforward method of building "
":term:`source distributions <Source Distribution (or \"sdist\")>` and "
":term:`wheels <Wheel>` is to use the :ref:`build` tool with a command like "
"``python -m build`` which triggers the generation of both distribution "
"formats. If necessary the ``--sdist`` and ``--wheel`` options can be used to"
" generate only one or the other. Note that the build tool needs to be "
"installed separately."
msgstr ""
"ஒரு பரிந்துரைக்கப்பட்ட, எளிமையான மற்றும் நேரடியான கட்டிடம்: கால: `மூல "
"வழங்கல் <மூல வழங்கல் (அல்லது\" SDIST \")>` மற்றும்: கால: `சக்கரங்கள் "
"<shewel>` பயன்படுத்த வேண்டும்: ref: `உருவாக்கு` கருவி a `` பைதான் -எம் "
"பில்ட்` போன்ற கட்டளை இரண்டு விநியோக வடிவங்களின் தலைமுறையையும் தூண்டுகிறது. "
"தேவைப்பட்டால் ``--ச்டிச்ட்`` மற்றும் ``-வீல்`` விருப்பங்கள் ஒன்று அல்லது "
"மற்றொன்றை மட்டுமே உருவாக்க பயன்படுத்தப்படலாம். உருவாக்க கருவி தனித்தனியாக "
"நிறுவப்பட வேண்டும் என்பதை நினைவில் கொள்க."

#: ../source/discussions/setup-py-deprecated.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The command ``python setup.py install`` was deprecated in setuptools version"
" *58.3.0*."
msgstr "`` பைதான் அமைவு."

#: ../source/discussions/setup-py-deprecated.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What about other commands?"
msgstr "மற்ற கட்டளைகளைப் பற்றி என்ன?"

#: ../source/discussions/setup-py-deprecated.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What are some replacements for the other ``python setup.py`` commands?"
msgstr "மற்ற `` பைதான் அமைவு.பை`` கட்டளைகளுக்கு சில மாற்றீடுகள் யாவை?"

#: ../source/discussions/setup-py-deprecated.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python setup.py test``"
msgstr "`` பைதான் setup.py test``"

#: ../source/discussions/setup-py-deprecated.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The recommendation is to use a test runner such as pytest_."
msgstr "Pytest_ போன்ற சோதனை ரன்னரைப் பயன்படுத்த வேண்டும் என்று பரிந்துரை."

#: ../source/discussions/setup-py-deprecated.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``python setup.py check``, ``python setup.py register``, and ``python "
"setup.py upload``"
msgstr "`` பைதான் அமைவு."

#: ../source/discussions/setup-py-deprecated.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A trusted replacement is :ref:`twine`:"
msgstr "நம்பகமான மாற்றீடு: ref: `ட்வைன்`:"

#: ../source/discussions/setup-py-deprecated.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m twine check --strict dist/*``"
msgstr "`` பைதான் -எம் கயிறு காசோலை - -ச்ட்ரிக்ட் டிச்ட்/*``"

#: ../source/discussions/setup-py-deprecated.rst:104
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m twine register dist/*.whl`` [#not-pypi]_"
msgstr "`` பைதான் -எம் ட்வைன் பதிவு Dist/*."

#: ../source/discussions/setup-py-deprecated.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m twine upload dist/*``"
msgstr "`` பைதான் -எம் கயிறு பதிவேற்றியது dist/*``"

#: ../source/discussions/setup-py-deprecated.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Not necessary, nor supported on :term:`PyPI <Python Package Index (PyPI)>`. "
"But might be necessary on other :term:`package indexes <package index>` (for"
" example :ref:`devpi`)."
msgstr ""
"தேவையில்லை, அல்லது ஆதரிக்கப்படவில்லை: கால: `பைபி <பைதான் தொகுப்பு அட்டவணை "
"(பைபி)>`. ஆனால் மற்றவற்றில் அவசியமாக இருக்கலாம்: கால: `தொகுப்பு குறியீடுகள் "
"<தொகுப்பு குறியீட்டு>` (எடுத்துக்காட்டாக: குறிப்பு: `தேவ்பி`)."

#: ../source/discussions/setup-py-deprecated.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python setup.py --version``"
msgstr "`` பைதான் setup.py --version``"

#: ../source/discussions/setup-py-deprecated.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A possible replacement solution (among others) is to rely on setuptools-"
"scm_:"
msgstr ""
"சாத்தியமான மாற்று தீர்வு (மற்றவற்றுடன்) Setuptools-SCM_ ஐ நம்புவதாகும்:"

#: ../source/discussions/setup-py-deprecated.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m setuptools_scm``"
msgstr "`` பைதான் -எம் செட்டப்டூல்ச்_எச்சிஎம்``"

#: ../source/discussions/setup-py-deprecated.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Remaining commands"
msgstr "மீதமுள்ள கட்டளைகள்"

#: ../source/discussions/setup-py-deprecated.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide does not make suggestions of replacement solutions for those "
"commands:"
msgstr ""
"இந்த வழிகாட்டி அந்த கட்டளைகளுக்கு மாற்று தீர்வுகளின் பரிந்துரைகளை வழங்காது:"

#: ../source/discussions/setup-py-deprecated.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``alias``"
msgstr "`` மாற்றுப்பெயர்``"

#: ../source/discussions/setup-py-deprecated.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``bdist``"
msgstr "`` bdist``"

#: ../source/discussions/setup-py-deprecated.rst:131
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``bdist_dumb``"
msgstr "`` bdist_dumb``"

#: ../source/discussions/setup-py-deprecated.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``bdist_egg``"
msgstr "`` bdist_egg``"

#: ../source/discussions/setup-py-deprecated.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``bdist_rpm``"
msgstr "`` bdist_rpm``"

#: ../source/discussions/setup-py-deprecated.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``build``"
msgstr "`` பில்ட்``"

#: ../source/discussions/setup-py-deprecated.rst:135
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``build_clib``"
msgstr "`Build_clib``"

#: ../source/discussions/setup-py-deprecated.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``build_ext``"
msgstr "`` build_ext``"

#: ../source/discussions/setup-py-deprecated.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``build_py``"
msgstr "`` build_py``"

#: ../source/discussions/setup-py-deprecated.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``build_scripts``"
msgstr "`` build_scripts``"

#: ../source/discussions/setup-py-deprecated.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``clean``"
msgstr "`` சுத்தம்`"

#: ../source/discussions/setup-py-deprecated.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``dist_info``"
msgstr "`` dist_info``"

#: ../source/discussions/setup-py-deprecated.rst:141
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``easy_install``"
msgstr "`` ஈசி_இன்ச்டால்``"

#: ../source/discussions/setup-py-deprecated.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``editable_wheel``"
msgstr "`` எடிபிள்_வீல்``"

#: ../source/discussions/setup-py-deprecated.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``egg_info``"
msgstr "`` முட்டை_இன்ஃபோ``"

#: ../source/discussions/setup-py-deprecated.rst:144
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``install_data``"
msgstr "`` install_data``"

#: ../source/discussions/setup-py-deprecated.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``install_egg_info``"
msgstr "`` install_egg_info``"

#: ../source/discussions/setup-py-deprecated.rst:146
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``install_headers``"
msgstr "`` install_headers``"

#: ../source/discussions/setup-py-deprecated.rst:147
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``install_lib``"
msgstr "`` install_lib``"

#: ../source/discussions/setup-py-deprecated.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``install_scripts``"
msgstr "`` install_scripts``"

#: ../source/discussions/setup-py-deprecated.rst:149
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``rotate``"
msgstr "`` சுழற்றுங்கள்``"

#: ../source/discussions/setup-py-deprecated.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``saveopts``"
msgstr "`` சேமிஆப்ச்``"

#: ../source/discussions/setup-py-deprecated.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``setopt``"
msgstr "`` Setoptt \"`"

#: ../source/discussions/setup-py-deprecated.rst:152
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``upload_docs``"
msgstr "`` பதிவேற்றம்_டாக்ச்``"

#: ../source/discussions/setup-py-deprecated.rst:156
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What about custom commands?"
msgstr "தனிப்பயன் கட்டளைகள் பற்றி என்ன?"

#: ../source/discussions/setup-py-deprecated.rst:158
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Likewise, custom :file:`setup.py` commands are deprecated. The "
"recommendation is to migrate those custom commands to a task runner tool or "
"any other similar tool. Some examples of such tools are: chuy, make, nox or "
"tox, pydoit, pyinvoke, taskipy, and thx."
msgstr ""
"அதேபோல், தனிப்பயன்: கோப்பு: `setup.py` கட்டளைகள் நீக்கப்படுகின்றன. அந்த "
"தனிப்பயன் கட்டளைகளை ஒரு பணி ரன்னர் கருவி அல்லது வேறு எந்த இதே போன்ற "
"கருவிக்கு மாற்றுவதே பரிந்துரை. அத்தகைய கருவிகளின் சில எடுத்துக்காட்டுகள்: "
"சூய், மேக், நோக்ச் அல்லது டாக்ச், பைடோயிட், பைன்வோக், டாச்கிபி மற்றும் Thx."

#: ../source/discussions/setup-py-deprecated.rst:166
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What about custom build steps?"
msgstr "தனிப்பயன் உருவாக்க படிகள் பற்றி என்ன?"

#: ../source/discussions/setup-py-deprecated.rst:168
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Custom build steps that for example either overwrite existing steps such as "
"``build_py``, ``build_ext``, and ``bdist_wheel`` or add new build steps are "
"not deprecated. Those will be automatically called as expected."
msgstr ""
"தனிப்பயன் உருவாக்க படிகள் எடுத்துக்காட்டாக, `` `பில்ட்_பி``,` "
"`பில்ட்_எக்ச்ட்``, மற்றும்` `bdist_wheel`` போன்ற படிகளை மேலெழுதும் அல்லது "
"புதிய உருவாக்க படிகளைச் சேர்க்காது. அவை தானாகவே எதிர்பார்த்தபடி "
"அழைக்கப்படும்."

#: ../source/discussions/setup-py-deprecated.rst:175
#: ../source/guides/modernize-setup-py-project.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Should ``setup.py`` be deleted?"
msgstr "`` Setup.py`` நீக்கப்பட வேண்டுமா?"

#: ../source/discussions/setup-py-deprecated.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Although the usage of :file:`setup.py` as an executable script is "
"deprecated, its usage as a configuration file for setuptools is absolutely "
"fine. There is likely no modification needed in :file:`setup.py`."
msgstr ""
"இதன் பயன்பாடு: கோப்பு: `setup.py` ஒரு இயங்கக்கூடிய ச்கிரிப்டாக "
"நீக்கப்பட்டாலும், செட்டுப்டூல்களுக்கான உள்ளமைவு கோப்பாக அதன் பயன்பாடு "
"முற்றிலும் நன்றாக உள்ளது. இதில் எந்த மாற்றமும் தேவையில்லை: கோப்பு: "
"`setup.py`."

#: ../source/discussions/setup-py-deprecated.rst:183
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Is ``pyproject.toml`` mandatory?"
msgstr "`` Pyproject.toml`` கட்டாயமா?"

#: ../source/discussions/setup-py-deprecated.rst:185
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While it is not technically necessary yet, it is **STRONGLY RECOMMENDED** "
"for a project to have a :file:`pyproject.toml` file at the root of its "
"source tree with a content like this:"
msgstr ""
"இது தொழில்நுட்ப ரீதியாக இன்னும் அவசியமில்லை என்றாலும், ஒரு திட்டத்தை ஒரு "
"திட்டத்தை வைத்திருப்பது ** ** ** ** ஒரு: கோப்பு: `pyproject.toml` கோப்பு "
"அதன் மூல மரத்தின் மூலத்தில் இது போன்ற உள்ளடக்கத்துடன்:"

#: ../source/discussions/setup-py-deprecated.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The guide :ref:`modernize-setup-py-project` has more details about this."
msgstr ""
"வழிகாட்டி: ref: `நவீனமயமாக்கல்-செட்டப்-ப்-திட்டத்தை 'இது குறித்த கூடுதல் "
"விவரங்கள் உள்ளன."

#: ../source/discussions/setup-py-deprecated.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The standard fallback behavior for a :term:`build frontend <Build Frontend>`"
" in the absence of a :file:`pyproject.toml` file and its ``[build-system]`` "
"table is to assume that the :term:`build backend <Build Backend>` is "
"setuptools."
msgstr ""
"ஒரு: காலத்திற்கான நிலையான குறைவடையும் நடத்தை: `பில்ட் ஃபிரான்டென்ட் <பில்ட் "
"ஃபிரான்டெண்ட்>` ஒரு: கோப்பு: `pyproject.toml` கோப்பு மற்றும் அதன்` "
"`[பில்ட்-சிச்டம்]` `அட்டவணை என்று கருதுவது: காலமானது : `பின்தளத்தில் "
"உருவாக்கு <பின்தளத்தில் உருவாக்கு>` என்பது setuptools."

#: ../source/discussions/setup-py-deprecated.rst:204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Why? What does it all mean?"
msgstr "ஏன்? இது என்ன அர்த்தம்?"

#: ../source/discussions/setup-py-deprecated.rst:206
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"One way to look at it is that the scope of setuptools has now been reduced "
"to the role of a build backend."
msgstr ""
"அதைப் பார்ப்பதற்கான ஒரு வழி என்னவென்றால், செடுப்டூல்களின் நோக்கம் இப்போது "
"ஒரு கட்டமைப்பை பின்தளத்தில் குறைத்துள்ளது."

#: ../source/discussions/setup-py-deprecated.rst:211
#: ../source/guides/modernize-setup-py-project.rst:244
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Where to read more about this?"
msgstr "இதைப் பற்றி மேலும் படிக்க எங்கே?"

#: ../source/discussions/setup-py-deprecated.rst:213
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Why you shouldn't invoke setup.py directly "
"<https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html>`__ by "
"Paul Ganssle"
msgstr ""
"`நீங்கள் ஏன் setup.py ஐ நேரடியாக அழைக்கக்கூடாது "
"<https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html>` __ பால்"
" கன்ச்லே"

#: ../source/discussions/setup-py-deprecated.rst:215
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`setuptools:deprecated/commands`"
msgstr ": டாக்: `செட்ப்டூல்ச்: நீக்கப்பட்ட/கட்டளைகள்`"

#: ../source/discussions/single-source-version.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Single-sourcing the Project Version"
msgstr "திட்ட பதிப்பில் ஒற்றை-மூல"

#: ../source/discussions/single-source-version.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Complete"
msgstr "முழுமையானது"

#: ../source/discussions/single-source-version.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2024-10-07"
msgstr "2024-10-07"

#: ../source/discussions/single-source-version.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Many Python :term:`distribution packages <Distribution Package>` publish a "
"single Python :term:`import package <Import Package>` where it is desired "
"that the runtime ``__version__`` attribute on the import package report the "
"same version specifier as :func:`importlib.metadata.version` reports for the"
" distribution package (as described in :ref:`runtime-version-access`)."
msgstr ""
"பல பைதான்: கால: `விநியோக தொகுப்புகள் <விநியோக தொகுப்பு>` ஒரு பைதானை "
"வெளியிடுங்கள்: கால: `இறக்குமதி தொகுப்பு <இறக்குமதி தொகுப்பு>` அங்கு இயக்க "
"நேரம் `__ வழிமுறை__`` இறக்குமதி தொகுப்பில் பண்புக்கூறு அதே பதிப்பு "
"விவரக்குறிப்பை அறிக்கையிட வேண்டும் AS: func: `importlib.metadata.version` "
"விநியோக தொகுப்புக்கான அறிக்கைகள் (விவரிக்கப்பட்டுள்ளபடி: குறிப்பு:` இயக்க "
"நேர-பதிப்பு-அணுகல்`)."

#: ../source/discussions/single-source-version.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is also frequently desired that this version information be derived from "
"a version control system *tag* (such as ``v1.2.3``) rather than being "
"manually updated in the source code."
msgstr ""
"மூலக் குறியீட்டில் கைமுறையாக புதுப்பிக்கப்படுவதை விட இந்த பதிப்பு செய்தி "
"பதிப்பு கட்டுப்பாட்டு அமைப்பு * குறிச்சொல் * (`` v1.2.3`` போன்றவை) இலிருந்து"
" பெறப்பட வேண்டும் என்பதும் அடிக்கடி விரும்பப்படுகிறது."

#: ../source/discussions/single-source-version.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some projects may choose to simply live with the data entry duplication, and"
" rely on automated testing to ensure the different values do not diverge."
msgstr ""
"சில திட்டங்கள் தரவு நுழைவு நகலுடன் வாழ தேர்வு செய்யலாம், மேலும் வெவ்வேறு "
"மதிப்புகள் வேறுபடுவதில்லை என்பதை உறுதிப்படுத்த தானியங்கு சோதனையை "
"நம்பியிருக்கலாம்."

#: ../source/discussions/single-source-version.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Alternatively, a project's chosen build system may offer a way to define a "
"single source of truth for the version number."
msgstr ""
"மாற்றாக, ஒரு திட்டத்தின் தேர்ந்தெடுக்கப்பட்ட உருவாக்க அமைப்பு பதிப்பு "
"எண்ணுக்கு உண்மையின் ஒரு மூலத்தை வரையறுக்க ஒரு வழியை வழங்கக்கூடும்."

#: ../source/discussions/single-source-version.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "In general, the options are:"
msgstr "பொதுவாக, விருப்பங்கள்:"

#: ../source/discussions/single-source-version.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the code is in a version control system (VCS), such as Git, then the "
"version can be extracted from the VCS."
msgstr ""
"குறியீடு ஒரு பதிப்பு கட்டுப்பாட்டு அமைப்பில் (VCS), அதாவது git போன்றவை "
"என்றால், பதிப்பை பகஅ இலிருந்து பிரித்தெடுக்க முடியும்."

#: ../source/discussions/single-source-version.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The version can be hard-coded into the :file:`pyproject.toml` file -- and "
"the build system can copy it into other locations it may be required."
msgstr ""
"பதிப்பை: கோப்பு: `pyproject.toml` கோப்பில் கடினமாக குறியிடப்படலாம்-மேலும் "
"கட்டட அமைப்பு அதை தேவைப்படக்கூடிய பிற இடங்களுக்கு நகலெடுக்க முடியும்."

#: ../source/discussions/single-source-version.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The version string can be hard-coded into the source code -- either in a "
"special purpose file, such as :file:`_version.txt` (which must then be "
"shipped as part of the project's source distribution package), or as an "
"attribute in a particular module, such as :file:`__init__.py`. The build "
"system can then extract it from the runtime location at build time."
msgstr ""
"பதிப்பு சரம் மூலக் குறியீட்டில் கடினமாக குறியிடப்படலாம்-ஒரு சிறப்பு நோக்கக் "
"கோப்பில், போன்றவை: கோப்பு: `_version.txt` (பின்னர் திட்டத்தின் மூல விநியோக "
"தொகுப்பின் ஒரு பகுதியாக அனுப்பப்பட வேண்டும்), அல்லது ஒரு ஒரு குறிப்பிட்ட "
"தொகுதியில் பண்புக்கூறு, போன்றவை: கோப்பு: `__init __. py`. பில்ட் சிச்டம் "
"பின்னர் அதை உருவாக்கும் நேரத்தில் இயக்க நேர இடத்திலிருந்து பிரித்தெடுக்க "
"முடியும்."

#: ../source/discussions/single-source-version.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Consult your build system's documentation for their recommended method."
msgstr ""
"அவற்றின் பரிந்துரைக்கப்பட்ட முறைக்கு உங்கள் உருவாக்க அமைப்பின் ஆவணங்களை "
"அணுகவும்."

#: ../source/discussions/single-source-version.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When the intention is that a distribution package and its associated import "
"package share the same version, it is recommended that the project include "
"an automated test case that ensures ``import_name.__version__`` and "
"``importlib.metadata.version(\"dist-name\")`` report the same value (note: "
"for many projects, ``import_name`` and ``dist-name`` will be the same name)."
msgstr ""
"ஒரு விநியோக தொகுப்பும் அதனுடன் தொடர்புடைய இறக்குமதி தொகுப்பும் ஒரே பதிப்பைப்"
" பகிர்ந்து கொள்ள வேண்டும் என்ற நோக்கம் இருக்கும்போது, ​​திட்டத்தில் ஒரு "
"தானியங்கி சோதனை வழக்கு அடங்கும், இது `` இறக்குமதி_பெயர் .__ பதிப்பு __`` "
"மற்றும் `` இறக்குமதி லிப். பெயர் \")` `அதே மதிப்பைப் புகாரளிக்கவும் "
"(குறிப்பு: பல திட்டங்களுக்கு,` `இறக்குமதி_நாம்`` மற்றும்` `டிச்ட்-பெயர்`` "
"ஒரே பெயராக இருக்கும்)."

#: ../source/discussions/single-source-version.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Build System Version Handling"
msgstr "கணினி பதிப்பு கையாளுதலை உருவாக்குங்கள்"

#: ../source/discussions/single-source-version.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following are links to some build system's documentation for handling "
"version strings."
msgstr ""
"பதிப்பு சரங்களைக் கையாள்வதற்கான சில உருவாக்க அமைப்பின் ஆவணங்களுக்கான "
"இணைப்புகள் பின்வருமாறு."

#: ../source/discussions/single-source-version.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Flit <https://flit.pypa.io/en/stable/>`_"
msgstr "`ஃபிளிட் <https://flit.pypa.io/en/stable/>` _"

#: ../source/discussions/single-source-version.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Hatchling <https://hatch.pypa.io/1.9/version/>`_"
msgstr "`அட்ச்லிங் <https://hatch.pypa.io/1.9/version/>` _"

#: ../source/discussions/single-source-version.rst:58
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`PDM <https://pdm-project.org/en/latest/reference/pep621/#__tabbed_1_2>`_"
msgstr ""
"`Pdm <https://pdm-project.org/en/latest/reference/pep621/#__tabbed_1_2>` _"

#: ../source/discussions/single-source-version.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Setuptools "
"<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-"
"metadata>`_"
msgstr ""
"`Setuptools "
"<https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html#dynamic-"
"metadata>` _"

#: ../source/discussions/single-source-version.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`setuptools_scm <https://setuptools-scm.readthedocs.io/en/latest/>`_"
msgstr "`setuptools_scm <https://setuptools-scm.readthedocs.io/en/latest/>` _"

#: ../source/discussions/src-layout-vs-flat-layout.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "src layout vs flat layout"
msgstr "எச்.ஆர்.சி தளவமைப்பு vs பிளாட் தளவமைப்பு"

#: ../source/discussions/src-layout-vs-flat-layout.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The \"flat layout\" refers to organising a project's files in a folder or "
"repository, such that the various configuration files and :term:`import "
"packages <Import Package>` are all in the top-level directory."
msgstr ""
"\"பிளாட் தளவமைப்பு\" என்பது ஒரு திட்டத்தின் கோப்புகளை ஒரு கோப்புறை அல்லது "
"களஞ்சியத்தில் ஒழுங்கமைப்பதைக் குறிக்கிறது, அதாவது பல்வேறு உள்ளமைவு கோப்புகள்"
" மற்றும்: கால: `இறக்குமதி தொகுப்புகள் <இறக்குமதி தொகுப்பு>` அனைத்தும் "
"உயர்மட்ட கோப்பகத்தில் உள்ளன."

#: ../source/discussions/src-layout-vs-flat-layout.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The \"src layout\" deviates from the flat layout by moving the code that is "
"intended to be importable (i.e. ``import awesome_package``, also known as "
":term:`import packages <Import Package>`) into a subdirectory. This "
"subdirectory is typically named ``src/``, hence \"src layout\"."
msgstr ""
"\"எச்.ஆர்.சி தளவமைப்பு\" இறக்குமதி செய்யக்கூடிய குறியீட்டை நகர்த்துவதன் "
"மூலம் தட்டையான தளவமைப்பிலிருந்து விலகிச் செல்கிறது (அதாவது `` `இறக்குமதி "
"அற்புதமான_பேக்கேச்`, மேலும் இது அழைக்கப்படுகிறது: கால:` இறக்குமதி "
"தொகுப்புகள் <இறக்குமதி தொகுப்பு> `) ஒரு துணை அடைவில். இந்த துணை அடைவு "
"பொதுவாக `` SRC/`` என்று பெயரிடப்பட்டுள்ளது, எனவே \"SRC தளவமைப்பு\"."

#: ../source/discussions/src-layout-vs-flat-layout.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Here's a breakdown of the important behaviour differences between the src "
"layout and the flat layout:"
msgstr ""
"எச்.ஆர்.சி தளவமைப்பு மற்றும் தட்டையான தளவமைப்புக்கு இடையிலான முக்கியமான "
"நடத்தை வேறுபாடுகளின் முறிவு இங்கே:"

#: ../source/discussions/src-layout-vs-flat-layout.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The src layout requires installation of the project to be able to run its "
"code, and the flat layout does not."
msgstr ""
"எச்.ஆர்.சி தளவமைப்புக்கு அதன் குறியீட்டை இயக்க திட்டத்தை நிறுவ வேண்டும், "
"மேலும் தட்டையான தளவமைப்பு இல்லை."

#: ../source/discussions/src-layout-vs-flat-layout.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This means that the src layout involves an additional step in the "
"development workflow of a project (typically, an :doc:`editable installation"
" <setuptools:userguide/development_mode>` is used for development and a "
"regular installation is used for testing)."
msgstr ""
"இதன் பொருள் எச்.ஆர்.சி தளவமைப்பு ஒரு திட்டத்தின் மேம்பாட்டு பணிப்பாய்வுகளில்"
" கூடுதல் படியை உள்ளடக்கியது (பொதுவாக, ஒரு: டிஓசி: `திருத்தக்கூடிய நிறுவல் "
"<செட்டப்டூல்ச்: யூசர்சூட்/டெவலப்மென்ட்_மோட்>` வளர்ச்சிக்கு "
"பயன்படுத்தப்படுகிறது மற்றும் சோதனைக்கு வழக்கமான நிறுவல் "
"பயன்படுத்தப்படுகிறது)."

#: ../source/discussions/src-layout-vs-flat-layout.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The src layout helps prevent accidental usage of the in-development copy of "
"the code."
msgstr ""
"எச்.ஆர்.சி தளவமைப்பு குறியீட்டின் மேம்பாட்டு நகலின் தற்செயலான பயன்பாட்டைத் "
"தடுக்க உதவுகிறது."

#: ../source/discussions/src-layout-vs-flat-layout.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is relevant since the Python interpreter includes the current working "
"directory as the first item on the import path. This means that if an import"
" package exists in the current working directory with the same name as an "
"installed import package, the variant from the current working directory "
"will be used. This can lead to subtle  misconfiguration of the project's "
"packaging tooling, which could result in files not being included in a "
"distribution."
msgstr ""
"பைதான் மொழிபெயர்ப்பாளர் இறக்குமதி பாதையில் முதல் உருப்படியாக தற்போதைய பணி "
"கோப்பகத்தை உள்ளடக்கியிருப்பதால் இது பொருத்தமானது. இதன் பொருள், நிறுவப்பட்ட "
"இறக்குமதி தொகுப்பின் அதே பெயருடன் தற்போதைய பணி கோப்பகத்தில் இறக்குமதி "
"தொகுப்பு இருந்தால், தற்போதைய பணி கோப்பகத்திலிருந்து மாறுபாடு "
"பயன்படுத்தப்படும். இது திட்டத்தின் பேக்கேசிங் கருவியின் நுட்பமான தவறான "
"கட்டமைப்பிற்கு வழிவகுக்கும், இதன் விளைவாக கோப்புகள் விநியோகத்தில் "
"சேர்க்கப்படாது."

#: ../source/discussions/src-layout-vs-flat-layout.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The src layout helps avoid this by keeping import packages in a directory "
"separate from the root directory of the project, ensuring that the installed"
" copy is used."
msgstr ""
"எச்.ஆர்.சி தளவமைப்பு இதைத் தவிர்க்க உதவுகிறது, இறக்குமதி தொகுப்புகளை "
"திட்டத்தின் ரூட் கோப்பகத்திலிருந்து பிரித்து, நிறுவப்பட்ட நகல் "
"பயன்படுத்தப்படுவதை உறுதிசெய்கிறது."

#: ../source/discussions/src-layout-vs-flat-layout.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The src layout helps enforce that an :doc:`editable installation "
"<setuptools:userguide/development_mode>` is only able to import files that "
"were meant to be importable."
msgstr ""
"எச்.ஆர்.சி தளவமைப்பு ஒரு: டாக்: `திருத்தக்கூடிய நிறுவல் <செட்டப்டூல்ச்: "
"யூசர்சூட்/டெவலப்மென்ட்_மோட்>` இறக்குமதி செய்யக்கூடிய கோப்புகளை மட்டுமே "
"இறக்குமதி செய்ய முடியும் என்பதை செயல்படுத்த உதவுகிறது."

#: ../source/discussions/src-layout-vs-flat-layout.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is especially relevant when the editable installation is implemented "
"using a `path configuration file "
"<https://docs.python.org/3/library/site.html#index-2>`_ that adds the "
"directory to the import path."
msgstr ""
"`பாதை உள்ளமைவு கோப்பைப் பயன்படுத்தி திருத்தக்கூடிய நிறுவல் "
"செயல்படுத்தப்படும்போது இது மிகவும் பொருத்தமானது "
"<https://docs.python.org/3/library/site.html#index-2> _ _ இது கோப்பகத்தை "
"இறக்குமதி பாதையில் சேர்க்கிறது."

#: ../source/discussions/src-layout-vs-flat-layout.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The flat layout would add the other project files (eg: ``README.md``, "
"``tox.ini``) and packaging/tooling configuration files (eg: ``setup.py``, "
"``noxfile.py``) on the import path. This would make certain imports work in "
"editable installations but not regular installations."
msgstr ""
"தட்டையான தளவமைப்பு மற்ற திட்டக் கோப்புகளைச் சேர்க்கும் (எ.கா. ``) இறக்குமதி "
"பாதையில். இது சில இறக்குமதிகள் திருத்தக்கூடிய நிறுவல்களில் செயல்பட வைக்கும்,"
" ஆனால் வழக்கமான நிறுவல்கள் அல்ல."

#: ../source/discussions/src-layout-vs-flat-layout.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Running a command-line interface from source with src-layout"
msgstr ""
"எச்.ஆர்.சி-லேஅவுட்டுடன் மூலத்திலிருந்து கட்டளை-வரி இடைமுகத்தை இயக்குகிறது"

#: ../source/discussions/src-layout-vs-flat-layout.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Due to the firstly mentioned specialty of the src layout, a command-line "
"interface can not be run directly from the :term:`source tree <Project "
"Source Tree>`, but requires installation of the package in :doc:`Development"
" Mode <setuptools:userguide/development_mode>` for testing purposes. Since "
"this can be unpractical in some situations, a workaround could be to prepend"
" the package folder to  Python's :py:data:`sys.path` when called via its "
":file:`__main__.py` file:"
msgstr ""
"எச்.ஆர்.சி தளவமைப்பின் முதன்முதலில் குறிப்பிடப்பட்ட சிறப்பு காரணமாக, ஒரு "
"கட்டளை-வரி இடைமுகத்தை நேரடியாக இயக்க முடியாது: கால: `மூல மரம் <திட்ட மூல "
"மரம்>`, ஆனால் தொகுப்பை நிறுவ வேண்டும்: டாக்: `மேம்பாட்டு முறை < setuptools: "
"USERGUIDE/Development_mode> `சோதனை நோக்கங்களுக்காக. சில சூழ்நிலைகளில் இது "
"நடைமுறைக்கு மாறானதாக இருப்பதால், தொகுப்பு கோப்புறையை பைத்தானுக்கு "
"தயார்படுத்துவது ஒரு பணித்தொகுப்பு: py: data: `sys.path` அதன் வழியாக "
"அழைக்கப்படும்போது: கோப்பு:` __main __. பை` கோப்பு:"

#: ../source/discussions/versioning.rst:6
#: ../source/specifications/simple-repository-api.rst:319
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Versioning"
msgstr "பதிப்பு"

#: ../source/discussions/versioning.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This discussion covers all aspects of versioning Python packages."
msgstr ""
"இந்த விவாதம் பைதான் தொகுப்புகளை பதிப்பதன் அனைத்து அம்சங்களையும் "
"உள்ளடக்கியது."

#: ../source/discussions/versioning.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Valid version numbers"
msgstr "செல்லுபடியாகும் பதிப்பு எண்கள்"

#: ../source/discussions/versioning.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Different Python projects may use different versioning schemes based on the "
"needs of that particular project, but in order to be compatible with tools "
"like :ref:`pip`, all of them are required to comply with a flexible format "
"for version identifiers, for which the authoritative reference is the "
":ref:`specification of version specifiers <version-specifiers>`. Here are "
"some examples of version numbers [#version-examples]_:"
msgstr ""
"வெவ்வேறு பைதான் திட்டங்கள் அந்த குறிப்பிட்ட திட்டத்தின் தேவைகளின் "
"அடிப்படையில் வெவ்வேறு பதிப்பு திட்டங்களைப் பயன்படுத்தலாம், ஆனால் போன்ற "
"கருவிகளுடன் இணக்கமாக இருக்க, ref: `பிப்`, அவை அனைத்தும் பதிப்பு "
"அடையாளங்காட்டிகளுக்கு நெகிழ்வான வடிவத்துடன் இணங்க வேண்டும், அதற்காக "
"அதிகாரப்பூர்வ குறிப்பு: ref: `பதிப்பு விவரக்குறிப்புகளின் விவரக்குறிப்பு "
"<பதிப்பு-விவரக்குறிப்புகள்>`. பதிப்பு எண்களின் சில எடுத்துக்காட்டுகள் இங்கே "
"[#பதிப்பு-எடுத்துக்காட்டுகள்] _:"

#: ../source/discussions/versioning.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A simple version (final release): ``1.2.0``"
msgstr "ஒரு எளிய பதிப்பு (இறுதி வெளியீடு): `` 1.2.0``"

#: ../source/discussions/versioning.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A development release: ``1.2.0.dev1``"
msgstr "ஒரு மேம்பாட்டு வெளியீடு: `` 1.2.0.dev1``"

#: ../source/discussions/versioning.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "An alpha release: ``1.2.0a1``"
msgstr "ஆல்பா வெளியீடு: `` 1.2.0a1``"

#: ../source/discussions/versioning.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A beta release: ``1.2.0b1``"
msgstr "ஒரு பீட்டா வெளியீடு: `` 1.2.0b1``"

#: ../source/discussions/versioning.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A release candidate: ``1.2.0rc1``"
msgstr "ஒரு வெளியீட்டு வேட்பாளர்: `` 1.2.0rc1``"

#: ../source/discussions/versioning.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A post-release: ``1.2.0.post1``"
msgstr "ஒரு வெளியீட்டுக்கு பிந்தைய: `` 1.2.0.post1``"

#: ../source/discussions/versioning.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A post-release of an alpha release (possible, but discouraged): "
"``1.2.0a1.post1``"
msgstr ""
"ஆல்பா வெளியீட்டின் பிந்தைய வெளியீட்டை (சாத்தியம், ஆனால் ஊக்கமளித்தது): `` "
"1.2.0a1.post1```"

#: ../source/discussions/versioning.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A simple version with only two components: ``23.12``"
msgstr "இரண்டு கூறுகள் மட்டுமே கொண்ட எளிய பதிப்பு: `` 23.12``"

#: ../source/discussions/versioning.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A simple version with just one component: ``42``"
msgstr "ஒரு கூறு கொண்ட எளிய பதிப்பு: `` 42``"

#: ../source/discussions/versioning.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A version with an epoch: ``1!1.0``"
msgstr "ஒரு சகாப்தத்துடன் ஒரு பதிப்பு: `` 1! 1.0``"

#: ../source/discussions/versioning.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Projects can use a cycle of pre-releases to support testing by their users "
"before a final release. In order, the steps are: alpha releases, beta "
"releases, release candidates, final release. Pip and other modern Python "
"package installers ignore pre-releases by default when deciding which "
"versions of dependencies to install, unless explicitly requested (e.g., with"
" ``pip install pkg==1.1a3`` or ``pip install --pre pkg``)."
msgstr ""
"இறுதி வெளியீட்டிற்கு முன்னர் தங்கள் பயனர்களால் சோதனையை ஆதரிக்க திட்டங்கள் "
"முன் வெளியீட்டு சுழற்சியைப் பயன்படுத்தலாம். வரிசையில், படிகள்: ஆல்பா "
"வெளியீடுகள், பீட்டா வெளியீடுகள், வெளியீட்டு வேட்பாளர்கள், இறுதி வெளியீடு. "
"பிஐபி மற்றும் பிற நவீன பைதான் தொகுப்பு நிறுவிகள் வெளிப்படையாகக் "
"கோரப்படாவிட்டால் (எ.கா., பி.கே.சி நிறுவும் பி.கே. `)."

#: ../source/discussions/versioning.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The purpose of development releases is to support releases made early during"
" a development cycle, for example, a nightly build, or a build from the "
"latest source in a Linux distribution."
msgstr ""
"வளர்ச்சி வெளியீடுகளின் நோக்கம் ஒரு வளர்ச்சி சுழற்சியின் போது ஆரம்பத்தில் "
"செய்யப்பட்ட வெளியீடுகளை ஆதரிப்பதாகும், எடுத்துக்காட்டாக, ஒரு இரவு கட்டமைப்பை"
" அல்லது லினக்ச் விநியோகத்தில் அண்மைக் கால மூலத்திலிருந்து ஒரு கட்டமைப்பை "
"உருவாக்குவது."

#: ../source/discussions/versioning.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Post-releases are used to address minor errors in a final release that do "
"not affect the distributed software, such as correcting an error in the "
"release notes. They should not be used for bug fixes; these should be done "
"with a new final release (e.g., incrementing the third component when using "
"semantic versioning)."
msgstr ""
"வெளியீட்டுக் குறிப்புகளில் பிழையை சரிசெய்வது போன்ற விநியோகிக்கப்பட்ட "
"மென்பொருளை பாதிக்காத இறுதி வெளியீட்டில் சிறிய பிழைகளை நிவர்த்தி செய்ய "
"பிந்தைய உறவுகள் பயன்படுத்தப்படுகின்றன. பிழை திருத்தங்களுக்கு அவை "
"பயன்படுத்தப்படக்கூடாது; இவை புதிய இறுதி வெளியீட்டில் செய்யப்பட வேண்டும் "
"(எ.கா., சொற்பொருள் பதிப்பைப் பயன்படுத்தும் போது மூன்றாவது கூறுகளை "
"அதிகரிக்கும்)."

#: ../source/discussions/versioning.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Finally, epochs, a rarely used feature, serve to fix the sorting order when "
"changing the versioning scheme. For example, if a project is using calendar "
"versioning, with versions like 23.12, and switches to semantic versioning, "
"with versions like 1.0, the comparison between 1.0 and 23.12 will go the "
"wrong way. To correct this, the new version numbers should have an explicit "
"epoch, as in \"1!1.0\", in order to be treated as more recent than the old "
"version numbers."
msgstr ""
"இறுதியாக, பதிப்புத் திட்டத்தை மாற்றும்போது வரிசையாக்க வரிசையை சரிசெய்ய, "
"அரிதாகப் பயன்படுத்தப்படும் அம்சமான சகாப்தங்கள். எடுத்துக்காட்டாக, ஒரு "
"திட்டம் 23.12 போன்ற பதிப்புகளுடன் காலெண்டர் பதிப்பைப் பயன்படுத்தினால், "
"மற்றும் சொற்பொருள் பதிப்பிற்கு மாறினால், 1.0 போன்ற பதிப்புகளுடன், 1.0 "
"மற்றும் 23.12 க்கு இடையிலான ஒப்பீடு தவறான வழியில் செல்லும். இதை சரிசெய்ய, "
"பழைய பதிப்பு எண்களை விட மிக சமீபத்தியதாக கருதப்படுவதற்கு, \"1! 1.0\" இல் "
"உள்ளதைப் போல புதிய பதிப்பு எண்கள் வெளிப்படையான சகாப்தத்தைக் கொண்டிருக்க "
"வேண்டும்."

#: ../source/discussions/versioning.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Semantic versioning vs. calendar versioning"
msgstr "சொற்பொருள் பதிப்பு எதிராக காலண்டர் பதிப்பு"

#: ../source/discussions/versioning.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A versioning scheme is a formalized way to interpret the segments of a "
"version number, and to decide which should be the next version number for a "
"new release of a package. Two versioning schemes are commonly used for "
"Python packages, semantic versioning and calendar versioning."
msgstr ""
"பதிப்பு எண்ணின் பிரிவுகளை விளக்குவதற்கும், ஒரு தொகுப்பின் புதிய "
"வெளியீட்டிற்கான அடுத்த பதிப்பு எண்ணாக இருக்க வேண்டும் என்பதை "
"தீர்மானிப்பதற்கும் ஒரு பதிப்பு திட்டம் ஒரு முறையான வழியாகும். பைதான் "
"தொகுப்புகள், சொற்பொருள் பதிப்பு மற்றும் காலண்டர் பதிப்பிற்கு இரண்டு பதிப்பு "
"திட்டங்கள் பொதுவாகப் பயன்படுத்தப்படுகின்றன."

#: ../source/discussions/versioning.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The decision which version number to choose is up to a project's maintainer."
" This effectively means that version bumps reflect the maintainer's view. "
"That view may differ from the end-users' perception of what said formalized "
"versioning scheme promises them."
msgstr ""
"எந்த பதிப்பு எண் தேர்வு செய்ய வேண்டும் என்பது ஒரு திட்டத்தின் பராமரிப்பாளர் "
"வரை. பதிப்பு புடைப்புகள் பராமரிப்பாளரின் பார்வையை பிரதிபலிக்கின்றன என்பதே "
"இதன் பொருள். முறைப்படுத்தப்பட்ட பதிப்பு திட்டம் அவர்களுக்கு உறுதியளிக்கிறது "
"என்ற இறுதி பயனர்களின் பார்வையில் இருந்து அந்த பார்வை வேறுபடலாம்."

#: ../source/discussions/versioning.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are known exceptions for selecting the next version number. The "
"maintainers may consciously choose to break the assumption that the last "
"version segment only contains backwards-compatible changes. One such case is"
" when security vulnerability needs to be addressed. Security releases often "
"come in patch versions but contain breaking changes inevitably."
msgstr ""
"அடுத்த பதிப்பு எண்ணைத் தேர்ந்தெடுப்பதற்கு அறியப்பட்ட விதிவிலக்குகள் உள்ளன. "
"கடைசி பதிப்பு பிரிவில் பின்னோக்கி-இணக்கமான மாற்றங்கள் மட்டுமே உள்ளன என்ற "
"அனுமானத்தை உடைக்க பராமரிப்பாளர்கள் உணர்வுபூர்வமாக தேர்வு செய்யலாம். "
"பாதுகாப்பு பாதிப்பு தீர்க்கப்பட வேண்டிய ஒரு வழக்கு. பாதுகாப்பு வெளியீடுகள் "
"பெரும்பாலும் ஒட்டு பதிப்புகளில் வருகின்றன, ஆனால் தவிர்க்க முடியாமல் "
"மாற்றங்களை உடைக்கும்."

#: ../source/discussions/versioning.rst:84
#: ../source/specifications/version-specifiers.rst:723
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Semantic versioning"
msgstr "சொற்பொருள் பதிப்பு"

#: ../source/discussions/versioning.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The idea of *semantic versioning* (or SemVer) is to use 3-part version "
"numbers, *major.minor.patch*, where the project author increments:"
msgstr ""
"*சொற்பொருள் பதிப்பு *(அல்லது செம்வர்) இன் சிந்தனை 3-பகுதி பதிப்பு எண்களைப் "
"பயன்படுத்துவதாகும், *mater.minor.patch *, அங்கு திட்ட ஆசிரியர் அதிகரிக்கும்:"

#: ../source/discussions/versioning.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "*major* when they make incompatible API changes,"
msgstr "* மேசர்* அவர்கள் பொருந்தாத பநிஇ மாற்றங்களைச் செய்யும்போது,"

#: ../source/discussions/versioning.rst:90
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"*minor* when they add functionality in a backwards-compatible manner, and"
msgstr ""
"* சிறிய* அவை பின்னோக்கி-இணக்கமான முறையில் செயல்பாட்டைச் சேர்க்கும்போது, "
"​​மற்றும்"

#: ../source/discussions/versioning.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "*patch*, when they make backwards-compatible bug fixes."
msgstr "*பேட்ச்*, அவை பின்னோக்கி-இணக்கமான பிழை திருத்தங்களைச் செய்யும்போது."

#: ../source/discussions/versioning.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A majority of Python projects use a scheme that resembles semantic "
"versioning. However, most projects, especially larger ones, do not strictly "
"adhere to semantic versioning, since many changes are technically breaking "
"changes but affect only a small fraction of users. Such projects tend to "
"increment the major number when the incompatibility is high, or to signal a "
"shift in the project, rather than for any tiny incompatibility [#semver-"
"strictness]_. Conversely, a bump of the major version number is sometimes "
"used to signal significant but backwards-compatible new features."
msgstr ""
"பைதான் திட்டங்களில் பெரும்பாலானவை சொற்பொருள் பதிப்பை ஒத்த ஒரு திட்டத்தைப் "
"பயன்படுத்துகின்றன. இருப்பினும், பெரும்பாலான திட்டங்கள், குறிப்பாக பெரியவை, "
"சொற்பொருள் பதிப்பைக் கண்டிப்பாக கடைப்பிடிக்காது, ஏனெனில் பல மாற்றங்கள் "
"தொழில்நுட்ப ரீதியாக மாற்றங்களை உடைக்கின்றன, ஆனால் பயனர்களில் ஒரு சிறிய "
"பகுதியை மட்டுமே பாதிக்கின்றன. பொருந்தாத தன்மை அதிகமாக இருக்கும்போது இத்தகைய "
"திட்டங்கள் முக்கிய எண்ணிக்கையை அதிகரிக்க முனைகின்றன, அல்லது எந்தவொரு சிறிய "
"பொருந்தாத தன்மையைக் காட்டிலும் [#செம்வர்-ச்ட்ரிக்டெச்] _. மாறாக, முக்கிய "
"பதிப்பு எண்ணின் ஒரு பம்ப் சில நேரங்களில் குறிப்பிடத்தக்க ஆனால் "
"பின்னோக்கி-இணக்கமான புதிய அம்சங்களை சமிக்ஞை செய்யப் பயன்படுகிறது."

#: ../source/discussions/versioning.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For those projects that do use strict semantic versioning, this approach "
"allows users to make use of :ref:`compatible release version specifiers "
"<version-specifiers-compatible-release>`, with the ``~=`` operator.  For "
"example, ``name ~= X.Y`` is roughly equivalent to ``name >= X.Y, == X.*``, "
"i.e., it requires at least release X.Y, and allows any later release with "
"greater Y as long as X is the same. Likewise, ``name ~= X.Y.Z`` is roughly "
"equivalent to ``name >= X.Y.Z, == X.Y.*``, i.e., it requires at least X.Y.Z "
"and allows a later release with same X and Y but higher Z."
msgstr ""
"கண்டிப்பான சொற்பொருள் பதிப்பைப் பயன்படுத்தும் அந்த திட்டங்களுக்கு, இந்த "
"அணுகுமுறை பயனர்களை பயன்படுத்த அனுமதிக்கிறது: Ref: `இணக்கமான வெளியீட்டு "
"பதிப்பு விவரக்குறிப்புகள் <பதிப்பு-விவரக்குறிப்புகள்-இணக்கமான-வெளியீட்டு>`, "
"`~ ~ =` `ஆபரேட்டருடன். எடுத்துக்காட்டாக, `` பெயர் ~ = X.Y`` தோராயமாக `` "
"பெயர்> = x.y, == x.*``, அதாவது, இதற்கு குறைந்தபட்சம் வெளியீடு X.y க்கு "
"தேவைப்படுகிறது, மேலும் எந்தவொரு பின்னர் வெளியீட்டை அதிக ஒய் உடன் "
"அனுமதிக்கிறது ஃச் ஒன்றே. அதேபோல், `` பெயர் ~ = x.y.z`` தோராயமாக `` பெயர்> = "
"x.y.z, == x.y.*``, அதாவது, அதற்கு குறைந்தபட்சம் x.y.z தேவைப்படுகிறது மற்றும்"
" அதே ஃச் மற்றும் ஒய் உடன் பின்னர் வெளியீட்டை அனுமதிக்கிறது."

#: ../source/discussions/versioning.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python projects adopting semantic versioning should abide by clauses 1-8 of "
"the `Semantic Versioning 2.0.0 specification <semver_>`_."
msgstr ""
"சொற்பொருள் பதிப்பைப் பின்பற்றும் பைதான் திட்டங்கள் `சொற்பொருள் பதிப்பு 2.0.0"
" விவரக்குறிப்பு <செம்வர்_>` _ `_ ஆகியவற்றின் 1-8 உட்பிரிவுகளுக்கு கட்டுப்பட "
"வேண்டும்."

#: ../source/discussions/versioning.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The popular :doc:`Sphinx <sphinx:index>` documentation generator is an "
"example project that uses strict semantic versioning (:doc:`Sphinx "
"versioning policy <sphinx:internals/release-process>`). The famous "
":doc:`NumPy <numpy:index>` scientific computing package explicitly uses "
"\"loose\" semantic versioning, where releases incrementing the minor version"
" can contain backwards-incompatible API changes (:doc:`NumPy versioning "
"policy <numpy:dev/depending_on_numpy>`)."
msgstr ""
"பிரபலமான: டிஓசி: `ச்பின்க்ச் <ச்பின்க்ச்: இன்டெக்ச்>` ஆவணப்படுத்தல் "
"செனரேட்டர் என்பது கடுமையான சொற்பொருள் பதிப்பைப் பயன்படுத்தும் ஒரு "
"எடுத்துக்காட்டு திட்டமாகும் (: டாக்: `ச்பிங்க்ச் பதிப்பு கொள்கை <ச்பிங்க்ச்:"
" இன்டர்ன்ச்/வெளியீட்டு-செயல்முறை>`). புகழ்பெற்ற: டிஓசி: `நம்பி <நம்பி: "
"இன்டெக்ச்>` அறிவியல் கணினி தொகுப்பு வெளிப்படையாக \"தளர்வான\" சொற்பொருள் "
"பதிப்பைப் பயன்படுத்துகிறது, அங்கு சிறிய பதிப்பை அதிகரிக்கும் வெளியீடுகள் "
"பின்னோக்கி-இணக்கமான பநிஇ மாற்றங்களைக் கொண்டிருக்கலாம் (: டாக்: `நம்பி "
"பதிப்பு கொள்கை <நம்பி: தேவ்/ _ON_NUMPY> `)."

#: ../source/discussions/versioning.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Calendar versioning"
msgstr "காலண்டர் பதிப்பு"

#: ../source/discussions/versioning.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Semantic versioning is not a suitable choice for all projects, such as those"
" with a regular time based release cadence and a deprecation process that "
"provides warnings for a number of releases prior to removal of a feature."
msgstr ""
"ஒரு அம்சத்தை அகற்றுவதற்கு முன்னர் பல வெளியீடுகளுக்கு எச்சரிக்கைகளை வழங்கும் "
"வழக்கமான நேர அடிப்படையிலான வெளியீட்டு கேடென்ச் மற்றும் ஒரு மதிப்பிழப்பு "
"செயல்முறை போன்ற அனைத்து திட்டங்களுக்கும் சொற்பொருள் பதிப்பு பொருத்தமான "
"தேர்வாக இல்லை."

#: ../source/discussions/versioning.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A key advantage of date-based versioning, or `calendar versioning "
"<calver_>`_ (CalVer), is that it is straightforward to tell how old the base"
" feature set of a particular release is given just the version number."
msgstr ""
"தேதி அடிப்படையிலான பதிப்பின் முக்கிய நன்மை, அல்லது `காலண்டர் பதிப்பு "
"<கால்வர்_>` _ (கால்வர்), ஒரு குறிப்பிட்ட வெளியீட்டின் அடிப்படை அம்சத் "
"தொகுப்பிற்கு பதிப்பு எண்ணை எவ்வளவு பழையதாகக் கூறுவது நேரடியானது."

#: ../source/discussions/versioning.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Calendar version numbers typically take the form *year.month* (for example, "
"23.12 for December 2023)."
msgstr ""
"காலண்டர் பதிப்பு எண்கள் பொதுவாக * year.month * படிவத்தை எடுக்கும் "
"(எடுத்துக்காட்டாக, டிசம்பர் 2023 க்கு 23.12)."

#: ../source/discussions/versioning.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Pip <pip:index>`, the standard Python package installer, uses calendar"
" versioning."
msgstr ""
": டாக்: `பிப் <பிப்: இன்டெக்ச்>`, நிலையான பைதான் தொகுப்பு நிறுவி, காலண்டர் "
"பதிப்பைப் பயன்படுத்துகிறது."

#: ../source/discussions/versioning.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Other schemes"
msgstr "பிற திட்டங்கள்"

#: ../source/discussions/versioning.rst:144
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Serial versioning refers to the simplest possible versioning scheme, which "
"consists of a single number incremented every release. While serial "
"versioning is very easy to manage as a developer, it is the hardest to track"
" as an end user, as serial version numbers convey little or no information "
"regarding API backwards compatibility."
msgstr ""
"சீரியல் பதிப்பு என்பது எளிமையான சாத்தியமான பதிப்பு திட்டத்தைக் குறிக்கிறது, "
"இது ஒவ்வொரு வெளியீட்டையும் அதிகரிக்கும் ஒற்றை எண்ணைக் கொண்டுள்ளது. சீரியல் "
"பதிப்பு ஒரு டெவலப்பராக நிர்வகிக்க மிகவும் எளிதானது என்றாலும், இறுதி பயனராக "
"கண்காணிப்பது கடினம், ஏனெனில் தொடர் பதிப்பு எண்கள் பநிஇ பின்னோக்கி "
"பொருந்தக்கூடிய தன்மை குறித்து சிறிய அல்லது எந்த தகவலையும் தெரிவிக்கின்றன."

#: ../source/discussions/versioning.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Combinations of the above schemes are possible. For example, a project may "
"combine date based versioning with serial versioning to create a "
"*year.serial* numbering scheme that readily conveys the approximate age of a"
" release, but doesn't otherwise commit to a particular release cadence "
"within the year."
msgstr ""
"மேற்கண்ட திட்டங்களின் சேர்க்கைகள் சாத்தியமாகும். எடுத்துக்காட்டாக, ஒரு "
"திட்டம் ஒரு * ஆண்டை உருவாக்க சீரியல் பதிப்போடு தேதி அடிப்படையிலான பதிப்போடு "
"இணைக்கலாம். ஒரு வெளியீட்டின் தோராயமான வயதை உடனடியாக வெளிப்படுத்தும், ஆனால் "
"ஆண்டுக்குள் ஒரு குறிப்பிட்ட வெளியீட்டு கேடென்சுக்கு உறுதியளிக்கவில்லை."

#: ../source/discussions/versioning.rst:157
#: ../source/specifications/version-specifiers.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Local version identifiers"
msgstr "உள்ளக பதிப்பு அடையாளங்காட்டிகள்"

#: ../source/discussions/versioning.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Public version identifiers are designed to support distribution via "
":term:`PyPI <Python Package Index (PyPI)>`. Python packaging tools also "
"support the notion of a :ref:`local version identifier <local-version-"
"identifiers>`, which can be used to identify local development builds not "
"intended for publication, or modified variants of a release maintained by a "
"redistributor."
msgstr ""
"பொது பதிப்பு அடையாளங்காட்டிகள் விநியோகத்தை ஆதரிக்க வடிவமைக்கப்பட்டுள்ளன: "
"கால: `பைபி <பைதான் தொகுப்பு குறியீட்டு (PYPI)>`. பைதான் பேக்கேசிங் கருவிகள் "
"A: ref: `உள்ளூர் பதிப்பு அடையாளங்காட்டி <உள்ளூர்-பதிப்பு-அடையாளங்காட்டிகள்>`"
" என்ற கருத்தையும் ஆதரிக்கின்றன, இது வெளியீட்டிற்காக அல்ல, அல்லது "
"மறுவிநியோகத்தால் பராமரிக்கப்படும் வெளியீட்டின் மாற்றியமைக்கப்பட்ட "
"மாறுபாடுகளை அடையாளம் காண பயன்படுத்தலாம்."

#: ../source/discussions/versioning.rst:165
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A local version identifier takes the form of a public version identifier, "
"followed by \"+\" and a local version label. For example, a package with "
"Fedora-specific patches applied could have the version \"1.2.1+fedora.4\". "
"Another example is versions computed by setuptools-scm_, a setuptools plugin"
" that reads the version from Git data. In a Git repository with some commits"
" since the latest release, setuptools-scm generates a version like "
"\"0.5.dev1+gd00980f\", or if the repository has untracked changes, like "
"\"0.5.dev1+gd00980f.d20231217\"."
msgstr ""
"உள்ளக பதிப்பு அடையாளங்காட்டி பொது பதிப்பு அடையாளங்காட்டியின் வடிவத்தை "
"எடுக்கிறது, அதைத் தொடர்ந்து \"+\" மற்றும் உள்ளக பதிப்பு சிட்டை. "
"எடுத்துக்காட்டாக, ஃபெடோரா-குறிப்பிட்ட திட்டுகள் பயன்படுத்தப்படும் ஒரு "
"தொகுப்பில் \"1.2.1+ஃபெடோரா 4\" பதிப்பைக் கொண்டிருக்கலாம். மற்றொரு "
"எடுத்துக்காட்டு, செட்ப்டூல்ச்-எச்.சி.எம்_ ஆல் கணக்கிடப்பட்ட பதிப்புகள், "
"செடுப்டூல்ச் சொருகி, இது அறிவிலி தரவிலிருந்து பதிப்பைப் படிக்கிறது. அண்மைக் "
"கால வெளியீட்டிலிருந்து சில கமிட்டுகளுடன் கூடிய ஒரு சிஐடி களஞ்சியத்தில், "
"செடுப்டூல்ச்-எச்.சி.எம் \"0.5.DEV1+GD00980F\" போன்ற ஒரு பதிப்பை "
"உருவாக்குகிறது, அல்லது களஞ்சியத்தில் \"0.5.DEV1+GD00980F.D2021217\" போன்ற "
"மாற்றங்கள் கட்டுப்படுத்தப்படாத மாற்றங்களைக் கொண்டிருந்தால்."

#: ../source/discussions/versioning.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Accessing version information at runtime"
msgstr "இயக்க நேரத்தில் பதிப்பு தகவல்களை அணுகும்"

#: ../source/discussions/versioning.rst:179
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Version information for all :term:`distribution packages <Distribution "
"Package>` that are locally available in the current environment can be "
"obtained at runtime using the standard library's "
":func:`importlib.metadata.version` function::"
msgstr ""
"அனைவருக்கும் பதிப்பு தகவல்: கால: `விநியோக தொகுப்புகள் <விநியோக தொகுப்பு>` "
"தற்போதைய சூழலில் உள்ளூரில் கிடைக்கக்கூடியவை நிலையான நூலகத்தைப் பயன்படுத்தி "
"இயக்க நேரத்தில் பெறலாம்: FUNC: `importlib.metadata.version` செயல்பாடு ::"

#: ../source/discussions/versioning.rst:186
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Many projects also choose to version their top level :term:`import packages "
"<Import Package>` by providing a package level ``__version__`` attribute::"
msgstr ""
"பல திட்டங்கள் அவற்றின் உயர் மட்டத்தை பதிப்பதற்கும் தேர்வு செய்கின்றன: கால: "
"`இறக்குமதி தொகுப்புகளை <இறக்குமதி தொகுப்பு>` ஒரு தொகுப்பு நிலையை வழங்குவதன் "
"மூலம் `__version__`` பண்புக்கூறு ::"

#: ../source/discussions/versioning.rst:194
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This technique can be particularly valuable for CLI applications which want "
"to ensure that version query invocations (such as ``pip -V``) run as quickly"
" as possible."
msgstr ""
"சி.எல்.ஐ பயன்பாடுகளுக்கு இந்த நுட்பம் குறிப்பாக மதிப்புமிக்கதாக இருக்கும், "
"இது பதிப்பு வினவல் அழைப்பிதழ்கள் (`` பிப் -வி`` போன்றவை) முடிந்தவரை விரைவாக "
"இயங்குவதை உறுதிசெய்ய விரும்புகின்றன."

#: ../source/discussions/versioning.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Package publishers wishing to ensure their reported distribution package and"
" import package versions are consistent with each other can review the "
":ref:`single-source-version` discussion for potential approaches to doing "
"so."
msgstr ""
"தங்கள் அறிக்கையிடப்பட்ட விநியோக தொகுப்பு மற்றும் இறக்குமதி தொகுப்பு "
"பதிப்புகள் ஒருவருக்கொருவர் ஒத்துப்போகின்றன என்பதை உறுதிப்படுத்த விரும்பும் "
"தொகுப்பு வெளியீட்டாளர்கள் மறுபரிசீலனை செய்யலாம்: Ref: `ஒற்றை-மூல-பதிப்பு` "
"அவ்வாறு செய்வதற்கான சாத்தியமான அணுகுமுறைகளுக்கு விவாதம்."

#: ../source/discussions/versioning.rst:202
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As import packages and modules are not *required* to publish runtime version"
" information in this way (see the withdrawn proposal in :pep:`PEP 396 "
"<396>`), the ``__version__`` attribute should either only be queried with "
"interfaces that are known to provide it (such as a project querying its own "
"version or the version of one of its direct dependencies), or else the "
"querying code should be designed to handle the case where the attribute is "
"missing [#fallback-to-dist-version]_."
msgstr ""
"இயக்க நேர பதிப்பு தகவல்களை இந்த வழியில் வெளியிட இறக்குமதி தொகுப்புகள் "
"மற்றும் தொகுதிகள் * தேவையில்லை * (திரும்பப் பெறப்பட்ட திட்டத்தைப் "
"பார்க்கவும்: PEP: `PEP 396 <396>`) அவை வழங்குவதாக அறியப்படுகிறது (அதன் சொந்த"
" பதிப்பை வினவுவது அல்லது அதன் நேரடி சார்புகளில் ஒன்றின் பதிப்பு போன்றவை), "
"இல்லையெனில் வினவல் குறியீடு பண்புக்கூறு காணாமல் போன வழக்கைக் கையாள "
"வடிவமைக்கப்பட வேண்டும் [#குறைவுக்கு-தூரத்திற்கு -்வெர்சன்] _."

#: ../source/discussions/versioning.rst:210
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some projects may need to publish version information for external APIs that"
" aren't the version of the module itself. Such projects should define their "
"own project-specific ways of obtaining the relevant information at runtime. "
"For example, the standard library's :mod:`ssl` module offers multiple ways "
"to access the underlying OpenSSL library version::"
msgstr ""
"சில திட்டங்கள் தொகுதியின் பதிப்பாக இல்லாத வெளிப்புற பநிஇ களுக்கான பதிப்பு "
"தகவல்களை வெளியிட வேண்டியிருக்கலாம். இத்தகைய திட்டங்கள் இயக்க நேரத்தில் "
"தொடர்புடைய தகவல்களைப் பெறுவதற்கான தங்கள் சொந்த திட்ட-குறிப்பிட்ட வழிகளை "
"வரையறுக்க வேண்டும். எடுத்துக்காட்டாக, நிலையான நூலகத்தின்: MOD: `SSL` தொகுதி "
"அடிப்படை OpenSSL நூலக பதிப்பை அணுக பல வழிகளை வழங்குகிறது ::"

#: ../source/discussions/versioning.rst:225
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some more examples of unusual version numbers are given in a `blog post "
"<versions-seth-larson_>`_ by Seth Larson."
msgstr ""
"அசாதாரண பதிப்பு எண்களின் இன்னும் சில எடுத்துக்காட்டுகள் `வலைப்பதிவு இடுகை "
"<பதிப்புகள்-செத்-லார்சன்_>` _ சேத் லார்சனால் கொடுக்கப்பட்டுள்ளன."

#: ../source/discussions/versioning.rst:228
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For some personal viewpoints on this issue, see these blog posts: `by Hynek "
"Schlawak <semver-hynek-schlawack_>`_, `by Donald Stufft <semver-donald-"
"stufft_>`_, `by Bernát Gábor <semver-bernat-gabor_>`_, `by Brett Cannon "
"<semver-brett-cannon_>`_. For a humoristic take, read about ZeroVer_."
msgstr ""
"இந்த இதழில் சில தனிப்பட்ட கண்ணோட்டங்களுக்கு, இந்த வலைப்பதிவு இடுகைகளைப் "
"பார்க்கவும்: `ஐனெக் ச்க்லவாக் <செம்வர்-ஐனெக்-ச்லாவாக்_>` _, `டொனால்ட் ச்டஃப்"
" <செம்வர்-டொனால்ட்-ச்டஃப்ட்_>` _, `பெர்னட் கோபர் <செம்வெர்-வெர்னட்- gabor_> "
"`_,` பிரட் கேனன் <semver-brett-cannon_> `_. நகைச்சுவையான எடுத்துக்கொள்ள, "
"Zerover_ பற்றி படியுங்கள்."

#: ../source/discussions/versioning.rst:234
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A full list mapping the top level names available for import to the "
"distribution packages that provide those import packages and modules may be "
"obtained through the standard library's "
":func:`importlib.metadata.packages_distributions` function. This means that "
"even code that is attempting to infer a version to report for all importable"
" top-level names has a means to fall back to reporting the distribution "
"version information if no ``__version__`` attribute is defined. Only "
"standard library modules, and modules added via means other than Python "
"package installation would fail to have version information reported in that"
" case."
msgstr ""
"அந்த இறக்குமதி தொகுப்புகள் மற்றும் தொகுதிகளை வழங்கும் விநியோக "
"தொகுப்புகளுக்கு இறக்குமதிக்கு கிடைக்கக்கூடிய உயர் மட்ட பெயர்களை மேப்பிங் "
"செய்யும் முழு பட்டியல் நிலையான நூலகத்தின் மூலம் பெறப்படலாம்: func: "
"`importlib.metadata.packages_distributions` செயல்பாடு. இதன் பொருள் "
"என்னவென்றால், இறக்குமதி செய்யக்கூடிய அனைத்து உயர்மட்ட பெயர்களுக்கும் "
"புகாரளிக்க ஒரு பதிப்பை ஊகிக்க முயற்சிக்கும் குறியீடு கூட `__ பதிப்பு__`` "
"பண்புக்கூறு வரையறுக்கப்பட்டால், விநியோக பதிப்பு தகவல்களைப் புகாரளிக்கத் "
"திரும்புவதற்கான வழிமுறைகள் உள்ளன. நிலையான நூலக தொகுதிகள் மற்றும் பைதான் "
"தொகுப்பு நிறுவலைத் தவிர வேறு வழிகளில் சேர்க்கப்பட்ட தொகுதிகள் மட்டுமே அந்த "
"விசயத்தில் பதிப்பு தகவல்களைப் பெறத் தவறும்."

#: ../source/flow.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The Packaging Flow"
msgstr "பேக்கேசிங் ஓட்டம்"

#: ../source/flow.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The document aims to outline the flow involved in publishing/distributing a "
":term:`distribution package <Distribution Package>`, usually to the `Python "
"Package Index (PyPI)`_. It is written for package publishers, who are "
"assumed to be the package author."
msgstr ""
"ஒரு: காலத்தை வெளியிட/விநியோகிப்பதில் ஈடுபடும் ஓட்டத்தை கோடிட்டுக் காட்டுவதை "
"ஆவணம் நோக்கமாகக் கொண்டுள்ளது: கால: `விநியோக தொகுப்பு <விநியோக தொகுப்பு>`, "
"வழக்கமாக `பைதான் தொகுப்பு குறியீட்டு (PYPI)` _ க்கு. தொகுப்பு "
"வெளியீட்டாளர்களுக்காக இது எழுதப்பட்டுள்ளது, அவர்கள் தொகுப்பு எழுத்தாளராக "
"கருதப்படுகிறார்கள்."

#: ../source/flow.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While the :doc:`tutorial <tutorials/packaging-projects>` walks through the "
"process of preparing a simple package for release, it does not fully "
"enumerate what steps and files are required, and for what purpose."
msgstr ""
"TOP: `டுடோரியல் <டுடோரியல்கள்/பேக்கேசிங்-திட்டங்கள்>` வெளியீட்டிற்கு ஒரு "
"எளிய தொகுப்பைத் தயாரிக்கும் செயல்முறையின் மூலம் நடந்து செல்லும்போது, ​​என்ன "
"படிகள் மற்றும் கோப்புகள் தேவை, எந்த நோக்கத்திற்காக அது முழுமையாகக் "
"கணக்கிடாது."

#: ../source/flow.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Publishing a package requires a flow from the author's source code to an end"
" user's Python environment. The steps to achieve this are:"
msgstr ""
"ஒரு தொகுப்பை வெளியிடுவதற்கு ஆசிரியரின் மூலக் குறியீட்டிலிருந்து இறுதி "
"பயனரின் பைதான் சூழலுக்கு ஒரு ஓட்டம் தேவைப்படுகிறது. இதை அடைவதற்கான படிகள்:"

#: ../source/flow.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Have a source tree containing the package. This is typically a checkout from"
" a version control system (VCS)."
msgstr ""
"தொகுப்பைக் கொண்ட ஒரு மூல மரத்தை வைத்திருங்கள். இது பொதுவாக பதிப்பு "
"கட்டுப்பாட்டு அமைப்பிலிருந்து (வி.சி.எச்) ஒரு புதுப்பிப்பு ஆகும்."

#: ../source/flow.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Prepare a configuration file describing the package metadata (name, version "
"and so forth) and how to create the build artifacts. For most packages, this"
" will be a :file:`pyproject.toml` file, maintained manually in the source "
"tree."
msgstr ""
"தொகுப்பு மேனிலை தரவு (பெயர், பதிப்பு மற்றும் பல) மற்றும் உருவாக்க "
"கலைப்பொருட்களை எவ்வாறு உருவாக்குவது என்பதை விவரிக்கும் உள்ளமைவு கோப்பைத் "
"தயாரிக்கவும். பெரும்பாலான தொகுப்புகளுக்கு, இது ஒரு: கோப்பு: `pyproject.toml`"
" கோப்பு, மூல மரத்தில் கைமுறையாக பராமரிக்கப்படுகிறது."

#: ../source/flow.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Create build artifacts to be sent to the package distribution service "
"(usually PyPI); these will normally be a :term:`source distribution "
"(\"sdist\") <Source Distribution (or \"sdist\")>` and one or more "
":term:`built distributions (\"wheels\") <Built Distribution>`. These are "
"made by a build tool using the configuration file from the previous step. "
"Often there is just one generic wheel for a pure Python package."
msgstr ""
"தொகுப்பு விநியோக சேவைக்கு (பொதுவாக PYPI) அனுப்பப்பட வேண்டிய கட்டமைப்புகளை "
"உருவாக்குங்கள்; இவை பொதுவாக ஒரு: காலமாக இருக்கும்: `மூல வழங்கல் (\" SDIST "
"\") <மூல வழங்கல் (அல்லது\" SDIST \")>` மற்றும் ஒன்று அல்லது அதற்கு "
"மேற்பட்டவை: சொல்: `கட்டப்பட்ட விநியோகங்கள் (\" சக்கரங்கள் \") <கட்டப்பட்ட "
"விநியோகம்>`. முந்தைய படியிலிருந்து உள்ளமைவு கோப்பைப் பயன்படுத்தி ஒரு "
"உருவாக்க கருவியால் இவை செய்யப்படுகின்றன. பெரும்பாலும் தூய பைதான் "
"தொகுப்புக்கு ஒரு பொதுவான சக்கரம் மட்டுமே உள்ளது."

#: ../source/flow.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Upload the build artifacts to the package distribution service."
msgstr "தொகுப்பு விநியோக சேவையில் உருவாக்க கலைப்பொருட்களை பதிவேற்றவும்."

#: ../source/flow.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"At that point, the package is present on the package distribution service. "
"To use the package, end users must:"
msgstr ""
"அந்த நேரத்தில், தொகுப்பு விநியோக சேவையில் தொகுப்பு உள்ளது. தொகுப்பைப் "
"பயன்படுத்த, இறுதி பயனர்கள் வேண்டும்:"

#: ../source/flow.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Download one of the package's build artifacts from the package distribution "
"service."
msgstr ""
"தொகுப்பு விநியோக சேவையிலிருந்து தொகுப்பின் உருவாக்க கலைப்பொருட்களில் ஒன்றைப்"
" பதிவிறக்கவும்."

#: ../source/flow.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Install it in their Python environment, usually in its ``site-packages`` "
"directory. This step may involve a build/compile step which, if needed, must"
" be described by the package metadata."
msgstr ""
"வழக்கமாக அதன் `` தள-பேக்கேச்கள்`` கோப்பகத்தில் அதை அவற்றின் பைதான் சூழலில் "
"நிறுவவும். இந்த படி ஒரு கட்டமைப்பை/தொகுக்கும் படி, தேவைப்பட்டால், தொகுப்பு "
"மெட்டாடேட்டாவால் விவரிக்கப்பட வேண்டும்."

#: ../source/flow.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These last 2 steps are typically performed by :ref:`pip` when an end user "
"runs ``pip install``."
msgstr ""
"இந்த கடைசி 2 படிகள் பொதுவாக நிகழ்த்தப்படுகின்றன: குறிப்பு: `பிப்` ஒரு இறுதி "
"பயனர் இயங்கும்போது` `பிஐபி நிறுவல்``."

#: ../source/flow.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The steps above are described in more detail below."
msgstr "மேலே உள்ள படிகள் கீழே விரிவாக விவரிக்கப்பட்டுள்ளன."

#: ../source/flow.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The source tree"
msgstr "மூல மரம்"

#: ../source/flow.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The source tree contains the package source code, usually a checkout from a "
"VCS. The particular version of the code used to create the build artifacts "
"will typically be a checkout based on a tag associated with the version."
msgstr ""
"மூல மரத்தில் தொகுப்பு மூலக் குறியீடு உள்ளது, பொதுவாக ஒரு வி.சி.எச்சிலிருந்து"
" ஒரு புதுப்பிப்பு. உருவாக்க கலைப்பொருட்களை உருவாக்கப் பயன்படுத்தப்படும் "
"குறியீட்டின் குறிப்பிட்ட பதிப்பு பொதுவாக பதிப்போடு தொடர்புடைய குறிச்சொல்லின்"
" அடிப்படையில் ஒரு புதுப்பித்தலாக இருக்கும்."

#: ../source/flow.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The configuration file"
msgstr "உள்ளமைவு கோப்பு"

#: ../source/flow.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The configuration file depends on the tool used to create the build "
"artifacts. The standard practice is to use a :file:`pyproject.toml` file in "
"the `TOML format`_."
msgstr ""
"உள்ளமைவு கோப்பு உருவாக்க கலைப்பொருட்களை உருவாக்கப் பயன்படுத்தப்படும் "
"கருவியைப் பொறுத்தது. `டாம்ல் வடிவத்தில்`_ இல்` pyproject.toml` கோப்பைப் "
"பயன்படுத்துவது நிலையான நடைமுறை."

#: ../source/flow.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"At a minimum, the :file:`pyproject.toml` file needs a ``[build-system]`` "
"table specifying your build tool. There are many build tools available, "
"including but not limited to :ref:`flit`, :ref:`hatch`, :ref:`pdm`, "
":ref:`poetry`, :ref:`setuptools`, `trampolim`_, and `whey`_. Each tool's "
"documentation will show what to put in the ``[build-system]`` table."
msgstr ""
"குறைந்தபட்சம், தி: கோப்பு: `pyproject.toml` கோப்புக்கு` `[பில்ட்-சிச்டம்]` "
"`உங்கள் உருவாக்க கருவியைக் குறிப்பிடும் அட்டவணை தேவை. இதில் பல கட்டமைப்புக் "
"கருவிகள் உள்ளன, அவற்றில் மட்டுப்படுத்தப்படவில்லை: ref: `flit`,: ref:` "
"அட்ச்`,: ref: `pdm`,: ref:` கவிதை`,: ref: `setuptools`,` trampolim` _, "
"மற்றும் `மோர்`_. ஒவ்வொரு கருவியின் ஆவணங்களும் `` [பில்ட்-சிச்டம்] `` "
"அட்டவணையில் எதை வைக்க வேண்டும் என்பதைக் காண்பிக்கும்."

#: ../source/flow.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For example, here is a table for using :ref:`hatch`:"
msgstr "எடுத்துக்காட்டாக, பயன்படுத்த ஒரு அட்டவணை இங்கே: ref: `அட்ச்`:"

#: ../source/flow.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"With such a table in the :file:`pyproject.toml` file, a \":term:`frontend "
"<Build Frontend>`\" tool like :ref:`build` can run your chosen build tool's "
"\":term:`backend <Build Backend>`\" to create the build artifacts. Your "
"build tool may also provide its own frontend. An install tool like "
":ref:`pip` also acts as a frontend when it runs your build tool's backend to"
" install from a source distribution."
msgstr ""
"அத்தகைய அட்டவணையுடன்: கோப்பு: `pyproject.toml` கோப்பு, ஒரு\": கால: "
"`ஃபிரான்டென்ட் <பில்ட் ஃபிரான்டென்ட்>` \"கருவி போன்ற: ref:` பில்ட்` நீங்கள் "
"தேர்ந்தெடுத்த பில்ட் கருவியை இயக்க முடியும் \": கால:` பின்தளத்தில் < "
"உருவாக்க கலைப்பொருட்களை உருவாக்க பின்தளத்தில்> `\" உருவாக்குங்கள். உங்கள் "
"உருவாக்க கருவி அதன் சொந்த முன்பக்கத்தையும் வழங்கக்கூடும். ஒரு நிறுவும் "
"கருவி: ref: `பிப்` ஒரு மூல விநியோகத்திலிருந்து நிறுவ உங்கள் உருவாக்க "
"கருவியின் பின்தளத்தில் இயக்கும்போது ஒரு முன்பக்கமாகவும் செயல்படுகிறது."

#: ../source/flow.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The particular build tool you choose dictates what additional information is"
" required in the :file:`pyproject.toml` file. For example, you might "
"specify:"
msgstr ""
"நீங்கள் தேர்வுசெய்த குறிப்பிட்ட உருவாக்க கருவி: கோப்பு: `pyproject.toml` "
"கோப்பில் என்ன கூடுதல் செய்தி தேவை என்பதைக் குறிக்கிறது. எடுத்துக்காட்டாக, "
"நீங்கள் குறிப்பிடலாம்:"

#: ../source/flow.rst:97
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"a ``[project]`` table containing project :doc:`Core Metadata "
"</specifications/core-metadata/>` (name, version, author and so forth),"
msgstr ""
"ஒரு `` [திட்டம்] `` திட்டத்தைக் கொண்ட அட்டவணை: டாக்: `கோர் மேனிலை தரவு "
"</விவரக்குறிப்புகள்/கோர்-மெட்டாடேட்டா/>` (பெயர், பதிப்பு, ஆசிரியர் மற்றும் "
"பல),"

#: ../source/flow.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "a ``[tool]`` table containing tool-specific configuration options."
msgstr ""
"கருவி-குறிப்பிட்ட உள்ளமைவு விருப்பங்களைக் கொண்ட ஒரு `` [கருவி] `` அட்டவணை."

#: ../source/flow.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Refer to the :ref:`pyproject.toml guide <writing-pyproject-toml>` for a "
"complete guide to ``pyproject.toml`` configuration."
msgstr ""
"`` Pyproject.toml`` உள்ளமைவுக்கான முழுமையான வழிகாட்டிக்கு `pyproject.toml "
"வழிகாட்டி <எழுதுதல்-pyproject-toml>` ஐப் பார்க்கவும்."

#: ../source/flow.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Build artifacts"
msgstr "கலைப்பொருட்களை உருவாக்குங்கள்"

#: ../source/flow.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The source distribution (sdist)"
msgstr "மூல வழங்கல் (SDIST)"

#: ../source/flow.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A source distribution contains enough to install the package from source in "
"an end user's Python environment. As such, it needs the package source, and "
"may also include tests and documentation. These are useful for end users "
"wanting to develop your sources, and for end user systems where some local "
"compilation step is required (such as a C extension)."
msgstr ""
"இறுதி பயனரின் பைதான் சூழலில் மூலத்திலிருந்து தொகுப்பை நிறுவ ஒரு மூல "
"விநியோகத்தில் போதுமானது. எனவே, இதற்கு தொகுப்பு சான்று தேவை, மேலும் சோதனைகள் "
"மற்றும் ஆவணங்களும் இருக்கலாம். உங்கள் ஆதாரங்களை உருவாக்க விரும்பும் இறுதி "
"பயனர்களுக்கும், சில உள்ளக தொகுப்பு படி தேவைப்படும் இறுதி பயனர் "
"அமைப்புகளுக்கும் இவை பயனுள்ளதாக இருக்கும் (சி நீட்டிப்பு போன்றவை)."

#: ../source/flow.rst:119 ../source/flow.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :ref:`build` package knows how to invoke your build tool to create one "
"of these:"
msgstr ""
"The: ref: `பில்ட்` தொகுப்புக்கு இவற்றில் ஒன்றை உருவாக்க உங்கள் உருவாக்க "
"கருவியை எவ்வாறு செயல்படுத்துவது என்பது தெரியும்:"

#: ../source/flow.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Or, your build tool may provide its own interface for creating an sdist."
msgstr ""
"அல்லது, உங்கள் உருவாக்க கருவி ஒரு SDIST ஐ உருவாக்குவதற்கான அதன் சொந்த "
"இடைமுகத்தை வழங்கக்கூடும்."

#: ../source/flow.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The built distributions (wheels)"
msgstr "கட்டப்பட்ட விநியோகங்கள் (சக்கரங்கள்)"

#: ../source/flow.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A built distribution contains only the files needed for an end user's Python"
" environment. No compilation steps are required during the install, and the "
"wheel file can simply be unpacked into the ``site-packages`` directory. This"
" makes the install faster and more convenient for end users."
msgstr ""
"ஒரு கட்டமைக்கப்பட்ட விநியோகத்தில் இறுதி பயனரின் பைதான் சூழலுக்குத் தேவையான "
"கோப்புகள் மட்டுமே உள்ளன. நிறுவலின் போது தொகுப்பு படிகள் எதுவும் தேவையில்லை, "
"மேலும் சக்கரக் கோப்பை `` தள-பேக்கேச்கள்`` கோப்பகத்தில் திறக்கலாம். இது இறுதி"
" பயனர்களுக்கு நிறுவலை விரைவாகவும் வசதியாகவும் செய்கிறது."

#: ../source/flow.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A pure Python package typically needs only one \"generic\" wheel. A package "
"with compiled binary extensions needs a wheel for each supported combination"
" of Python interpreter, operating system, and CPU architecture that it "
"supports. If a suitable wheel file is not available, tools like :ref:`pip` "
"will fall back to installing the source distribution."
msgstr ""
"ஒரு தூய பைதான் தொகுப்புக்கு பொதுவாக ஒரே \"பொதுவான\" சக்கரம் மட்டுமே தேவை. "
"தொகுக்கப்பட்ட பைனரி நீட்டிப்புகளைக் கொண்ட ஒரு தொகுப்புக்கு பைதான் "
"மொழிபெயர்ப்பாளர், இயக்க முறைமை மற்றும் சிபியு கட்டமைப்பு ஆகியவற்றின் ஒவ்வொரு"
" ஆதரிக்கப்பட்ட கலவைக்கும் ஒரு சக்கரம் தேவை. பொருத்தமான சக்கர கோப்பு "
"கிடைக்கவில்லை என்றால், போன்ற கருவிகள்: குறிப்பு: `பிப்` மூல விநியோகத்தை "
"நிறுவுவதற்கு மீண்டும் விழும்."

#: ../source/flow.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Or, your build tool may provide its own interface for creating a wheel."
msgstr ""
"அல்லது, உங்கள் உருவாக்க கருவி ஒரு சக்கரத்தை உருவாக்குவதற்கான அதன் சொந்த "
"இடைமுகத்தை வழங்கக்கூடும்."

#: ../source/flow.rst:154
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The default behaviour of :ref:`build` is to make both an sdist and a wheel "
"from the source in the current directory; the above examples are "
"deliberately specific."
msgstr ""
"இதன் இயல்புநிலை நடத்தை: ref: `` பில்ட்` என்பது தற்போதைய கோப்பகத்தில் "
"மூலத்திலிருந்து ஒரு SDIST மற்றும் சக்கரம் இரண்டையும் உருவாக்குவதாகும்; மேலே "
"உள்ள எடுத்துக்காட்டுகள் வேண்டுமென்றே குறிப்பிட்டவை."

#: ../source/flow.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Upload to the package distribution service"
msgstr "தொகுப்பு விநியோக சேவையில் பதிவேற்றவும்"

#: ../source/flow.rst:161
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :ref:`twine` tool can upload build artifacts to PyPI for distribution, "
"using a command like:"
msgstr ""
"தி: ரெஃப்: `ட்வைன்` கருவி விநியோகத்திற்காக பைபிக்கு உருவாக்க கலைப்பொருட்களை "
"பதிவேற்றலாம், இது போன்ற கட்டளையைப் பயன்படுத்துகிறது:"

#: ../source/flow.rst:168
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Or, your build tool may provide its own interface for uploading."
msgstr ""
"அல்லது, உங்கள் உருவாக்க கருவி பதிவேற்றுவதற்கான அதன் சொந்த இடைமுகத்தை "
"வழங்கக்கூடும்."

#: ../source/flow.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Download and install"
msgstr "பதிவிறக்கம் செய்து நிறுவவும்"

#: ../source/flow.rst:173
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now that the package is published, end users can download and install the "
"package into their Python environment. Typically this is done with "
":ref:`pip`, using a command like:"
msgstr ""
"இப்போது தொகுப்பு வெளியிடப்பட்டுள்ளதால், இறுதி பயனர்கள் தங்கள் பைதான் சூழலில்"
" தொகுப்பை பதிவிறக்கம் செய்து நிறுவலாம். பொதுவாக இது செய்யப்படுகிறது: ref: "
"`பிப்`, போன்ற கட்டளையைப் பயன்படுத்துதல்:"

#: ../source/flow.rst:181
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"End users may also use other tools like :ref:`pipenv`, :ref:`poetry`, or "
":ref:`pdm`."
msgstr ""
"இறுதி பயனர்கள் போன்ற பிற கருவிகளையும் பயன்படுத்தலாம்: ref: `pipenv`,: ref:` "
"கவிதை`, அல்லது: ref: `PDM`."

#: ../source/glossary.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Glossary"
msgstr "சொற்களஞ்சியம்"

#: ../source/glossary.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Binary Distribution"
msgstr "பைரான் வழங்கல்"

#: ../source/glossary.rst:11
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A specific kind of :term:`Built Distribution` that contains compiled "
"extensions."
msgstr ""
"ஒரு குறிப்பிட்ட வகை: கால: `கட்டப்பட்ட விநியோகம்` அதில் தொகுக்கப்பட்ட "
"நீட்டிப்புகளைக் கொண்டுள்ளது."

#: ../source/glossary.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Build Backend"
msgstr "பின்தளத்தில் உருவாக்குங்கள்"

#: ../source/glossary.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A library that takes a source tree and builds a :term:`source distribution "
"<Source Distribution (or \"sdist\")>` or :term:`built distribution <Built "
"Distribution>` from it. The build is delegated to the backend by a "
":term:`frontend <Build Frontend>`. All backends offer a standardized "
"interface."
msgstr ""
"ஒரு மூல மரத்தை எடுத்து ஒரு நூலகம் ஒரு: காலத்தை உருவாக்குகிறது: `மூல வழங்கல் "
"<மூல வழங்கல் (அல்லது\" SDIST \")>` அல்லது: கால: `கட்டப்பட்ட வழங்கல் "
"<கட்டப்பட்ட விநியோகம்>` அதிலிருந்து. கட்டமைப்பானது பின்தளத்தில் "
"வழங்கப்படுகிறது: கால: `ஃபிரான்டென்ட் <பில்ட் ஃபிரான்டெண்ட்>`. அனைத்து "
"பின்தளத்தில் ஒரு தரப்படுத்தப்பட்ட இடைமுகத்தை வழங்குகிறது."

#: ../source/glossary.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Examples of build backends are :ref:`flit's flit-core <flit>`, :ref:`hatch's"
" hatchling <hatch>`, :ref:`maturin`, :ref:`meson-python`, :ref:`scikit-"
"build-core`, and :ref:`setuptools`."
msgstr ""
"பின்தளத்தில் கட்டுவதற்கான எடுத்துக்காட்டுகள்: `ஃபிளிட்ச் ஃபிளிட்-கோர் "
"<flit>`,: ref: `அட்ச் அட்ச் அட்ச்லிங் <அட்ச்>`,: குறிப்பு: `மேட்டூரின்`,: "
"குறிப்பு:` மீசன்-பைதான்`,: `ச்கிகிட் -பில்ட்-கோர்`, மற்றும்: குறிப்பு: "
"`செட்ப்டூல்ச்`."

#: ../source/glossary.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Build Frontend"
msgstr "முன்பக்கத்தை உருவாக்குங்கள்"

#: ../source/glossary.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A tool that users might run that takes arbitrary source trees or "
":term:`source distributions <Source Distribution (or \"sdist\")>` and builds"
" source distributions or :term:`wheels <Wheel>` from them. The actual "
"building is delegated to each source tree's :term:`build backend <Build "
"Backend>`."
msgstr ""
"தன்னிச்சையான மூல மரங்களை எடுக்கும் பயனர்கள் இயக்கக்கூடிய ஒரு கருவி அல்லது: "
"கால: `மூல வழங்கல் <மூல வழங்கல் (அல்லது\" SDIST \")>` மற்றும் மூல "
"விநியோகங்களை உருவாக்குகிறது அல்லது: கால: `சக்கரங்கள் <hewhel>` "
"அவர்களிடமிருந்து. உண்மையான கட்டிடம் ஒவ்வொரு மூல மரத்திற்கும் "
"வழங்கப்படுகிறது: சொல்: `பின்தளத்தில் உருவாக்கு <பின்தளத்தில் உருவாக்கு>`."

#: ../source/glossary.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Examples of build frontends are :ref:`pip` and :ref:`build`."
msgstr ""
"கட்டிய முன்பக்கங்களின் எடுத்துக்காட்டுகள்: ref: `pip` மற்றும்: ref:` build`."

#: ../source/glossary.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Built Distribution"
msgstr "கட்டப்பட்ட வழங்கல்"

#: ../source/glossary.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :term:`Distribution <Distribution Package>` format containing files and "
"metadata that only need to be moved to the correct location on the target "
"system, to be installed. :term:`Wheel` is such a format, whereas "
":term:`Source Distribution <Source Distribution (or \"sdist\")>` is not, in "
"that it requires a build step before it can be installed.  This format does "
"not imply that Python files have to be precompiled (:term:`Wheel` "
"intentionally does not include compiled Python files). See :ref:`package-"
"formats` for more information."
msgstr ""
"ப: கால: `விநியோக <விநியோக தொகுப்பு>` கோப்புகள் மற்றும் மெட்டாடேட்டாவைக் "
"கொண்ட வடிவம், இலக்கு கணினியில் சரியான இடத்திற்கு மட்டுமே நகர்த்தப்பட "
"வேண்டும், நிறுவப்பட வேண்டும். . இந்த வடிவம் பைதான் கோப்புகளை முன்கூட்டியே "
"எண்ண வேண்டும் என்பதை குறிக்கவில்லை (: கால: `சக்கரம்` வேண்டுமென்றே "
"தொகுக்கப்பட்ட பைதான் கோப்புகளை சேர்க்கவில்லை). காண்க: குறிப்பு: மேலும் "
"தகவலுக்கு `தொகுப்பு வடிவங்கள்."

#: ../source/glossary.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Built Metadata"
msgstr "மேனிலை தரவு கட்டப்பட்டது"

#: ../source/glossary.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The concrete form :term:`Core Metadata` takes when included inside an "
"installed :term:`Project` (``METADATA`` file) or a :term:`Distribution "
"Archive` (``PKG-INFO`` in a :term:`Sdist <Source Distribution (or "
"\"sdist\")>` and ``METADATA`` in a :term:`Wheel`)."
msgstr ""
"கான்கிரீட் படிவம்: கால: `கோர் மெட்டாடேட்டா` ஒரு நிறுவப்பட்ட: கால:` திட்டம்` "
"(`` மெட்டாடேட்டா`` கோப்பு) அல்லது ஒரு: கால: கால: `விநியோக காப்பகம்` (` "
"`பி.கே.சி-இன்ஃபோ`` ஒரு: கால: `Sdist <மூல வழங்கல் (அல்லது\" Sdist \")>` "
"மற்றும் `` மெட்டாடேட்டா`` ஒரு: கால: `சக்கரம்`)."

#: ../source/glossary.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Core Metadata"
msgstr "கோர் மேனிலை தரவு"

#: ../source/glossary.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :ref:`specification <core-metadata>` and the set of :term:`Core Metadata"
" Field`\\s it defines that describe key static attributes of a "
":term:`Distribution Package` or :term:`Installed Project`."
msgstr ""
"தி: ரெஃப்: `விவரக்குறிப்பு <கோர்-மெட்டாடேட்டா>` மற்றும் தொகுப்பு: கால: `கோர்"
" மேனிலை தரவு புலம்` \\ எச் இது ஒரு: காலத்தின் முக்கிய நிலையான பண்புகளை "
"விவரிக்கும் வரையறுக்கிறது:` விநியோக தொகுப்பு` அல்லது: கால: `நிறுவப்பட்ட "
"திட்டம்` ."

#: ../source/glossary.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Core Metadata Field"
msgstr "கோர் மேனிலை தரவு புலம்"

#: ../source/glossary.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A single key-value pair (or sequence of such with the same name, for "
"multiple-use fields) defined in the :term:`Core Metadata` spec and stored in"
" the :term:`Built Metadata`. Notably, distinct from a :term:`Pyproject "
"Metadata Key`."
msgstr ""
"ஒற்றை விசை-மதிப்பு இணை (அல்லது ஒரே பெயருடன், பல பயன்பாட்டு புலங்களுக்கு) "
"வரையறுக்கப்பட்டுள்ளது: கால: `கோர் மெட்டாடேட்டா` ச்பெக் மற்றும் இல் "
"சேமிக்கப்படுகிறது: கால:` கட்டப்பட்ட மெட்டாடேட்டா`. குறிப்பிடத்தக்க வகையில், "
"A இலிருந்து வேறுபட்டது: கால: `பைபிரெக்ட் மேனிலை தரவு கீ`."

#: ../source/glossary.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Distribution Archive"
msgstr "விநியோக காப்பகம்"

#: ../source/glossary.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The physical distribution artifact (i.e. a file on disk) for a "
":term:`Distribution Package`."
msgstr ""
"ஒரு: கால: `விநியோக தொகுப்பு` க்கான இயற்பியல் விநியோக கலைப்பொருள் (அதாவது "
"வட்டில் ஒரு கோப்பு)."

#: ../source/glossary.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Distribution Package"
msgstr "விநியோக தொகுப்பு"

#: ../source/glossary.rst:92
#, placeholders:Python:Windows:":term:`Release`", regex:":term:`\w+[\w\s]* <(Import Package|Module)>`", rst-text
msgid ""
"A versioned archive file that contains Python :term:`packages <Import "
"Package>`, :term:`modules <Module>`, and other resource files that are used "
"to distribute a :term:`Release`. The archive file is what an end-user will "
"download from the internet and install."
msgstr ""
"பைதான்: கால: `தொகுப்புகள் <இறக்குமதி தொகுப்பு>`,: கால: `தொகுதிகள் <தொகுதி>`,"
" மற்றும் பிற ஆதாரக் கோப்புகள் ஆகியவற்றைக் கொண்ட பதிப்புக் காப்பக கோப்பு, "
"ஒரு: கால: `வெளியீடு` விநியோகிக்கப் பயன்படும் பிற வள கோப்புகள். காப்பகக் "
"கோப்பு என்பது ஒரு இறுதி பயனர் இணையத்திலிருந்து பதிவிறக்கம் செய்து நிறுவும்."

#: ../source/glossary.rst:97
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A distribution package is more commonly referred to with the single words "
"\"package\" or \"distribution\", but this guide may use the expanded term "
"when more clarity is needed to prevent confusion with an :term:`Import "
"Package` (which is also commonly called a \"package\") or another kind of "
"distribution (e.g. a Linux distribution or the Python language "
"distribution), which are often referred to with the single term "
"\"distribution\". See :ref:`distribution-package-vs-import-package` for a "
"breakdown of the differences."
msgstr ""
"ஒரு விநியோக தொகுப்பு பொதுவாக \"தொகுப்பு\" அல்லது \"வழங்கல்\" என்ற ஒற்றை "
"சொற்களுடன் குறிப்பிடப்படுகிறது, ஆனால் குழப்பத்தைத் தடுக்க கூடுதல் தெளிவு "
"தேவைப்படும்போது இந்த வழிகாட்டி விரிவாக்கப்பட்ட காலத்தைப் பயன்படுத்தலாம்: "
"`இறக்குமதி தொகுப்பு` (இது பொதுவாகவும் பொதுவாகவும் \"தொகுப்பு\" என்று "
"அழைக்கப்படுகிறது) அல்லது மற்றொரு வகையான வழங்கல் (எ.கா. ஒரு லினக்ச் வழங்கல் "
"அல்லது பைதான் மொழி விநியோகம்), அவை பெரும்பாலும் \"வழங்கல்\" என்ற ஒற்றை "
"வார்த்தையுடன் குறிப்பிடப்படுகின்றன. காண்க: குறிப்பு: வேறுபாடுகளின் "
"முறிவுக்கு `விநியோக-பேக்கேச்-விஎச்-பிரசங்க-பேக்கேச்`."

# Suggested in Weblate:
#: ../source/glossary.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Egg"
msgstr "முட்டை"

#: ../source/glossary.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :term:`Built Distribution` format introduced by :ref:`setuptools`, which "
"has been replaced by :term:`Wheel`.  For details, see :ref:`egg-format`."
msgstr ""
"ப: கால: `கட்டப்பட்ட விநியோகம்` வடிவம் அறிமுகப்படுத்தியவர்: குறிப்பு:` "
"செட்டப்டூல்ச்`, இது மாற்றப்பட்டது: கால: `சக்கரம்`. விவரங்களுக்கு, காண்க: "
"ref: `முட்டை வடிவம்`."

#: ../source/glossary.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Extension Module"
msgstr "நீட்டிப்பு தொகுதி"

#: ../source/glossary.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :term:`Module` written in the low-level language of the Python "
"implementation: C/C++ for Python, Java for Jython. Typically contained in a "
"single dynamically loadable pre-compiled file, e.g.  a shared object (.so) "
"file for Python extensions on Unix, a DLL (given the .pyd extension) for "
"Python extensions on Windows, or a Java class file for Jython extensions."
msgstr ""
"ப: கால: `தொகுதி` பைதான் அமலாக்கத்தின் குறைந்த அளவிலான மொழியில் எழுதப்பட்டது:"
" பைத்தானுக்கு சி/சி ++, சிதானுக்கு சாவா. பொதுவாக ஒற்றை மாறும் ஏற்றக்கூடிய "
"முன்-தொகுக்கப்பட்ட கோப்பில் உள்ளது, எ.கா. யுனிக்ச் இல் பைதான் "
"நீட்டிப்புகளுக்கான பகிரப்பட்ட பொருள் (.SO) கோப்பு, சாளரங்களில் பைத்தான் "
"நீட்டிப்புகளுக்கான டி.எல்.எல் (.பிடி நீட்டிப்பு கொடுக்கப்பட்டுள்ளது) அல்லது "
"சைத்தான் நீட்டிப்புகளுக்கான சாவா வகுப்பு கோப்பு."

#: ../source/glossary.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Import Package"
msgstr "இறக்குமதி தொகுப்பு"

#: ../source/glossary.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A Python module which can contain other modules or recursively, other "
"packages."
msgstr ""
"ஒரு பைதான் தொகுதி மற்ற தொகுதிகள் அல்லது மீண்டும் மீண்டும், பிற தொகுப்புகளைக்"
" கொண்டிருக்கலாம்."

#: ../source/glossary.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An import package is more commonly referred to with the single word "
"\"package\", but this guide will use the expanded term when more clarity is "
"needed to prevent confusion with a :term:`Distribution Package` which is "
"also commonly called a \"package\". See :ref:`distribution-package-vs-"
"import-package` for a breakdown of the differences."
msgstr ""
"ஒரு இறக்குமதி தொகுப்பு பொதுவாக \"தொகுப்பு\" என்ற ஒற்றை வார்த்தையுடன் "
"குறிப்பிடப்படுகிறது, ஆனால் குழப்பத்தைத் தடுக்க கூடுதல் தெளிவு "
"தேவைப்படும்போது இந்த வழிகாட்டி விரிவாக்கப்பட்ட காலத்தைப் பயன்படுத்தும்: ஒரு:"
" கால: `விநியோக தொகுப்பு` இது பொதுவாக\" தொகுப்பு \"என்றும் அழைக்கப்படுகிறது ."
" காண்க: குறிப்பு: வேறுபாடுகளின் முறிவுக்கு "
"`விநியோக-பேக்கேச்-விஎச்-பிரசங்க-பேக்கேச்`."

#: ../source/glossary.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installed Project"
msgstr "நிறுவப்பட்ட திட்டம்"

#: ../source/glossary.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :term:`Project` that is installed for use with a Python interpreter or "
":term:`Virtual Environment`, as described in the specicifcation "
":ref:`recording-installed-packages`."
msgstr ""
"ஒரு: கால: `திட்டம்` இது ஒரு பைதான் மொழிபெயர்ப்பாளருடன் பயன்படுத்த "
"நிறுவப்பட்டுள்ளது அல்லது: கால:` மெய்நிகர் சூழல்`, விவரக்குறிப்பில் "
"விவரிக்கப்பட்டுள்ளபடி: குறிப்பு: `பதிவு-நிறுவப்பட்ட-தொகுப்புகள்`."

#: ../source/glossary.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Known Good Set (KGS)"
msgstr "அறியப்பட்ட நல்ல தொகுப்பு (கிலோ)"

#: ../source/glossary.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A set of distributions at specified versions which are compatible with each "
"other. Typically a test suite will be run which passes all tests before a "
"specific set of packages is declared a known good set. This term is commonly"
" used by frameworks and toolkits which are comprised of multiple individual "
"distributions."
msgstr ""
"ஒருவருக்கொருவர் இணக்கமான குறிப்பிட்ட பதிப்புகளில் விநியோகங்களின் தொகுப்பு. "
"பொதுவாக ஒரு சோதனை தொகுப்பு இயக்கப்படும், இது ஒரு குறிப்பிட்ட தொகுப்புகள் "
"அறியப்பட்ட நல்ல தொகுப்பாக அறிவிக்கப்படுவதற்கு முன்பு அனைத்து சோதனைகளையும் "
"கடந்து செல்லும். இந்த சொல் பொதுவாக பல தனிப்பட்ட விநியோகங்களைக் கொண்ட "
"கட்டமைப்புகள் மற்றும் கருவித்தொகுப்புகளால் பயன்படுத்தப்படுகிறது."

#: ../source/glossary.rst:149
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "License Classifier"
msgstr "உரிம வகைப்படுத்தி"

#: ../source/glossary.rst:152
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A PyPI Trove classifier (as :ref:`described <core-metadata-classifier>` in "
"the :term:`Core Metadata` specification) which begins with ``License ::``."
msgstr ""
"ஒரு பைபி ட்ரோவ் வகைப்படுத்தி (AS: Ref: `விவரிக்கப்பட்ட "
"<கோர்-மெட்டாடேட்டா-கிளாசிஃபையர்>` இல்: கால: `கோர் மெட்டாடேட்டா` "
"விவரக்குறிப்பு)` `உரிமம் ::` `உடன் தொடங்குகிறது."

#: ../source/glossary.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "License Expression"
msgstr "உரிம வெளிப்பாடு"

#: ../source/glossary.rst:158
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "SPDX Expression"
msgstr "SPDX வெளிப்பாடு"

#: ../source/glossary.rst:161
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string with valid SPDX license expression syntax, including one or more "
"SPDX :term:`License Identifier`\\(s), which describes a :term:`Project`'s "
"license(s) and how they inter-relate. Examples: ``GPL-3.0-or-later``, ``MIT "
"AND (Apache-2.0 OR BSD-2-Clause)``"
msgstr ""
"ஒன்று அல்லது அதற்கு மேற்பட்ட SPDX உள்ளிட்ட செல்லுபடியாகும் SPDX உரிம "
"வெளிப்பாடு தொடரியல் கொண்ட ஒரு சரம்: சொல்: `உரிம அடையாளங்காட்டி` \\ (கள்), "
"இது ஒரு: காலத்தை விவரிக்கிறது:` திட்டத்தின் உரிமம் (கள்) மற்றும் அவை எவ்வாறு"
" தொடர்புபடுத்தப்படுகின்றன. எடுத்துக்காட்டுகள்: `` gpl-3.0 அல்லது-later``, ``"
" MIT மற்றும் (APACHE-2.0 அல்லது BSD-2-confase) ``"

#: ../source/glossary.rst:169
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "License Identifier"
msgstr "உரிம அடையாளங்காட்டி"

#: ../source/glossary.rst:170
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "SPDX Identifier"
msgstr "SPDX அடையாளம் காணவும்"

#: ../source/glossary.rst:173
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A valid SPDX short-form license identifier, originally specified in "
":pep:`639`. This includes all valid SPDX identifiers and the custom "
"``LicenseRef-[idstring]`` strings conforming to the SPDX specification. "
"Examples: ``MIT``, ``GPL-3.0-only``, ``LicenseRef-My-Custom-License``"
msgstr ""
"செல்லுபடியாகும் SPDX குறுகிய வடிவ உரிம அடையாளங்காட்டி, முதலில் "
"குறிப்பிடப்பட்டுள்ளது: PEP: `639`. இதில் அனைத்து செல்லுபடியாகும் SPDX "
"அடையாளங்காட்டிகள் மற்றும் தனிப்பயன் `` LicuenSeref- [idstring] `` SPDX "
"விவரக்குறிப்புக்கு இணங்க சரங்கள் ஆகியவை அடங்கும். எடுத்துக்காட்டுகள்: `` "
"mit``, `` gpl -3.0-lonly``, `` licenseref-my-custom-license``"

#: ../source/glossary.rst:183
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Module"
msgstr "தொகுதி"

#: ../source/glossary.rst:186
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The basic unit of code reusability in Python, existing in one of two types: "
":term:`Pure Module`, or :term:`Extension Module`."
msgstr ""
"பைத்தானில் குறியீடு மறுபயன்பாட்டின் அடிப்படை அலகு, இரண்டு வகைகளில் ஒன்றில் "
"உள்ளது :: கால: `தூய தொகுதி`, அல்லது: கால:` நீட்டிப்பு தொகுதி`."

#: ../source/glossary.rst:189
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package Index"
msgstr "தொகுப்பு அட்டவணை"

#: ../source/glossary.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A repository of distributions with a web interface to automate "
":term:`package <Distribution Package>` discovery and consumption."
msgstr ""
"தானியங்குபடுத்த ஒரு வலை இடைமுகத்துடன் விநியோகங்களின் களஞ்சியம்: சொல்: "
"`தொகுப்பு <விநியோக தொகுப்பு>` கண்டுபிடிப்பு மற்றும் நுகர்வு."

#: ../source/glossary.rst:195
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Per Project Index"
msgstr "திட்டக் குறியீட்டிற்கு"

#: ../source/glossary.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A private or other non-canonical :term:`Package Index` indicated by a "
"specific :term:`Project` as the index preferred or required to resolve "
"dependencies of that project."
msgstr ""
"ஒரு தனியார் அல்லது பிற நியதி அல்லாத: கால: `தொகுப்பு குறியீட்டு` ஒரு "
"குறிப்பிட்ட: கால: கால:` திட்டம்` அந்த திட்டத்தின் சார்புகளைத் தீர்க்க "
"குறியீடாக அல்லது தேவைப்படுகிறது."

#: ../source/glossary.rst:202 ../source/guides/hosting-your-own-index.rst:62
#: ../source/guides/index-mirrors-and-caches.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project"
msgstr "திட்டம்"

#: ../source/glossary.rst:205
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A library, framework, script, plugin, application, or collection of data or "
"other resources, or some combination thereof that is intended to be packaged"
" into a :term:`Distribution <Distribution Package>`."
msgstr ""
"ஒரு நூலகம், கட்டமைப்பு, ச்கிரிப்ட், சொருகி, பயன்பாடு அல்லது தரவு அல்லது பிற "
"வளங்களின் சேகரிப்பு அல்லது அதன் சில கலவையானது A: கால: `விநியோக <விநியோக "
"தொகுப்பு>` இல் தொகுக்கப்பட வேண்டும்."

#: ../source/glossary.rst:209
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Since most projects create :term:`Distributions <Distribution Package>` "
"using either :pep:`518` ``build-system``, :ref:`distutils` or "
":ref:`setuptools`, another practical way to define projects currently is "
"something that contains a :term:`pyproject.toml`, :term:`setup.py`, or "
":term:`setup.cfg` file at the root of the project source directory."
msgstr ""
"பெரும்பாலான திட்டங்கள் உருவாகின்றன: கால: `விநியோகம் <விநியோக தொகுப்பு>` "
"ஒன்றைப் பயன்படுத்துதல்: PEP: `518`` `` பில்ட்-சிச்டம்``,: குறிப்பு: "
"`தொலைதூரங்கள்` அல்லது: ref:` setuptools`, திட்டங்களை வரையறுக்க மற்றொரு "
"நடைமுறை வழி தற்போது ஒரு: கால: `pyproject.toml`,: கால:` setup.py`, அல்லது: "
"கால: `setup.cfg` கோப்பு திட்ட மூல கோப்பகத்தில் உள்ள ஒன்று."

#: ../source/glossary.rst:215
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python projects must have unique names, which are registered on :term:`PyPI "
"<Python Package Index (PyPI)>`. Each project will then contain one or more "
":term:`Releases <Release>`, and each release may comprise one or more "
":term:`distributions <Distribution Package>`."
msgstr ""
"பைதான் திட்டங்களில் தனித்துவமான பெயர்கள் இருக்க வேண்டும், அவை பதிவு "
"செய்யப்பட்டுள்ளன: கால: `பைபி <பைதான் தொகுப்பு குறியீட்டு (பைபி)>`. ஒவ்வொரு "
"திட்டத்திலும் ஒன்று அல்லது அதற்கு மேற்பட்டவை இருக்கும்: கால: `வெளியீடுகள் "
"<வெளியீடு>`, மேலும் ஒவ்வொரு வெளியீட்டிலும் ஒன்று அல்லது அதற்கு மேற்பட்டவை "
"இருக்கலாம்: சொல்: `விநியோகம் <விநியோக தொகுப்பு>`."

#: ../source/glossary.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that there is a strong convention to name a project after the name of "
"the package that is imported to run that project. However, this doesn't have"
" to hold true. It's possible to install a distribution from the project "
"'foo' and have it provide a package importable only as 'bar'."
msgstr ""
"அந்த திட்டத்தை இயக்க இறக்குமதி செய்யப்பட்ட தொகுப்பின் பெயருக்குப் பிறகு ஒரு "
"திட்டத்திற்கு பெயரிட ஒரு வலுவான மாநாடு உள்ளது என்பதை நினைவில் கொள்க. "
"இருப்பினும், இது உண்மையாக இருக்க வேண்டியதில்லை. 'ஃபூ' திட்டத்திலிருந்து ஒரு "
"விநியோகத்தை நிறுவ முடியும், மேலும் இது ஒரு தொகுப்பை 'பார்' என்று மட்டுமே "
"இறக்குமதி செய்ய வேண்டும்."

#: ../source/glossary.rst:226
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project Root Directory"
msgstr "திட்ட ரூட் அடைவு"

#: ../source/glossary.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The filesystem directory in which a :term:`Project`'s :term:`source tree "
"<Project Source Tree>` is located."
msgstr ""
"கோப்பு முறைமை அடைவு இதில் A: கால: `திட்டம்` கள்: கால:` மூல மரம் <திட்ட மூல "
"மரம்> `அமைந்துள்ளது."

#: ../source/glossary.rst:232
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project Source Tree"
msgstr "திட்ட மூல மரம்"

#: ../source/glossary.rst:235
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The on-disk format of a :term:`Project` used for development, containing its"
" raw source code before being packaged into a :term:`Source Distribution "
"<Source Distribution (or \"sdist\")>` or :term:`Built Distribution`."
msgstr ""
"A இன் ஆன்-வட்டு வடிவம்: கால: `திட்டம்` அபிவிருத்திக்குப் "
"பயன்படுத்தப்படுகிறது, அதன் மூல மூலக் குறியீட்டைக் கொண்டிருப்பதற்கு முன்பு "
"அதன் மூல மூலக் குறியீட்டைக் கொண்டுள்ளது: கால:` மூல வழங்கல் <மூல வழங்கல் "
"(அல்லது \"SDIST\")> `அல்லது: கால:` கட்டப்பட்டது விநியோகம்`."

#: ../source/glossary.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project Source Metadata"
msgstr "திட்ட மூல மேனிலை தரவு"

#: ../source/glossary.rst:244
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Metadata defined by the package author in a :term:`Project`'s :term:`source "
"tree <Project Source Tree>`, to be transformed into :term:`Core Metadata "
"field`\\s in the :term:`Built Metadata` by the project's :term:`build "
"backend <Build Backend>`. Can be written as :term:`Pyproject Metadata`, or "
"in a tool-specific format (under the ``[tool]`` table in ``pyproject.toml``,"
" or in a tool's own configuration file)."
msgstr ""
"ஒரு: கால: `திட்டம்` கள்: கால:` மூல மரம் <திட்ட மூல மரம்> `, மாற்றப்பட "
"வேண்டும்: கால: கால:` கோர் மேனிலை தரவு புலம்` \\ கள்: `கட்டப்பட்டவை "
"திட்டத்தின் மூலம் மெட்டாடேட்டா: கால: `பின்தளத்தில் உருவாக்கு <பின்தளத்தில் "
"உருவாக்கு>`. இவ்வாறு எழுதலாம்: கால: `பைபிரெக்ட் மெட்டாடேட்டா`, அல்லது "
"கருவி-குறிப்பிட்ட வடிவத்தில் (` `[கருவி]` `` pyproject.toml`` அல்லது ஒரு "
"கருவியின் சொந்த உள்ளமைவு கோப்பில்) `` அட்டவணையின் கீழ்)."

#: ../source/glossary.rst:254
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pure Module"
msgstr "தூய தொகுதி"

#: ../source/glossary.rst:257
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :term:`Module` written in Python and contained in a single ``.py`` file "
"(and possibly associated ``.pyc`` and/or ``.pyo`` files)."
msgstr ""
"ஒரு: கால: `தொகுதி` பைத்தானில் எழுதப்பட்டு ஒற்றை` .py`` கோப்பில் (மற்றும் "
"தொடர்புடைய `` .பிசி`` மற்றும்/அல்லது `` .பியோ` கோப்புகள்) உள்ளன."

#: ../source/glossary.rst:260
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pyproject Metadata"
msgstr "Pyproject மேனிலை தரவு"

#: ../source/glossary.rst:263
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :term:`Project Source Metadata` format defined by the :ref:`declaring-"
"project-metadata` specification and originally introduced in :pep:`621`, "
"stored as :term:`Pyproject Metadata Key`\\s under the ``[project]`` table of"
" a :term:`pyproject.toml` file. Notably, *not* a tool-specific source "
"metadata format under the ``[tool]`` table in ``pyproject.toml``."
msgstr ""
"தி: கால: `திட்ட மூல மெட்டாடேட்டா` வடிவம் வரையறுக்கப்பட்டுள்ளது: ref:` "
"அறிவித்தல்-திட்ட-மெட்டாடேட்டா` விவரக்குறிப்பை அறிவித்தல் மற்றும் முதலில் "
"அறிமுகப்படுத்தப்பட்டது: PEP: `621`, இவ்வாறு சேமிக்கப்படுகிறது:` பைபிரெக்ட் "
"மேனிலை தரவு கீ` \\ கள் `கீழ் `[திட்டம்]` `ஒரு அட்டவணை: கால:` pyproject.toml`"
" கோப்பு. குறிப்பிடத்தக்க வகையில், `` pyproject.toml`` இல் `` [கருவி] `` "
"அட்டவணையின் கீழ் ஒரு கருவி-குறிப்பிட்ட மூல மேனிலை தரவு வடிவமைப்பை * அல்ல."

#: ../source/glossary.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pyproject Metadata Key"
msgstr "Pyproject Metadata key"

#: ../source/glossary.rst:274
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A top-level TOML key in the ``[project]`` table in ``pyproject.toml``; part "
"of the :term:`Pyproject Metadata`. Notably, distinct from a :term:`Core "
"Metadata Field`."
msgstr ""
"`` திட்ட] `` `` pyproject.toml`` இல் ஒரு உயர்மட்ட டாம்ல் விசை; இதன் ஒரு "
"பகுதி: கால: `பைபிரொசெக்ட் மெட்டாடேட்டா`. குறிப்பிடத்தக்க வகையில், A "
"இலிருந்து வேறுபட்டது: கால: `கோர் மேனிலை தரவு புலம்`."

#: ../source/glossary.rst:278
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pyproject Metadata Subkey"
msgstr "Pyproject மேனிலை தரவு சப்ச்கி"

#: ../source/glossary.rst:281
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A second-level TOML key under a table-valued :term:`Pyproject Metadata Key`."
msgstr ""
"அட்டவணை மதிப்பீட்டின் கீழ் இரண்டாவது நிலை டாம்ல் விசை: கால: `பைபிரெக்ட் "
"மேனிலை தரவு கீ`."

#: ../source/glossary.rst:284
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python Packaging Authority (PyPA)"
msgstr "பைதான் பேக்கேசிங் ஆணையம் (பைபா)"

#: ../source/glossary.rst:287
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"PyPA is a working group that maintains many of the relevant projects in "
"Python packaging. They maintain a site at :doc:`pypa.io <pypa:index>`, host "
"projects on `GitHub <https://github.com/pypa>`_ and `Bitbucket "
"<https://bitbucket.org/pypa>`_, and discuss issues on the `distutils-sig "
"mailing list <https://mail.python.org/mailman3/lists/distutils-"
"sig.python.org/>`_ and `the Python Discourse forum "
"<https://discuss.python.org/c/packaging>`__."
msgstr ""
"பைபா என்பது பைதான் பேக்கேசிங்கில் தொடர்புடைய பல திட்டங்களை பராமரிக்கும் ஒரு "
"பணிக்குழு ஆகும். அவர்கள் ஒரு தளத்தை பராமரிக்கின்றனர்: doc: `pypa.io <pypa: "
"index>`, `github <https://github.com/pypa>` _ மற்றும் `பிட்பக்கெட் "
"<https://bitbucket.org/pypa > `_, மற்றும்` டிச்டிடில்ச்-சிக் அஞ்சல் "
"பட்டியலில் உள்ள சிக்கல்களைப் பற்றி விவாதிக்கவும் "
"//discuss.python.org/c/packaging>`__."

#: ../source/glossary.rst:296
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python Package Index (PyPI)"
msgstr "பைதான் தொகுப்பு அட்டவணை (PYPI)"

#: ../source/glossary.rst:299
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`PyPI <https://pypi.org>`_ is the default :term:`Package Index` for the "
"Python community. It is open to all Python developers to consume and "
"distribute their distributions."
msgstr ""
"`Pypi <https://pypi.org>` _ என்பது இயல்புநிலை: சொல்: பைதான் சமூகத்திற்கான "
"`தொகுப்பு குறியீடு`. அனைத்து பைதான் டெவலப்பர்களுக்கும் அவர்களின் "
"விநியோகங்களை உட்கொள்வதற்கும் விநியோகிப்பதற்கும் இது திறந்திருக்கும்."

#: ../source/glossary.rst:302
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pypi.org"
msgstr "pypi.org"

#: ../source/glossary.rst:305
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`pypi.org <https://pypi.org>`_ is the domain name for the :term:`Python "
"Package Index (PyPI)`. It replaced the legacy index domain name, "
"``pypi.python.org``, in 2017. It is powered by :ref:`warehouse`."
msgstr ""
"`pypi.org <https://pypi.org>` _ என்பது டொமைன் பெயர்: கால: `பைதான் தொகுப்பு "
"அட்டவணை (PYPI)`. இது 2017 ஆம் ஆண்டில் மரபு குறியீட்டு டொமைன் பெயரை "
"மாற்றியது, `` pypi.python.org``. இது இயக்கப்படுகிறது: ref: `கிடங்கு`."

#: ../source/glossary.rst:309
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pyproject.toml"
msgstr "pyproject.toml"

#: ../source/glossary.rst:312
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The tool-agnostic :term:`Project` specification file. Defined in :pep:`518`."
msgstr ""
"கருவி-அம்போச்டிக்: கால: `திட்டம்` விவரக்குறிப்பு கோப்பு. "
"வரையறுக்கப்பட்டுள்ளது: PEP: `518`."

#: ../source/glossary.rst:314
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Release"
msgstr "வெளியீடு"

#: ../source/glossary.rst:317
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:":term:`\w+[\w\s]* <Project>`", rst-text
msgid ""
"A snapshot of a :term:`Project` at a particular point in time, denoted by a "
"version identifier."
msgstr ""
"A இன் ச்னாப்சாட்: கால: `திட்டம்` ஒரு குறிப்பிட்ட கட்டத்தில், பதிப்பு "
"அடையாளங்காட்டியால் குறிக்கப்படுகிறது."

#: ../source/glossary.rst:320
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:":term:`\w+[\w\s]* <Distribution Package>`", rst-text
msgid ""
"Making a release may entail the publishing of multiple :term:`Distributions "
"<Distribution Package>`.  For example, if version 1.0 of a project was "
"released, it could be available in both a source distribution format and a "
"Windows installer distribution format."
msgstr ""
"வெளியீட்டை உருவாக்குவது பல: கால: `விநியோகம் <விநியோக தொகுப்பு>` வெளியீட்டைக்"
" கொண்டிருக்கலாம். எடுத்துக்காட்டாக, ஒரு திட்டத்தின் பதிப்பு 1.0 "
"வெளியிடப்பட்டால், அது ஒரு மூல விநியோக வடிவம் மற்றும் சாளரங்கள் நிறுவி "
"விநியோக வடிவத்தில் கிடைக்கக்கூடும்."

#: ../source/glossary.rst:325
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requirement"
msgstr "தேவை"

#: ../source/glossary.rst:328
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A specification for a :term:`package <Distribution Package>` to be "
"installed.  :ref:`pip`, the :term:`PYPA <Python Packaging Authority (PyPA)>`"
" recommended installer, allows various forms of specification that can all "
"be considered a \"requirement\". For more information, see the :ref:`pip:pip"
" install` reference."
msgstr ""
"ஒரு விவரக்குறிப்பு ஒரு: கால: `தொகுப்பு <விநியோக தொகுப்பு>` நிறுவப்பட "
"வேண்டும். . மேலும் தகவலுக்கு, பார்க்க: ref: `PIP: PIP INSTALL` குறிப்பு."

#: ../source/glossary.rst:334
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requirement Specifier"
msgstr "தேவை விவரக்குறிப்பு"

#: ../source/glossary.rst:337
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A format used by :ref:`pip` to install packages from a :term:`Package "
"Index`. For an EBNF diagram of the format, see :ref:`dependency-specifiers`."
" For example, \"foo>=1.3\" is a requirement specifier, where \"foo\" is the "
"project name, and the \">=1.3\" portion is the :term:`Version Specifier`"
msgstr ""
"பயன்படுத்திய ஒரு வடிவம்: ref: `பிப்` ஒரு: கால:` தொகுப்பு குறியீட்டு` "
"இலிருந்து தொகுப்புகளை நிறுவ. வடிவமைப்பின் ஈபிஎன்எஃப் வரைபடத்திற்கு, காண்க: "
"குறிப்பு: `சார்பு-விவரக்குறிப்புகள்`. எடுத்துக்காட்டாக, \"FOO> = 1.3\" "
"என்பது ஒரு தேவை விவரக்குறிப்பாகும், அங்கு \"FOO\" என்பது திட்ட பெயர், "
"மற்றும் \"> = 1.3\" பகுதி: கால: `பதிப்பு விவரக்குறிப்பு`"

#: ../source/glossary.rst:342
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requirements File"
msgstr "தேவைகள் கோப்பு"

#: ../source/glossary.rst:345
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A file containing a list of :term:`Requirements <Requirement>` that can be "
"installed using :ref:`pip`. For more information, see the :ref:`pip` docs on"
" :ref:`pip:Requirements Files`."
msgstr ""
"ஒரு பட்டியலைக் கொண்ட ஒரு கோப்பு: கால: `தேவைகள் <தேவை>` அதைப் பயன்படுத்தி "
"நிறுவலாம்: குறிப்பு: `பிப்`. மேலும் தகவலுக்கு, பார்க்க: ref: `பிப்` டாக்ச் "
"ஆன்: குறிப்பு:` பிப்: தேவைகள் கோப்புகள்`."

#: ../source/glossary.rst:349
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Root License Directory"
msgstr "ரூட் உரிம அடைவு"

#: ../source/glossary.rst:350
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "License Directory"
msgstr "உரிம அடைவு"

#: ../source/glossary.rst:353
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The directory under which license files are stored in a :term:`Project "
"Source Tree`, :term:`Distribution Archive` or :term:`Installed Project`. For"
" a :term:`Project Source Tree` or :term:`Source Distribution (or "
"\"sdist\")`, this is the :term:`Project Root Directory`. For a :term:`Built "
"Distribution` or :term:`Installed Project`, this is the :file:`.dist-"
"info/licenses/` directory of the wheel archive or project folder "
"respectively. Also, the root directory that paths recorded in the ``License-"
"File`` :term:`Core Metadata Field` are relative to."
msgstr ""
"எந்த உரிமக் கோப்புகள் ஒரு: கால: `திட்ட மூல மரம்`,: கால:` விநியோக காப்பகம்` "
"அல்லது: கால: `நிறுவப்பட்ட திட்டம்` என்ற கோப்பகத்தின் கீழ் உள்ள அடைவு. ஒரு: "
"கால: `திட்ட மூல மரம்` அல்லது: கால:` மூல வழங்கல் (அல்லது \"SDIST\") `, இது: "
"கால:` திட்ட ரூட் அடைவு`. ஒரு: காலத்திற்கு: `கட்டப்பட்ட விநியோகம்` அல்லது: "
"கால:` நிறுவப்பட்ட திட்டம்`, இது: கோப்பு: `.டிச்ட்-இன்ஃபோ/உரிமங்கள்/முறையே "
"சக்கர காப்பகம் அல்லது திட்ட கோப்புறையின் அடைவு. மேலும், `` உரிம-கோப்பு``: "
"கால: `கோர் மேனிலை தரவு புலம்` இல் பதிவு செய்யப்பட்ட பாதைகள் தொடர்புடையவை."

#: ../source/glossary.rst:366
#: ../source/guides/distributing-packages-using-setuptools.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "setup.py"
msgstr "setup.py"

#: ../source/glossary.rst:367
#: ../source/guides/distributing-packages-using-setuptools.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "setup.cfg"
msgstr "setup.cfg"

#: ../source/glossary.rst:370
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The project specification files for :ref:`distutils` and :ref:`setuptools`. "
"See also :term:`pyproject.toml`."
msgstr ""
"இதற்கான திட்ட விவரக்குறிப்பு கோப்புகள்: ref: `distutils` மற்றும்: ref:` "
"setuptools`. மேலும் காண்க: கால: `pyproject.toml`."

#: ../source/glossary.rst:373
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source Archive"
msgstr "மூல காப்பகம்"

#: ../source/glossary.rst:376
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An archive containing the raw source code for a :term:`Release`, prior to "
"creation of a :term:`Source Distribution <Source Distribution (or "
"\"sdist\")>` or :term:`Built Distribution`."
msgstr ""
"A: காலத்திற்கான மூல மூலக் குறியீட்டைக் கொண்ட ஒரு காப்பகம்: `வெளியீடு`, ஒரு "
"உருவாக்குவதற்கு முன்: கால:` மூல வழங்கல் <மூல வழங்கல் (அல்லது \"SDIST\")> "
"`அல்லது: கால:` கட்டப்பட்ட விநியோகம்`."

#: ../source/glossary.rst:380
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source Distribution (or \"sdist\")"
msgstr "மூல வழங்கல் (அல்லது \"SDIST\")"

#: ../source/glossary.rst:383
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :term:`distribution <Distribution Archive>` format (usually generated "
"using ``python -m build --sdist``) that provides metadata and the essential "
"source files needed for installing by a tool like :ref:`pip`, or for "
"generating a :term:`Built Distribution`. See :ref:`package-formats` for more"
" information."
msgstr ""
"ப: கால: `விநியோகம் <விநியோக காப்பகம்>` வடிவம் (வழக்கமாக `` பைதான் -எம் "
"பில்ட் - -ச்டிச்ட்`` ஐப் பயன்படுத்தி உருவாக்கப்படுகிறது) இது "
"மெட்டாடேட்டாவையும் ஒரு கருவியால் நிறுவ தேவையான அத்தியாவசிய மூல கோப்புகளையும்"
" வழங்குகிறது: re: `பிப்`, அல்லது உருவாக்க ஒரு: கால: `கட்டப்பட்ட விநியோகம்`. "
"காண்க: குறிப்பு: மேலும் தகவலுக்கு `தொகுப்பு வடிவங்கள்."

#: ../source/glossary.rst:389
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "System Package"
msgstr "கணினி தொகுப்பு"

#: ../source/glossary.rst:392
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A package provided in a format native to the operating system, e.g. an rpm "
"or dpkg file."
msgstr ""
"இயக்க முறைமைக்கு சொந்தமான வடிவத்தில் வழங்கப்பட்ட ஒரு தொகுப்பு, எ.கா. ஒரு RPM"
" அல்லது DPKG கோப்பு."

#: ../source/glossary.rst:395
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Version Specifier"
msgstr "பதிப்பு விவரக்குறிப்பு"

#: ../source/glossary.rst:398
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The version component of a :term:`Requirement Specifier`. For example, the "
"\">=1.3\" portion of \"foo>=1.3\".  Read the :ref:`Version specifier "
"specification <version-specifiers>` for a full description of the specifiers"
" that Python packaging currently supports.  Support for this specification "
"was implemented in :ref:`setuptools` v8.0 and :ref:`pip` v6.0."
msgstr ""
"A இன் பதிப்பு கூறு: கால: `தேவை விவரக்குறிப்பு`. எடுத்துக்காட்டாக, \"FOO> = "
"1.3\" இன் \"> = 1.3\" பகுதி. படிக்கவும்: ref: `பதிப்பு விவரக்குறிப்பு "
"விவரக்குறிப்பு <பதிப்பு-விவரக்குறிப்புகள்>` பைதான் பேக்கேசிங் தற்போது "
"ஆதரிக்கும் குறிப்பிட்ட விவரக்குறிப்பாளர்களின் முழு விளக்கத்திற்கு. இந்த "
"விவரக்குறிப்பிற்கான உதவி இதில் செயல்படுத்தப்பட்டது: குறிப்பு: `setuptools` "
"v8.0 மற்றும்: Ref:` Pip` v6.0."

#: ../source/glossary.rst:403
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Virtual Environment"
msgstr "மெய்நிகர் சூழல்"

#: ../source/glossary.rst:406
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An isolated Python environment that allows packages to be installed for use "
"by a particular application, rather than being installed system wide. For "
"more information, see the section on :ref:`Creating and using Virtual "
"Environments`."
msgstr ""
"கணினி அகலமாக நிறுவப்படுவதை விட, ஒரு குறிப்பிட்ட பயன்பாட்டால் பயன்படுத்த "
"தொகுப்புகளை நிறுவ அனுமதிக்கும் ஒரு தனிமைப்படுத்தப்பட்ட பைதான் சூழல். மேலும் "
"தகவலுக்கு, பகுதியைப் பார்க்கவும்: ref: `மெய்நிகர் சூழல்களை உருவாக்குதல் "
"மற்றும் பயன்படுத்துதல்`."

#: ../source/glossary.rst:411
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wheel Format"
msgstr "சக்கர வடிவம்"

# Suggested in Weblate:
#: ../source/glossary.rst:412
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wheel"
msgstr "சக்கரம்"

#: ../source/glossary.rst:415
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The standard :term:`Built Distribution` format originally introduced in "
":pep:`427` and defined by the :ref:`binary-distribution-format` "
"specification. See :ref:`package-formats` for more information. Not to be "
"confused with its reference implementation, the :term:`Wheel Project`."
msgstr ""
"தரநிலை: சொல்: `கட்டப்பட்ட விநியோகம்` வடிவம் முதலில் அறிமுகப்படுத்தப்பட்டது: "
"PEP:` 427` மற்றும் வரையறுக்கப்பட்டுள்ளது: ref: `பைனரி-விநியோக வடிவ "
"விவரங்கள்` விவரக்குறிப்பு. காண்க: குறிப்பு: மேலும் தகவலுக்கு `தொகுப்பு "
"வடிவங்கள். அதன் குறிப்பு செயல்படுத்தலுடன் குழப்பமடையக்கூடாது, தி: கால: "
"`சக்கர திட்டம்`."

#: ../source/glossary.rst:422
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wheel Project"
msgstr "சக்கர திட்டம்"

#: ../source/glossary.rst:425
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The PyPA reference implementation of the :term:`Wheel Format`; see "
":ref:`wheel`."
msgstr ""
"பைபா குறிப்பு செயல்படுத்தல்: கால: `சக்கர வடிவமைப்பு`; காண்க: குறிப்பு: "
"`சக்கரம்`."

#: ../source/glossary.rst:427
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Working Set"
msgstr "வேலை தொகுப்பு"

#: ../source/glossary.rst:430
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A collection of :term:`distributions <Distribution Package>` available for "
"importing. These are the distributions that are on the `sys.path` variable. "
"At most, one :term:`Distribution <Distribution Package>` for a project is "
"possible in a working set."
msgstr ""
"ஒரு தொகுப்பு: கால: `விநியோகம் <விநியோக தொகுப்பு>` இறக்குமதி செய்ய "
"கிடைக்கிறது. `Sys.path` மாறியில் இருக்கும் விநியோகங்கள் இவை. அதிகபட்சம், "
"ஒன்று: சொல்: `விநியோக <விநியோக தொகுப்பு>` ஒரு திட்டத்திற்கு வேலை செய்யும் "
"தொகுப்பில் சாத்தியமாகும்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Analyzing PyPI package downloads"
msgstr "PYPI தொகுப்பு பதிவிறக்கங்களை பகுப்பாய்வு செய்தல்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section covers how to use the public PyPI download statistics dataset "
"to learn more about downloads of a package (or packages) hosted on PyPI. For"
" example, you can use it to discover the distribution of Python versions "
"used to download a package."
msgstr ""
"PYPI இல் புரவலன் செய்யப்பட்ட ஒரு தொகுப்பின் (அல்லது தொகுப்புகள்) "
"பதிவிறக்கங்களைப் பற்றி மேலும் அறிய பொது PYPI பதிவிறக்க புள்ளிவிவர "
"தரவுத்தொகுப்பை எவ்வாறு பயன்படுத்துவது என்பதை இந்த பிரிவு உள்ளடக்கியது. "
"எடுத்துக்காட்டாக, ஒரு தொகுப்பைப் பதிவிறக்குவதற்குப் பயன்படுத்தப்படும் பைதான்"
" பதிப்புகளின் விநியோகத்தைக் கண்டறிய இதைப் பயன்படுத்தலாம்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:14
#: ../source/guides/supporting-windows-using-appveyor.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Background"
msgstr "பின்னணி"

#: ../source/guides/analyzing-pypi-package-downloads.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"PyPI does not display download statistics for a number of reasons: [#]_"
msgstr "பல காரணங்களுக்காக பதிவிறக்க புள்ளிவிவரங்களை PYPI காட்டாது: [#] _"

#: ../source/guides/analyzing-pypi-package-downloads.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Inefficient to make work with a Content Distribution Network (CDN):** "
"Download statistics change constantly. Including them in project pages, "
"which are heavily cached, would require invalidating the cache more often, "
"and reduce the overall effectiveness of the cache."
msgstr ""
"** உள்ளடக்க விநியோக நெட்வொர்க்குடன் (சி.டி.என்) வேலை செய்ய திறமையற்றது: ** "
"புள்ளிவிவரங்களைப் பதிவிறக்குங்கள் தொடர்ந்து மாறுகிறது. திட்ட பக்கங்களில் "
"அவற்றைச் சேர்ப்பது, பெரிதும் தற்காலிக சேமிப்பில் உள்ளது, தற்காலிக சேமிப்பை "
"அடிக்கடி செல்லாததாக்க வேண்டும், மேலும் தற்காலிக சேமிப்பின் ஒட்டுமொத்த "
"செயல்திறனைக் குறைக்கும்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Highly inaccurate:** A number of things prevent the download counts from "
"being accurate, some of which include:"
msgstr ""
"** மிகவும் துல்லியமற்றது: ** பதிவிறக்க எண்ணிக்கைகள் துல்லியமாக இருப்பதைத் "
"தடுக்கின்றன, அவற்றில் சில பின்வருவனவற்றை உள்ளடக்குகின்றன:"

#: ../source/guides/analyzing-pypi-package-downloads.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pip``'s download cache (lowers download counts)"
msgstr "`` பிஐபி பதிவிறக்கம் கேச் (பதிவிறக்க எண்ணிக்கையை குறைக்கிறது)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Internal or unofficial mirrors (can both raise or lower download counts)"
msgstr ""
"உள் அல்லது அதிகாரப்பூர்வமற்ற கண்ணாடிகள் (பதிவிறக்க எண்ணிக்கையை உயர்த்தலாம் "
"அல்லது குறைக்கலாம்)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Packages not hosted on PyPI (for comparisons sake)"
msgstr "PYPI இல் புரவலன் செய்யப்படாத தொகுப்புகள் (ஒப்பீடுகளுக்காக)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Unofficial scripts or attempts at download count inflation (raises download "
"counts)"
msgstr ""
"அதிகாரப்பூர்வமற்ற ச்கிரிப்ட்கள் அல்லது பதிவிறக்க எண்ணிக்கையிலான "
"பணவீக்கத்திற்கான முயற்சிகள் (பதிவிறக்க எண்ணிக்கையை உயர்த்தும்)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Known historical data quality issues (lowers download counts)"
msgstr ""
"அறியப்பட்ட வரலாற்று தரவு தர சிக்கல்கள் (பதிவிறக்க எண்ணிக்கையை குறைக்கிறது)"

#: ../source/guides/analyzing-pypi-package-downloads.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Not particularly useful:** Just because a project has been downloaded a "
"lot doesn't mean it's good; Similarly just because a project hasn't been "
"downloaded a lot doesn't mean it's bad!"
msgstr ""
"** குறிப்பாக பயனுள்ளதாக இல்லை: ** ஒரு திட்டம் நிறைய பதிவிறக்கம் "
"செய்யப்பட்டுள்ளதால் அது நல்லது என்று அர்த்தமல்ல; இதேபோல் ஒரு திட்டம் அதிகம் "
"பதிவிறக்கம் செய்யப்படாததால் அது மோசமானது என்று அர்த்தமல்ல!"

#: ../source/guides/analyzing-pypi-package-downloads.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In short, because its value is low for various reasons, and the tradeoffs "
"required to make it work are high, it has been not an effective use of "
"limited resources."
msgstr ""
"சுருக்கமாக, அதன் மதிப்பு பல்வேறு காரணங்களுக்காக குறைவாக இருப்பதால், அதைச் "
"செய்யத் தேவையான பரிமாற்றங்கள் அதிகமாக இருப்பதால், இது வரையறுக்கப்பட்ட "
"வளங்களின் பயனுள்ள பயன்பாடு அல்ல."

#: ../source/guides/analyzing-pypi-package-downloads.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Public dataset"
msgstr "பொது தரவுத்தொகுப்பு"

#: ../source/guides/analyzing-pypi-package-downloads.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As an alternative, the `Linehaul project <https://github.com/pypa/linehaul-"
"cloud-function/>`__ streams download logs from PyPI to `Google BigQuery`_ "
"[#]_, where they are stored as a public dataset."
msgstr ""
"மாற்றாக, `லைன்ஆல் திட்டம் <https://github.com/pypa/linehaul-cloud-"
"function/>` __ ச்ட்ரீம்கள் பைபியிலிருந்து `கூகிள் பிக்குவரி`_ [#] _ க்கு "
"பதிவுகள் பதிவிறக்குகின்றன பொது தரவுத்தொகுப்பு."

#: ../source/guides/analyzing-pypi-package-downloads.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Getting set up"
msgstr "அமைக்கப்படுகிறது"

#: ../source/guides/analyzing-pypi-package-downloads.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to use `Google BigQuery`_ to query the `public PyPI download "
"statistics dataset`_, you'll need a Google account and to enable the "
"BigQuery API on a Google Cloud Platform project. You can run up to 1TB of "
"queries per month `using the BigQuery free tier without a credit card "
"<https://cloud.google.com/blog/products/data-analytics/query-without-a-"
"credit-card-introducing-bigquery-sandbox>`__"
msgstr ""
"`பொது PYPI பதிவிறக்க புள்ளிவிவரங்கள் தரவுத்தொகுப்பு`_ ஐ வினவ` Google "
"bigquery`_ ஐப் பயன்படுத்த, உங்களுக்கு Google கணக்கு தேவை மற்றும் Google "
"முகில் இயங்குதள திட்டத்தில் பெரிய பநிஇ ஐ இயக்க வேண்டும். கடன் அட்டை இல்லாமல்"
" பிக்வரி இலவச அடுக்கைப் பயன்படுத்தி மாதத்திற்கு 1TB வினவல்கள் வரை இயக்கலாம் "
"<https://cloud.google.com/blog/products/data-analytics "
"-பிகுவரி-சாண்ட்பாக்ச்> `__"

#: ../source/guides/analyzing-pypi-package-downloads.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:"`[^\s]+.*? <BigQuery web UI>`_", rst-text
msgid "Navigate to the `BigQuery web UI`_."
msgstr "`பெரிய வலை UI`_ க்கு செல்லவும்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:58
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Create a new project."
msgstr "புதிய திட்டத்தை உருவாக்கவும்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:59
#, placeholders:"`BigQuery API <https://console.developers.google.com/apis/library/bigquery-json.googleapis.com>`__", rst-text
msgid ""
"Enable the `BigQuery API "
"<https://console.developers.google.com/apis/library/bigquery-"
"json.googleapis.com>`__."
msgstr ""
"`BigQuery பநிஇ <https://console.tevelopers.google.com/apis/library/bigquery-"
"json.googleapis.com> __."

#: ../source/guides/analyzing-pypi-package-downloads.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more detailed instructions on how to get started with BigQuery, check "
"out the `BigQuery quickstart guide "
"<https://cloud.google.com/bigquery/docs/quickstarts/quickstart-web-ui>`__."
msgstr ""
"பிக்வெரியுடன் எவ்வாறு தொடங்குவது என்பது குறித்த விரிவான வழிமுறைகளுக்கு, "
"`பிக்வெரி குயிக்ச்டார்ட் வழிகாட்டி "
"<https://cloud.google.com/bigquery/docs/quickstarts/quickstart-web-ui> ____."

#: ../source/guides/analyzing-pypi-package-downloads.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Data schema"
msgstr "தரவுத் திட்டம்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:70
#, placeholders:``bigquery-public-data.pypi.file_downloads``:https://console.cloud.google.com/bigquery?pli=1&p=bigquery-public-data&d=pypi&t=file_downloads&page=table, rst-text
msgid ""
"Linehaul writes an entry in a ``bigquery-public-data.pypi.file_downloads`` "
"table for each download. The table contains information about what file was "
"downloaded and how it was downloaded. Some useful columns from the `table "
"schema <https://console.cloud.google.com/bigquery?pli=1&p=bigquery-public-"
"data&d=pypi&t=file_downloads&page=table>`__ include:"
msgstr ""
"ஒவ்வொரு பதிவிறக்கத்திற்கும் `` BigQuery-public-data.pypi.file_downloads`` "
"அட்டவணையில் ஒரு பதிவை லைன்ஆல் எழுதுகிறார். எந்த கோப்பு பதிவிறக்கம் "
"செய்யப்பட்டது, அது எவ்வாறு பதிவிறக்கம் செய்யப்பட்டது என்பது பற்றிய தகவல்கள் "
"அட்டவணையில் உள்ளன. `அட்டவணை ச்கீமா "
"<https://console.cloud.google.com/bigquery?pli=1&p=bigquery-public-"
"data&d=pypi&t=file_downloads&page=table> __ இல் இருந்து சில பயனுள்ள "
"நெடுவரிசைகள்:` __"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Column"
msgstr "நெடுவரிசை"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
#: ../source/specifications/core-metadata.rst:194
#: ../source/specifications/well-known-project-urls.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Description"
msgstr "விவரம்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:77
#: ../source/specifications/dependency-groups.rst:23
#: ../source/specifications/dependency-specifiers.rst:29
#: ../source/specifications/direct-url-data-structure.rst:357
#: ../source/specifications/version-specifiers.rst:1069
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Examples"
msgstr "எடுத்துக்காட்டுகள்"

#. This string is a literal. It mustn't be translated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "timestamp"
msgstr "நேர முத்திரை"

#: ../source/guides/analyzing-pypi-package-downloads.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Date and time"
msgstr "தேதி மற்றும் நேரம்"

#. This string is a literal. It mustn't be translated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``2020-03-09 00:33:03 UTC``"
msgstr "`` 2020-03-09 00:33:03 UTC``"

#. This string is a literal. It mustn't be translated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "file.project"
msgstr "file.project"

#: ../source/guides/analyzing-pypi-package-downloads.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project name"
msgstr "திட்ட பெயர்"

#. This string is a literal. It mustn't be translated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``pipenv``, ``nose``"
msgstr "`` பைபென்வ்``, `` மூக்கு``"

#. This string is a literal. It mustn't be translated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "file.version"
msgstr "file.version"

#: ../source/guides/analyzing-pypi-package-downloads.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package version"
msgstr "தொகுப்பு பதிப்பு"

#. This string is a literal. It mustn't be translated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``0.1.6``, ``1.4.2``"
msgstr "`` 0.1.6``, `` 1.4.2``"

#. This string is a literal. It mustn't be translated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "details.installer.name"
msgstr "details.installer.name"

#: ../source/guides/analyzing-pypi-package-downloads.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installer"
msgstr "நிறுவி"

#: ../source/guides/analyzing-pypi-package-downloads.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pip, :ref:`bandersnatch`"
msgstr "பிப்,: ref: `bandersnatch`"

#. This string is a literal. It mustn't be translated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "details.python"
msgstr "விவரங்கள் .பிதான்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python version"
msgstr "பைதான் பதிப்பு"

#. This string is an example of the output from BigQuery SQL result table.
#. This value must remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``2.7.12``, ``3.6.4``"
msgstr "`` 2.7.12``, `` 3.6.4``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Useful queries"
msgstr "பயனுள்ள வினவல்கள்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Run queries in the `BigQuery web UI`_ by clicking the \"Compose query\" "
"button."
msgstr ""
"\"வினவல்\" பொத்தானைக் சொடுக்கு செய்வதன் மூலம் `பிக்வெரி வலை UI`_ இல் "
"வினவல்களை இயக்கவும்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that the rows are stored in a partitioned table, which helps limit the "
"cost of queries. These example queries analyze downloads from recent history"
" by filtering on the ``timestamp`` column."
msgstr ""
"வரிசைகள் ஒரு பகிர்வு செய்யப்பட்ட அட்டவணையில் சேமிக்கப்படுகின்றன என்பதை "
"நினைவில் கொள்க, இது வினவல்களின் விலையை கட்டுப்படுத்த உதவுகிறது. இந்த "
"எடுத்துக்காட்டு வினவல்கள் `` நேர முத்திரை` நெடுவரிசையில் வடிகட்டுவதன் மூலம் "
"அண்மைக் கால வரலாற்றிலிருந்து பதிவிறக்கங்களை பகுப்பாய்வு செய்கின்றன."

#: ../source/guides/analyzing-pypi-package-downloads.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Counting package downloads"
msgstr "தொகுப்பு பதிவிறக்கங்களை எண்ணுதல்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:103
#, placeholders:HTML:HTTP:pip:PSF:PyPI:Python:setuptools:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|:pytest, rst-text
msgid ""
"The following query counts the total number of downloads for the project "
"\"pytest\"."
msgstr ""
"பின்வரும் வினவல் \"பைடெச்ட்\" திட்டத்திற்கான மொத்த பதிவிறக்கங்களின் "
"எண்ணிக்கையைக் கணக்கிடுகிறது."

#. This string is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:118
#: ../source/guides/analyzing-pypi-package-downloads.rst:139
#: ../source/guides/analyzing-pypi-package-downloads.rst:167
#: ../source/guides/analyzing-pypi-package-downloads.rst:204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "num_downloads"
msgstr "num_downloads"

#. This word is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "26190085"
msgstr "26190085"

#: ../source/guides/analyzing-pypi-package-downloads.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To count downloads from pip only, filter on the ``details.installer.name`` "
"column."
msgstr ""
"PIP இலிருந்து பதிவிறக்கங்களை மட்டும் எண்ணுவதற்கு, `` "
"விவரங்கள்.இன்ச்டாலர்.நாம்`` நெடுவரிசையில் வடிகட்டவும்."

#. This word is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:141
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "24334215"
msgstr "24334215"

#: ../source/guides/analyzing-pypi-package-downloads.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package downloads over time"
msgstr "தொகுப்பு காலப்போக்கில் பதிவிறக்குகிறது"

#: ../source/guides/analyzing-pypi-package-downloads.rst:147
#, placeholders:``TIMESTAMP_TRUNC``, rst-text
msgid ""
"To group by monthly downloads, use the ``TIMESTAMP_TRUNC`` function. Also "
"filtering by this column reduces corresponding costs."
msgstr ""
"மாதாந்திர பதிவிறக்கங்கள் மூலம் குழுவாக, `` TimeStamp_Trunc`` செயல்பாட்டைப் "
"பயன்படுத்தவும். இந்த நெடுவரிசை மூலம் வடிகட்டுவது தொடர்புடைய செலவுகளைக் "
"குறைக்கிறது."

#. This word is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:167
#, placeholders:BigQuery:SQL, read-only, rst-text
msgid "month"
msgstr "மாதம்"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:169
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "1956741"
msgstr "1956741"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:169
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "2018-01-01"
msgstr "2018-01-01"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:171
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2344692"
msgstr "2344692"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:171
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2017-12-01"
msgstr "2017-12-01"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:173
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "1730398"
msgstr "1730398"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:173
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2017-11-01"
msgstr "2017-11-01"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:175
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2047310"
msgstr "2047310"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:175
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2017-10-01"
msgstr "2017-10-01"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:177
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "1744443"
msgstr "1744443"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:177
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2017-09-01"
msgstr "2017-09-01"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:179
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "1916952"
msgstr "1916952"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:179
#, ignore-duplicate, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2017-08-01"
msgstr "2017-08-01"

#: ../source/guides/analyzing-pypi-package-downloads.rst:183
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python versions over time"
msgstr "காலப்போக்கில் பைதான் பதிப்புகள்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:185
#, placeholders:Python:Windows:``details.python``:500, rst-text
msgid ""
"Extract the Python version from the ``details.python`` column. Warning: This"
" query processes over 500 GB of data."
msgstr ""
"`` விவரங்கள் .பிதான்` நெடுவரிசையில் இருந்து பைதான் பதிப்பை "
"பிரித்தெடுக்கவும். எச்சரிக்கை: இந்த வினவல் 500 சிபி தரவை செயலாக்குகிறது."

#: ../source/guides/analyzing-pypi-package-downloads.rst:204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "python"
msgstr "பைதான்"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:206
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "3.7"
msgstr "3.7"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:206
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "18051328726"
msgstr "18051328726"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:208
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "3.6"
msgstr "3.6"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:208
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "9635067203"
msgstr "9635067203"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:210
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "3.8"
msgstr "3.8"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:210
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "7781904681"
msgstr "7781904681"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:212
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2.7"
msgstr "2.7"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:212
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "6381252241"
msgstr "6381252241"

#. This date is the output from BigQuery SQL result table. This value must
#. remain untranslated.
#: ../source/guides/analyzing-pypi-package-downloads.rst:214
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "null"
msgstr "சுழியம்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:214
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2026630299"
msgstr "2026630299"

#: ../source/guides/analyzing-pypi-package-downloads.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "3.5"
msgstr "3.5"

#: ../source/guides/analyzing-pypi-package-downloads.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "1894153540"
msgstr "1894153540"

#: ../source/guides/analyzing-pypi-package-downloads.rst:221
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Getting absolute links to artifacts"
msgstr "கலைப்பொருட்களுக்கு முழுமையான இணைப்புகளைப் பெறுதல்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:223
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's sometimes helpful to be able to get the absolute links to download "
"artifacts from PyPI based on their hashes, e.g. if a particular project or "
"release has been deleted from PyPI. The metadata table includes the ``path``"
" column, which includes the hash and artifact filename."
msgstr ""
"அவற்றின் ஆச்களின் அடிப்படையில் PYPI இலிருந்து கலைப்பொருட்களைப் "
"பதிவிறக்குவதற்கான முழுமையான இணைப்புகளைப் பெறுவது சில நேரங்களில் உதவியாக "
"இருக்கும், எ.கா. ஒரு குறிப்பிட்ட திட்டம் அல்லது வெளியீடு PYPI இலிருந்து "
"நீக்கப்பட்டிருந்தால். மேனிலை தரவு அட்டவணையில் `` பாதை`` நெடுவரிசையை "
"உள்ளடக்கியது, இதில் ஆச் மற்றும் கலைப்பொருள் கோப்பு பெயர் அடங்கும்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The URL generated here is not guaranteed to be stable, but currently aligns "
"with the URL where PyPI artifacts are hosted."
msgstr ""
"இங்கே உருவாக்கப்படும் முகவரி நிலையானது என்று பொறுப்பு அளிக்கப்படவில்லை, "
"ஆனால் தற்போது PYPI கலைப்பொருட்கள் புரவலன் செய்யப்படும் முகவரி உடன் "
"ஒத்துப்போகிறது."

#: ../source/guides/analyzing-pypi-package-downloads.rst:242
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "url"
msgstr "முகவரி"

#: ../source/guides/analyzing-pypi-package-downloads.rst:244
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"https://files.pythonhosted.org/packages/eb/45/79be82bdeafcecb9dca474cad4003e32ef8e4a0dec6abbd4145ccb02abe1/sampleproject-1.2.0.tar.gz"
msgstr ""
"https://files.pythonhosted.org/packages/eb/45/79be82bdeafcecb9dca474cad4003e32ef8e4a0dec6abbd4145ccb02abe1/sampleproject-1.2.0.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:246
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"https://files.pythonhosted.org/packages/56/0a/178e8bbb585ec5b13af42dae48b1d7425d6575b3ff9b02e5ec475e38e1d6/sampleproject_nomura-1.2.0-py2.py3-none-"
"any.whl"
msgstr ""
"https://files.pythonhosted.org/packages/56/0a/178e8bbb585ec5b13af42dae48b1d7425d6575b3ff9b02e5ec475e38e1d6/sampleproject_nomura-1.2.0-py2.py3-none-"
"any.whl"

#: ../source/guides/analyzing-pypi-package-downloads.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"https://files.pythonhosted.org/packages/63/88/3200eeaf22571f18d2c41e288862502e33365ccbdc12b892db23f51f8e70/sampleproject_nomura-1.2.0.tar.gz"
msgstr ""
"https://files.pythonhosted.org/packages/63/88/3200eeaf22571f18d2c41e288862502e33365ccbdc12b892db23f51f8e70/sampleproject_nomura-1.2.0.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:250
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"https://files.pythonhosted.org/packages/21/e9/2743311822e71c0756394b6c5ab15cb64ca66c78c6c6a5cd872c9ed33154/sampleproject_doubleyoung18-1.3.0-py2.py3-none-"
"any.whl"
msgstr ""
"https://files.pythonhosted.org/packages/21/e9/2743311822e71c0756394b6c5ab15cb64ca66c78c6c6a5cd872c9ed33154/sampleproject_doubleyoung18-1.3.0-py2.py3-none-"
"any.whl"

#: ../source/guides/analyzing-pypi-package-downloads.rst:252
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"https://files.pythonhosted.org/packages/6f/5b/2f3fe94e1c02816fe23c7ceee5292fb186912929e1972eee7fb729fa27af/sampleproject-1.3.1.tar.gz"
msgstr ""
"https://files.pythonhosted.org/packages/6f/5b/2f3fe94e1c02816fe23c7ceee5292fb186912929e1972eee7fb729fa27af/sampleproject-1.3.1.tar.gz"

#: ../source/guides/analyzing-pypi-package-downloads.rst:257
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Caveats"
msgstr "எச்சரிக்கைகள்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:259
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to the caveats listed in the background above, Linehaul suffered"
" from a bug which caused it to significantly under-report download "
"statistics prior to July 26, 2018. Downloads before this date are "
"proportionally accurate (e.g. the percentage of Python 2 vs. Python 3 "
"downloads) but total numbers are lower than actual by an order of magnitude."
msgstr ""
"மேலே உள்ள பின்னணியில் பட்டியலிடப்பட்ட எச்சரிக்கைகளுக்கு மேலதிகமாக, லைன்ஆல் "
"ஒரு பிழையால் பாதிக்கப்பட்டார், இது சூலை 26, 2018 க்கு முன்னர் பதிவிறக்க "
"புள்ளிவிவரங்களை கணிசமாகக் கூறியது. இந்த தேதிக்கு முந்தைய பதிவிறக்கங்கள் "
"விகிதாசாரமாக துல்லியமானவை (எ.கா. பைதான் 2 வெர்சச் பைத்தானின் விழுக்காடு 3 "
"பதிவிறக்கங்கள்) ஆனால் மொத்த எண்கள் அளவின் வரிசையால் உண்மையானதை விட குறைவாக "
"உள்ளன."

#: ../source/guides/analyzing-pypi-package-downloads.rst:267
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Additional tools"
msgstr "கூடுதல் கருவிகள்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:269
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Besides using the BigQuery console, there are some additional tools which "
"may be useful when analyzing download statistics."
msgstr ""
"பிக்வெரி கன்சோலைப் பயன்படுத்துவதைத் தவிர, பதிவிறக்க புள்ளிவிவரங்களை "
"பகுப்பாய்வு செய்யும் போது பயனுள்ளதாக இருக்கும் சில கூடுதல் கருவிகள் உள்ளன."

#: ../source/guides/analyzing-pypi-package-downloads.rst:273
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``google-cloud-bigquery``"
msgstr "`` Google-Cloud-bigquery``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:275
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can also access the public PyPI download statistics dataset "
"programmatically via the BigQuery API and the `google-cloud-bigquery`_ "
"project, the official Python client library for BigQuery."
msgstr ""
"பிக்வெரி பநிஇ மற்றும் பிக்வரிக்கான அதிகாரப்பூர்வ பைதான் கிளையன்ட் நூலகமான "
"`கூகிள்-கிளவுட்-பிக்வரி`_ திட்டத்தின் வழியாக பொது PYPI பதிவிறக்க புள்ளிவிவர "
"தரவுத்தொகுப்பை நிரல் முறையில் அணுகலாம்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:303
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pypinfo``"
msgstr "`` பைபின்ஃபோ``"

#: ../source/guides/analyzing-pypi-package-downloads.rst:305
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`pypinfo`_ is a command-line tool which provides access to the dataset and "
"can generate several useful queries. For example, you can query the total "
"number of download for a package with the command ``pypinfo package_name``."
msgstr ""
"`பைபின்ஃபோ`_ என்பது ஒரு கட்டளை-வரி கருவியாகும், இது தரவுத்தொகுப்பிற்கான "
"அணுகலை வழங்குகிறது மற்றும் பல பயனுள்ள வினவல்களை உருவாக்க முடியும். "
"எடுத்துக்காட்டாக, `` பைபின்ஃபோ தொகுப்பு_நாம்`` கட்டளையுடன் ஒரு தொகுப்புக்கான"
" மொத்த பதிவிறக்கத்தின் எண்ணிக்கையை வினவலாம்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:309
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install `pypinfo`_ using pip."
msgstr "PIP ஐப் பயன்படுத்தி `pypinfo`_ ஐ நிறுவவும்."

#: ../source/guides/analyzing-pypi-package-downloads.rst:315
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Usage:"
msgstr "பயன்பாடு:"

#: ../source/guides/analyzing-pypi-package-downloads.rst:331
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pandas-gbq``"
msgstr "`Panak-gbq``."

#: ../source/guides/analyzing-pypi-package-downloads.rst:333
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The `pandas-gbq`_ project allows for accessing query results via `Pandas`_."
msgstr ""
"`பாண்டாச்-GBQ`_ திட்டம்` பாண்டாச்`_ வழியாக வினவல் முடிவுகளை அணுக "
"அனுமதிக்கிறது."

#: ../source/guides/analyzing-pypi-package-downloads.rst:337
#: ../source/specifications/dependency-specifiers.rst:501
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "References"
msgstr "குறிப்புகள்"

#: ../source/guides/analyzing-pypi-package-downloads.rst:339
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`PyPI Download Counts deprecation email "
"<https://mail.python.org/pipermail/distutils-sig/2013-May/020855.html>`__"
msgstr ""
"`Pypi பதிவிறக்கம் எண்ணிக்கைகள் தேய்மான மின்னஞ்சல் "
"<https://mail.python.org/pipermail/distutils-sig/2013-may/020855.html> ____ "
"__ __"

#: ../source/guides/analyzing-pypi-package-downloads.rst:340
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`PyPI BigQuery dataset announcement email "
"<https://mail.python.org/pipermail/distutils-sig/2016-May/028986.html>`__"
msgstr ""
"`Pypi bigquery தரவுத்தொகுப்பு அறிவிப்பு மின்னஞ்சல் "
"<https://mail.python.org/pipermail/distutils-sig/2016-may/028986.html>` __ "
"__ __"

#: ../source/guides/creating-and-discovering-plugins.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating and discovering plugins"
msgstr "செருகுநிரல்களை உருவாக்கி கண்டுபிடிப்பது"

#: ../source/guides/creating-and-discovering-plugins.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Often when creating a Python application or library you'll want the ability "
"to provide customizations or extra features via **plugins**. Because Python "
"packages can be separately distributed, your application or library may want"
" to automatically **discover** all of the plugins available."
msgstr ""
"பெரும்பாலும் பைதான் பயன்பாடு அல்லது நூலகத்தை உருவாக்கும் போது ** "
"செருகுநிரல்கள் ** வழியாக தனிப்பயனாக்கங்கள் அல்லது கூடுதல் அம்சங்களை வழங்கும்"
" திறனை நீங்கள் விரும்புவீர்கள். பைதான் தொகுப்புகளை தனித்தனியாக விநியோகிக்க "
"முடியும் என்பதால், உங்கள் பயன்பாடு அல்லது நூலகம் தானாகவே ** கண்டுபிடிக்க "
"விரும்பலாம் ** கிடைக்கும் அனைத்து செருகுநிரல்களும்."

#: ../source/guides/creating-and-discovering-plugins.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "There are three major approaches to doing automatic plugin discovery:"
msgstr ""
"தானியங்கி சொருகி கண்டுபிடிப்பை செய்வதற்கு மூன்று முக்கிய அணுகுமுறைகள் உள்ளன:"

#: ../source/guides/creating-and-discovering-plugins.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Using naming convention`_."
msgstr "`பெயரிடும் மாநாட்டைப் பயன்படுத்துதல்`_."

#: ../source/guides/creating-and-discovering-plugins.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Using namespace packages`_."
msgstr "`பெயர்வெளி தொகுப்புகளைப் பயன்படுத்துதல்`_."

#: ../source/guides/creating-and-discovering-plugins.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Using package metadata`_."
msgstr "`தொகுப்பு மெட்டாடேட்டா`_ ஐப் பயன்படுத்துதல்."

#: ../source/guides/creating-and-discovering-plugins.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using naming convention"
msgstr "பெயரிடும் மாநாட்டைப் பயன்படுத்துதல்"

#: ../source/guides/creating-and-discovering-plugins.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If all of the plugins for your application follow the same naming "
"convention, you can use :func:`pkgutil.iter_modules` to discover all of the "
"top-level modules that match the naming convention. For example, `Flask`_ "
"uses the naming convention ``flask_{plugin_name}``. If you wanted to "
"automatically discover all of the Flask plugins installed:"
msgstr ""
"உங்கள் பயன்பாட்டிற்கான அனைத்து செருகுநிரல்களும் ஒரே பெயரிடும் மாநாட்டைப் "
"பின்பற்றினால், நீங்கள் பயன்படுத்தலாம்: func: `pkgutil.iter_modules` "
"பெயரிடும் மாநாட்டுடன் பொருந்தக்கூடிய அனைத்து உயர்மட்ட தொகுதிகள் அனைத்தையும் "
"கண்டறிய. எடுத்துக்காட்டாக, `பிளாச்க்`_ பெயரிடும் மாநாட்டை` `பிளாச்க்_ "
"{plugin_name}` `பயன்படுத்துகிறது. நிறுவப்பட்ட அனைத்து பிளாச்க் "
"செருகுநிரல்களையும் தானாகவே கண்டுபிடிக்க விரும்பினால்:"

#: ../source/guides/creating-and-discovering-plugins.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you had both the `Flask-SQLAlchemy`_ and `Flask-Talisman`_ plugins "
"installed then ``discovered_plugins`` would be:"
msgstr ""
"உங்களிடம் `பிளாச்க்-சதுரச்செமி`_ மற்றும்` பிளாச்க்-டலிசான்`_ செருகுநிரல்கள் "
"இரண்டையும் நிறுவியிருந்தால், `` கண்டுபிடிக்கப்பட்ட_பிளகின்ச்`` இருக்கும்:"

#: ../source/guides/creating-and-discovering-plugins.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Using naming convention for plugins also allows you to query the Python "
"Package Index's :ref:`simple repository API <simple-repository-api>` for all"
" packages that conform to your naming convention."
msgstr ""
"செருகுநிரல்களுக்கான பெயரிடும் மாநாட்டைப் பயன்படுத்துவது பைதான் தொகுப்பு "
"குறியீட்டின் வினவலையும் அனுமதிக்கிறது: குறிப்பு: `எளிய களஞ்சிய பநிஇ "
"<எளிய-ரோபோசிட்டரி-ஏபிஐ>` உங்கள் பெயரிடும் மாநாட்டிற்கு இணங்கும் அனைத்து "
"தொகுப்புகளுக்கும்."

#: ../source/guides/creating-and-discovering-plugins.rst:58
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using namespace packages"
msgstr "பெயர்வெளி தொகுப்புகளைப் பயன்படுத்துதல்"

#: ../source/guides/creating-and-discovering-plugins.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Namespace packages <packaging-namespace-packages>` can be used to "
"provide a convention for where to place plugins and also provides a way to "
"perform discovery. For example, if you make the sub-package "
"``myapp.plugins`` a namespace package then other :term:`distributions "
"<Distribution Package>` can provide modules and packages to that namespace. "
"Once installed, you can use :func:`pkgutil.iter_modules` to discover all "
"modules and packages installed under that namespace:"
msgstr ""
". எடுத்துக்காட்டாக, நீங்கள் `` myapp.plugins`` ஒரு பெயர்வெளி தொகுப்பை "
"உருவாக்கினால், பிற: கால: `விநியோகம் <விநியோக தொகுப்பு>` அந்த பெயர்வெளியில் "
"தொகுதிகள் மற்றும் தொகுப்புகளை வழங்க முடியும். நிறுவியதும், நீங்கள் "
"பயன்படுத்தலாம்: func: `pkgutil.iter_modules` அந்த பெயர்வெளியின் கீழ் "
"நிறுவப்பட்ட அனைத்து தொகுதிகள் மற்றும் தொகுப்புகளைக் கண்டறிய:"

#: ../source/guides/creating-and-discovering-plugins.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Specifying ``myapp.plugins.__path__`` to :func:`~pkgutil.iter_modules` "
"causes it to only look for the modules directly under that namespace. For "
"example, if you have installed distributions that provide the modules "
"``myapp.plugins.a`` and ``myapp.plugins.b`` then ``discovered_plugins`` in "
"this case would be:"
msgstr ""
"`` Myapp.plugins .__ பாதை__`` க்கு: func: `~ pkgutil.iter_modules` இது அந்த "
"பெயர்வெளியின் கீழ் நேரடியாக தொகுதிகளை மட்டுமே தேடுகிறது. எடுத்துக்காட்டாக, "
"`` myapp.plugins.a`` மற்றும் `` myapp.plugins.b`` தொகுதிகளை வழங்கும் "
"விநியோகங்களை நீங்கள் நிறுவியிருந்தால், இந்த விசயத்தில் `` "
"கண்டுபிடிக்கப்பட்ட_பிலுசின்ச்`` இருக்கும்:"

#: ../source/guides/creating-and-discovering-plugins.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This sample uses a sub-package as the namespace package (``myapp.plugins``),"
" but it's also possible to use a top-level package for this purpose (such as"
" ``myapp_plugins``). How to pick the namespace to use is a matter of "
"preference, but it's not recommended to make your project's main top-level "
"package (``myapp`` in this case) a namespace package for the purpose of "
"plugins, as one bad plugin could cause the entire namespace to break which "
"would in turn make your project unimportable. For the \"namespace sub-"
"package\" approach to work, the plugin packages must omit the "
":file:`__init__.py` for your top-level package directory (``myapp`` in this "
"case) and include the namespace-package style :file:`__init__.py` in the "
"namespace sub-package directory (``myapp/plugins``).  This also means that "
"plugins will need to explicitly pass a list of packages to :func:`setup`'s "
"``packages`` argument instead of using :func:`setuptools.find_packages`."
msgstr ""
"இந்த மாதிரி ஒரு துணை தொகுப்பாக பெயர்வெளி தொகுப்பாக (`` myapp.plugins``) "
"பயன்படுத்துகிறது, ஆனால் இந்த நோக்கத்திற்காக ஒரு உயர்மட்ட தொகுப்பைப் "
"பயன்படுத்தவும் முடியும் (`` MyApp_plugins` போன்றவை). பயன்படுத்த பெயர்வெளியை "
"எவ்வாறு தேர்ந்தெடுப்பது என்பது விருப்பமான சேதி, ஆனால் உங்கள் திட்டத்தின் "
"முக்கிய உயர்மட்ட-நிலை தொகுப்பை (`` MyApp`` `இந்த விசயத்தில்) "
"செருகுநிரல்களின் நோக்கத்திற்காக ஒரு பெயர்வெளி தொகுப்பு செய்ய "
"பரிந்துரைக்கப்படவில்லை, ஒரு மோசமான சொருகி முடியும் முழு பெயர்வெளிகளையும் "
"உடைக்கச் செய்யுங்கள், இது உங்கள் திட்டத்தை இறக்காதது. வேலை செய்வதற்கான "
"\"பெயர்வெளி துணை-பேக்கேச்\" அணுகுமுறைக்கு, சொருகி தொகுப்புகள் பின்வாங்க "
"வேண்டும்: கோப்பு: `__init __. உங்கள் உயர்மட்ட தொகுப்பு கோப்பகத்திற்கு (இந்த "
"விசயத்தில்` `MyApp``) . செருகுநிரல்கள் தொகுப்புகளின் பட்டியலை வெளிப்படையாக "
"அனுப்ப வேண்டும் என்பதும் இதன் பொருள்: func: `setup` இன்` `தொகுப்புகள்`` "
"பயன்படுத்துவதற்கு பதிலாக: func:` setuptools.find_packages`."

#: ../source/guides/creating-and-discovering-plugins.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Namespace packages are a complex feature and there are several different "
"ways to create them. It's highly recommended to read the :doc:`packaging-"
"namespace-packages` documentation and clearly document which approach is "
"preferred for plugins to your project."
msgstr ""
"பெயர்வெளி தொகுப்புகள் ஒரு சிக்கலான அம்சமாகும், அவற்றை உருவாக்க பல்வேறு "
"வழிகள் உள்ளன. உங்கள் திட்டத்திற்கு செருகுநிரல்களுக்கு எந்த அணுகுமுறை "
"விரும்பப்படுகிறது என்பதை தெளிவாக ஆவணப்படுத்த: DOC: "
"`பேக்கேசிங்-பெயர்ச்பேச்-பேக்கேச்கள்` ஆவணங்கள் மற்றும் தெளிவாக ஆவணப்படுத்த "
"இது மிகவும் பரிந்துரைக்கப்படுகிறது."

#: ../source/guides/creating-and-discovering-plugins.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using package metadata"
msgstr "தொகுப்பு மெட்டாடேட்டாவைப் பயன்படுத்துதல்"

#: ../source/guides/creating-and-discovering-plugins.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Packages can have metadata for plugins described in the :ref:`entry-points`."
" By specifying them, a package announces that it contains a specific kind of"
" plugin. Another package supporting this kind of plugin can use the metadata"
" to discover that plugin."
msgstr ""
"தொகுப்புகள்: ref: `நுழைவு புள்ளிகள்` இல் விவரிக்கப்பட்டுள்ள "
"செருகுநிரல்களுக்கான மெட்டாடேட்டாவைக் கொண்டிருக்கலாம். அவற்றைக் "
"குறிப்பிடுவதன் மூலம், ஒரு தொகுப்பு ஒரு குறிப்பிட்ட வகையான சொருகி இருப்பதாக "
"அறிவிக்கிறது. இந்த வகையான சொருகி ஆதரிக்கும் மற்றொரு தொகுப்பு அந்த சொருகி "
"கண்டுபிடிக்க மெட்டாடேட்டாவைப் பயன்படுத்தலாம்."

#: ../source/guides/creating-and-discovering-plugins.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example if you have a package named ``myapp-plugin-a`` and it includes "
"the following in its ``pyproject.toml``:"
msgstr ""
"எடுத்துக்காட்டாக, உங்களிடம் `` myApp-plugin-a`` என்ற தொகுப்பு இருந்தால், "
"அதன் `` pyproject.toml`` இல் பின்வருவனவற்றை உள்ளடக்கியது:"

#: ../source/guides/creating-and-discovering-plugins.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Then you can discover and load all of the registered entry points by using "
":func:`importlib.metadata.entry_points` (or the backport_ "
"``importlib_metadata >= 3.6`` for Python 3.6-3.9):"
msgstr ""
"பயன்படுத்துவதன் மூலம் பதிவுசெய்யப்பட்ட அனைத்து நுழைவு புள்ளிகளையும் "
"கண்டுபிடித்து ஏற்றலாம்: func: `இறக்குமதி."

#: ../source/guides/creating-and-discovering-plugins.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In this example, ``discovered_plugins`` would be a collection of type "
":class:`importlib.metadata.EntryPoint`:"
msgstr ""
"இந்த எடுத்துக்காட்டில், `` கண்டுபிடிக்கப்பட்ட_பிளகின்ச்`` வகை வகையின் "
"தொகுப்பாக இருக்கும்: வகுப்பு: `இறக்குமதி."

#: ../source/guides/creating-and-discovering-plugins.rst:160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now the module of your choice can be imported by executing "
"``discovered_plugins['a'].load()``."
msgstr ""
"இப்போது உங்கள் விருப்பத்தின் தொகுதியை `` கண்டுபிடிக்கப்பட்ட_ப்ளூசின்களை "
"['அ'] செயல்படுத்துவதன் மூலம் இறக்குமதி செய்யலாம். ஏற்றவும் () ``."

#: ../source/guides/creating-and-discovering-plugins.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``entry_point`` specification in :file:`setup.py` is fairly flexible and"
" has a lot of options. It's recommended to read over the entire section on "
":doc:`entry points <setuptools:userguide/entry_point>` ."
msgstr ""
"`` Entry_point`` விவரக்குறிப்பு: கோப்பு: `setup.py` மிகவும் நெகிழ்வானது "
"மற்றும் நிறைய விருப்பங்களைக் கொண்டுள்ளது. இதில் முழு பகுதியையும் படிக்க "
"பரிந்துரைக்கப்படுகிறது: DOC: `நுழைவு புள்ளிகள் <setuptools: "
"userguide/entry_point>`."

#: ../source/guides/creating-and-discovering-plugins.rst:167
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Since this specification is part of the :doc:`standard library "
"<python:library/importlib.metadata>`, most packaging tools other than "
"setuptools provide support for defining entry points."
msgstr ""
"இந்த விவரக்குறிப்பு: டாக்: `நிலையான நூலகம் <பைதான்: நூலகம்/இறக்குமதி "
"லிப்.மெட்டாடேட்டா>` `, செட்டுப்டூல்கள் தவிர பிற பெரும்பாலான பேக்கேசிங் "
"கருவிகள் நுழைவு புள்ளிகளை வரையறுப்பதற்கான ஆதரவை வழங்குகின்றன."

#: ../source/guides/creating-command-line-tools.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating and packaging command-line tools"
msgstr "கட்டளை-வரி கருவிகளை உருவாக்கி பேக்கேசிங் செய்யுங்கள்"

#: ../source/guides/creating-command-line-tools.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide will walk you through creating and packaging a standalone "
"command-line application that can be installed with :ref:`pipx`, a tool "
"creating and managing :term:`Python Virtual Environments <Virtual "
"Environment>` and exposing the executable scripts of packages (and available"
" manual pages) for use on the command-line."
msgstr ""
"இந்த வழிகாட்டி நிறுவக்கூடிய ஒரு முழுமையான கட்டளை-வரி பயன்பாட்டை உருவாக்கி "
"பேக்கேசிங் செய்வதன் மூலம் உங்களை அழைத்துச் செல்லும்: குறிப்பு: `பிப்எக்ச்`, "
"ஒரு கருவி உருவாக்கி நிர்வகிக்கும் ஒரு கருவி: கால:` பைதான் மெய்நிகர் சூழல்கள்"
" <மெய்நிகர் சூழல்> `மற்றும் இயங்கக்கூடிய ச்கிரிப்ட்களை அம்பலப்படுத்துதல் "
"கட்டளை வரியில் பயன்படுத்த தொகுப்புகள் (மற்றும் கிடைக்கக்கூடிய கையேடு "
"பக்கங்கள்)."

#: ../source/guides/creating-command-line-tools.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating the package"
msgstr "தொகுப்பை உருவாக்குதல்"

#: ../source/guides/creating-command-line-tools.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"First of all, create a source tree for the :term:`project <Project>`. For "
"the sake of an example, we'll build a simple tool outputting a greeting (a "
"string) for a person based on arguments given on the command-line."
msgstr ""
"முதலாவதாக, ஒரு மூல மரத்தை உருவாக்கவும்: கால: `திட்டம் <திட்டம்>`. ஒரு "
"உதாரணத்தின் பொருட்டு, கட்டளை வரியில் கொடுக்கப்பட்ட வாதங்களின் அடிப்படையில் "
"ஒரு நபருக்கு வாழ்த்து (ஒரு சரம்) வெளியிடுவதற்கான எளிய கருவியை உருவாக்குவோம்."

#: ../source/guides/creating-command-line-tools.rst:17
#: ../source/guides/tool-recommendations.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Todo"
msgstr "அனைத்தும்"

#: ../source/guides/creating-command-line-tools.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Advise on the optimal structure of a Python package in another guide or "
"discussion and link to it here."
msgstr ""
"மற்றொரு வழிகாட்டி அல்லது கலந்துரையாடலில் பைதான் தொகுப்பின் உகந்த "
"கட்டமைப்பைப் பற்றி அறிவுறுத்துங்கள், அதனுடன் இங்கே இணைக்கவும்."

#: ../source/guides/creating-command-line-tools.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This project will adhere to :ref:`src-layout <src-layout-vs-flat-layout>` "
"and in the end be alike this file tree, with the top-level folder and "
"package name ``greetings``:"
msgstr ""
"இந்த திட்டம் இதைக் கடைப்பிடிக்கும்: குறிப்பு: `எச்.ஆர்.சி-லேஅவுட் "
"<எச்.ஆர்.சி-லேஅவுட்-வி.எச்-ஃப்ளாட்-லேஅவுட்>` மற்றும் இறுதியில் இந்த கோப்பு "
"மரத்தில், உயர்மட்ட கோப்புறை மற்றும் தொகுப்பு பெயர் `` வாழ்த்துக்கள்`` உடன் "
"ஒரே மாதிரியாக இருக்கும்:"

#: ../source/guides/creating-command-line-tools.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The actual code responsible for the tool's functionality will be stored in "
"the file :file:`greet.py`, named after the main module:"
msgstr ""
"கருவியின் செயல்பாட்டிற்கு பொறுப்பான உண்மையான குறியீடு கோப்பில் "
"சேமிக்கப்படும்: கோப்பு: `வாழ்த்துக்கள்."

#: ../source/guides/creating-command-line-tools.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The above function receives several keyword arguments that determine how the"
" greeting to output is constructed. Now, construct the command-line "
"interface to provision it with the same, which is done in :file:`cli.py`:"
msgstr ""
"மேலே உள்ள செயல்பாடு பல முக்கிய வாதங்களைப் பெறுகிறது, இது வெளியீட்டிற்கான "
"வாழ்த்து எவ்வாறு கட்டமைக்கப்படுகிறது என்பதை தீர்மானிக்கிறது. இப்போது, "
"​​கட்டளை-வரி இடைமுகத்தை அதை வழங்குவதற்காக உருவாக்குங்கள், இது "
"செய்யப்படுகிறது: கோப்பு: `cli.py`:"

#: ../source/guides/creating-command-line-tools.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The command-line interface is built with typer_, an easy-to-use CLI parser "
"based on Python type hints. It provides auto-completion and nicely styled "
"command-line help out of the box. Another option would be "
":py:mod:`argparse`, a command-line parser which is included in Python's "
"standard library. It is sufficient for most needs, but requires a lot of "
"code, usually in ``cli.py``, to function properly. Alternatively, docopt_ "
"makes it possible to create CLI interfaces based solely on docstrings; "
"advanced users are encouraged to make use of click_ (on which ``typer`` is "
"based)."
msgstr ""
"கட்டளை-வரி இடைமுகம் பைதான் வகை குறிப்புகளின் அடிப்படையில் பயன்படுத்த எளிதான "
"கிளி பாகுபடுத்தி TYPER_ உடன் கட்டப்பட்டுள்ளது. இது தானாக முடக்கம் மற்றும் "
"பெட்டியின் நேர்த்தியான பாணியில் கட்டளை-வரி உதவியை வழங்குகிறது. மற்றொரு "
"விருப்பம்: PY: MOD: `ArgParse`, ஒரு கட்டளை-வரி பாகுபடுத்தி, இது பைத்தானின் "
"நிலையான நூலகத்தில் சேர்க்கப்பட்டுள்ளது. இது பெரும்பாலான தேவைகளுக்கு "
"போதுமானது, ஆனால் நிறைய குறியீடு தேவைப்படுகிறது, பொதுவாக `` cli.py`` இல், "
"சரியாக செயல்பட வேண்டும். மாற்றாக, டாக்ச்டோப்_ டாக்ச்ட்ரிங்சை மட்டுமே "
"அடிப்படையாகக் கொண்ட சி.எல்.ஐ இடைமுகங்களை உருவாக்குவதை சாத்தியமாக்குகிறது; "
"மேம்பட்ட பயனர்கள் கிளிக்_ ஐப் பயன்படுத்த ஊக்குவிக்கப்படுகிறார்கள் (இதில் `` "
"டைபர்`` அடிப்படையாகும்)."

#: ../source/guides/creating-command-line-tools.rst:97
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now, add an empty :file:`__init__.py` file, to define the project as a "
"regular :term:`import package <Import Package>`."
msgstr ""
"இப்போது, ​​ஒரு வெற்று: கோப்பு: `__init __. Py` கோப்பு, திட்டத்தை ஒரு "
"வழக்கமானதாக வரையறுக்க: கால:` இறக்குமதி தொகுப்பு <இறக்குமதி தொகுப்பு> `."

#: ../source/guides/creating-command-line-tools.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The file :file:`__main__.py` marks the main entry point for the application "
"when running it via :mod:`runpy` (i.e. ``python -m greetings``, which works "
"immediately with flat layout, but requires installation of the package with "
"src layout), so initizalize the command-line interface here:"
msgstr ""
"கோப்பு: கோப்பு: `__main __. Py` பயன்பாட்டிற்கான முக்கிய நுழைவு புள்ளியை "
"இயக்கும் போது குறிக்கிறது: MOD:` Runpy` (அதாவது `` பைதான் -M "
"வாழ்த்துக்கள்``, இது உடனடியாக தட்டையான தளவமைப்புடன் வேலை செய்கிறது, ஆனால் "
"நிறுவல் தேவைப்படுகிறது எச்.ஆர்.சி தளவமைப்புடன் கூடிய தொகுப்பு), எனவே "
"கட்டளை-வரி இடைமுகத்தை இங்கேயே தொடங்கவும்:"

#: ../source/guides/creating-command-line-tools.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to enable calling the command-line interface directly from the "
":term:`source tree <Project Source Tree>`, i.e. as ``python src/greetings``,"
" a certain hack could be placed in this file; read more at :ref:`running-"
"cli-from-source-src-layout`."
msgstr ""
"கட்டளை-வரி இடைமுகத்தை நேரடியாக அழைப்பதை இயக்குவதற்கு: `மூல மரம் <திட்ட மூல "
"மரம்>`, அதாவது `` பைதான் எச்.ஆர்.சி/வாழ்த்துக்கள்``, இந்த கோப்பில் ஒரு "
"குறிப்பிட்ட ஏக் வைக்கப்படலாம்; மேலும் வாசிக்க: ref: "
"`ரன்னிங்-கிளி-ஃபிரோம்-மூல-எச்.ஆர்.சி-லேஅவுட்`."

#: ../source/guides/creating-command-line-tools.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pyproject.toml``"
msgstr "`` pyproject.toml``"

#: ../source/guides/creating-command-line-tools.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The project's :term:`metadata <Pyproject Metadata>` is placed in "
":term:`pyproject.toml`. The :term:`pyproject metadata keys <Pyproject "
"Metadata Key>` and the ``[build-system]`` table may be filled in as "
"described in :ref:`writing-pyproject-toml`, adding a dependency on ``typer``"
" (this tutorial uses version *0.12.3*)."
msgstr ""
"திட்டத்தின்: கால: `மெட்டாடேட்டா <பைபிரோசெக்ட் மெட்டாடேட்டா>` "
"வைக்கப்பட்டுள்ளது: கால: `pyproject.toml`. தி: கால: `பைபிரொசெக்ட் மேனிலை தரவு"
" விசைகள் <பைபிரோசெக்ட் மேனிலை தரவு விசை>` மற்றும் `` [பில்ட்-சிச்டம்] `` "
"அட்டவணை விவரிக்கப்பட்டுள்ளபடி நிரப்பப்படலாம்: `` "
"எழுதுதல்-பிப்ரோசெக்ட்-டோம்ல்`, `` `` டைபர்`` (இந்த பயிற்சி பதிப்பைப் "
"பயன்படுத்துகிறது *0.12.3 *)."

#: ../source/guides/creating-command-line-tools.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For the project to be recognised as a command-line tool, additionally a "
"``console_scripts`` :ref:`entry point <entry-points>` (see "
":ref:`console_scripts`) needs to be added as a :term:`subkey <Pyproject "
"Metadata Subkey>`:"
msgstr ""
"திட்டம் ஒரு கட்டளை-வரி கருவியாக அங்கீகரிக்கப்படுவதற்கு, கூடுதலாக ஒரு `` "
"கன்சோல்_ச்கிரிப்ட்ச்``: குறிப்பு: `நுழைவு புள்ளி <நுழைவு புள்ளிகள்>` "
"(பார்க்க: குறிப்பு: `கன்சோல்_ச்கிரிப்ட்ச்`) ஒரு: காலமாக சேர்க்கப்பட "
"வேண்டும்: `சப்ச்கே <பைபிரோசெக்ட் மேனிலை தரவு சப்ச்கி>`:"

#: ../source/guides/creating-command-line-tools.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now, the project's source tree is ready to be transformed into a "
":term:`distribution package <Distribution Package>`, which makes it "
"installable."
msgstr ""
"இப்போது, ​​திட்டத்தின் மூல மரம் A: காலமாக மாற்ற தயாராக உள்ளது: `விநியோக "
"தொகுப்பு <விநியோக தொகுப்பு>`, இது நிறுவக்கூடியதாக அமைகிறது."

#: ../source/guides/creating-command-line-tools.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing the package with ``pipx``"
msgstr "`` பிப்எக்ச்`` உடன் தொகுப்பை நிறுவுதல்"

#: ../source/guides/creating-command-line-tools.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"After installing ``pipx`` as described in :ref:`installing-stand-alone-"
"command-line-tools`, install your project:"
msgstr ""
"இவ்வாறு விவரிக்கப்பட்டுள்ளபடி `` பிப்எக்ச்`` ஐ நிறுவிய பிறகு: குறிப்பு: "
"`தனியாக-கட்டம்-கட்டளை-கோல்களை நிறுவுதல், உங்கள் திட்டத்தை நிறுவவும்:"

#: ../source/guides/creating-command-line-tools.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This will expose the executable script we defined as an entry point and make"
" the command ``greet`` available. Let's test it:"
msgstr ""
"இது ஒரு நுழைவு புள்ளியாக நாங்கள் வரையறுத்துள்ள இயங்கக்கூடிய ச்கிரிப்டை "
"அம்பலப்படுத்தும் மற்றும் கட்டளையை `` வாழ்த்துக்கள்`` கிடைக்கச் செய்யும். அதை"
" சோதிப்போம்:"

#: ../source/guides/creating-command-line-tools.rst:155
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Since this example uses ``typer``, you could now also get an overview of the"
" program's usage by calling it with the ``--help`` option, or configure "
"completions via the ``--install-completion`` option."
msgstr ""
"இந்த எடுத்துக்காட்டு `` டைபர்`` ஐப் பயன்படுத்துவதால், நிரல் பயன்பாட்டின் "
"``--எல்ப்`` விருப்பத்துடன் அழைப்பதன் மூலம் அல்லது ``-நிறுவல்-முடித்தல்`` "
"விருப்பத்தின் மூலம் நிறைவுகளை உள்ளமைக்கவும் இப்போது நிரலின் பயன்பாட்டின் "
"கண்ணோட்டத்தையும் பெறலாம் ."

#: ../source/guides/creating-command-line-tools.rst:158
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To just run the program without installing it permanently, use ``pipx run``,"
" which will create a temporary (but cached) virtual environment for it:"
msgstr ""
"நிரலை நிரந்தரமாக நிறுவாமல் இயக்க, `` பிப்எக்ச் ரன்`` ஐப் பயன்படுத்தவும், இது"
" ஒரு தற்காலிக (ஆனால் தற்காலிக சேமிப்பு) மெய்நிகர் சூழலை உருவாக்கும்:"

#: ../source/guides/creating-command-line-tools.rst:165
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This syntax is a bit unpractical, however; as the name of the entry point we"
" defined above does not match the package name, we need to state explicitly "
"which executable script to run (even though there is only on in existence)."
msgstr ""
"இருப்பினும், இந்த தொடரியல் சற்று நடைமுறைக்கு மாறானது; நாங்கள் மேலே வரையறுத்த"
" நுழைவு புள்ளியின் பெயர் தொகுப்பு பெயருடன் பொருந்தவில்லை என்பதால், எந்த "
"இயங்கக்கூடிய ச்கிரிப்டை இயக்க வேண்டும் என்பதை நாம் வெளிப்படையாகக் கூற "
"வேண்டும் (இருப்பு மட்டுமே இருந்தாலும்)."

#: ../source/guides/creating-command-line-tools.rst:168
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There is, however, a more practical solution to this problem, in the form of"
" an entry point specific to ``pipx run``. The same can be defined as follows"
" in :file:`pyproject.toml`:"
msgstr ""
"எவ்வாறாயினும், இந்த சிக்கலுக்கு மிகவும் நடைமுறை தீர்வு உள்ளது, `` பிப்எக்ச் "
"ரன்`` க்கு குறிப்பிட்ட நுழைவு புள்ளியின் வடிவத்தில். பின்வருமாறு இதை "
"வரையறுக்கலாம்: கோப்பு: `pyproject.toml`:"

#: ../source/guides/creating-command-line-tools.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Thanks to this entry point (which *must* match the package name), ``pipx`` "
"will pick up the executable script as the default one and run it, which "
"makes this command possible:"
msgstr ""
"இந்த நுழைவு புள்ளிக்கு நன்றி (இது * தொகுப்பு பெயருடன் பொருந்த வேண்டும்), `` "
"பிப்எக்ச்`` இயங்கக்கூடிய ச்கிரிப்டை இயல்புநிலையாக எடுத்துக்கொண்டு இயக்கும், "
"இது இந்த கட்டளையை சாத்தியமாக்குகிறது:"

#: ../source/guides/creating-command-line-tools.rst:185
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Conclusion"
msgstr "முடிவு"

#: ../source/guides/creating-command-line-tools.rst:187
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You know by now how to package a command-line application written in Python."
" A further step could be to distribute you package, meaning uploading it to "
"a :term:`package index <Package Index>`, most commonly :term:`PyPI <Python "
"Package Index (PyPI)>`. To do that, follow the instructions at "
":ref:`Packaging your project`. And once you're done, don't forget to "
":ref:`do some research <analyzing-pypi-package-downloads>` on how your "
"package is received!"
msgstr ""
"பைத்தானில் எழுதப்பட்ட கட்டளை-வரி பயன்பாட்டை எவ்வாறு தொகுப்பது என்பது இப்போது"
" உங்களுக்குத் தெரியும். உங்கள் தொகுப்பை விநியோகிப்பதே மேலும் படி, அதாவது அதை"
" A க்கு பதிவேற்றுவது: சொல்: `தொகுப்பு அட்டவணை <தொகுப்பு குறியீட்டு>`, "
"பொதுவாக: கால: `பைபி <பைதான் தொகுப்பு குறியீட்டு (பைபி)>`. அதைச் செய்ய, "
"வழிமுறைகளைப் பின்பற்றவும்: குறிப்பு: `உங்கள் திட்டத்தை பேக்கேசிங் செய்தல்`. "
"நீங்கள் முடித்ததும், மறந்துவிடாதீர்கள்: குறிப்பு: `சில ஆராய்ச்சி செய்யுங்கள்"
" <உங்கள் தொகுப்பு எவ்வாறு பெறப்படுகிறது என்பதைப் பற்றி பகுப்பாய்வு "
"செய்தல்-பைபி-பேக்கேச்-டவுன்லோடுகளை பகுப்பாய்வு செய்யுங்கள்!"

#: ../source/guides/distributing-packages-using-setuptools.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Packaging and distributing projects"
msgstr "திட்டங்களை பேக்கேசிங் மற்றும் விநியோகித்தல்"

#: ../source/guides/distributing-packages-using-setuptools.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Outdated"
msgstr "காலாவதியான"

#: ../source/guides/distributing-packages-using-setuptools.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2023-12-14"
msgstr "2023-12-14"

#: ../source/guides/distributing-packages-using-setuptools.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section covers some additional details on configuring, packaging and "
"distributing Python projects with ``setuptools`` that aren't covered by the "
"introductory tutorial in :doc:`/tutorials/packaging-projects`.  It still "
"assumes that you are already familiar with the contents of the "
":doc:`/tutorials/installing-packages` page."
msgstr ""
"இந்த பிரிவு பைதான் திட்டங்களை உள்ளமைத்தல், பேக்கேசிங் மற்றும் விநியோகித்தல் "
"பற்றிய சில கூடுதல் விவரங்களை `` செடிப்டூல்ச்`` உடன் அறிமுகம் டுடோரியலால் "
"உள்ளடக்கியது: டாக்: `/டுடோரியல்கள்/பேக்கேசிங்-திட்டங்கள்`. : டாக்: "
"`/டுடோரியல்கள்/நிறுவுதல்-பேக்கேச்கள்` பக்கத்தின் உள்ளடக்கங்களை நீங்கள் "
"ஏற்கனவே அறிந்திருக்கிறீர்கள் என்று அது இன்னும் கருதுகிறது."

#: ../source/guides/distributing-packages-using-setuptools.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The section does *not* aim to cover best practices for Python project "
"development as a whole.  For example, it does not provide guidance or tool "
"recommendations for version control, documentation, or testing."
msgstr ""
"ஒட்டுமொத்தமாக பைதான் திட்ட மேம்பாட்டுக்கான சிறந்த நடைமுறைகளை ஈடுகட்ட இந்த "
"பிரிவு * இல்லை *. எடுத்துக்காட்டாக, இது பதிப்பு கட்டுப்பாடு, ஆவணங்கள் அல்லது"
" சோதனைக்கான வழிகாட்டுதல் அல்லது கருவி பரிந்துரைகளை வழங்காது."

#: ../source/guides/distributing-packages-using-setuptools.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more reference material, see :std:doc:`Building and Distributing "
"Packages <setuptools:userguide/index>` in the :ref:`setuptools` docs, but "
"note that some advisory content there may be outdated. In the event of "
"conflicts, prefer the advice in the Python Packaging User Guide."
msgstr ""
"மேலும் குறிப்புப் பொருளுக்கு, காண்க: எச்.டி.டி: டிஓசி: `தொகுப்புகளை "
"உருவாக்குதல் மற்றும் விநியோகித்தல் <செட்டப்டூல்ச்: யு.எச்.இ. மோதல்கள் "
"ஏற்பட்டால், பைதான் பேக்கேசிங் பயனர் வழிகாட்டியில் ஆலோசனையை விரும்புங்கள்."

#: ../source/guides/distributing-packages-using-setuptools.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requirements for packaging and distributing"
msgstr "பேக்கேசிங் மற்றும் விநியோகிப்பதற்கான தேவைகள்"

#: ../source/guides/distributing-packages-using-setuptools.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"First, make sure you have already fulfilled the :ref:`requirements for "
"installing packages <installing_requirements>`."
msgstr ""
"முதலில், நீங்கள் ஏற்கனவே நிறைவு செய்துள்ளீர்கள் என்பதை உறுதிப்படுத்திக் "
"கொள்ளுங்கள்: ref: `தொகுப்புகளை நிறுவுவதற்கான தேவைகள் "
"<நிறுவல்_ரொக்விரெமென்ட்ச்>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install \"twine\" [1]_:"
msgstr "\"கயிறு\" நிறுவவும் [1] _:"

#: ../source/guides/distributing-packages-using-setuptools.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You'll need this to upload your project :term:`distributions <Distribution "
"Package>` to :term:`PyPI <Python Package Index (PyPI)>` (see :ref:`below "
"<Uploading your Project to PyPI>`)."
msgstr ""
"உங்கள் திட்டத்தை பதிவேற்ற உங்களுக்கு இது தேவைப்படும்: கால: `விநியோகங்கள் "
"<விநியோக தொகுப்பு>` க்கு: கால: `பைபி <பைதான் தொகுப்பு குறியீட்டு (பைபி)>` "
"(பார்க்க: `கீழே <கீழே <உங்கள் திட்டத்தை பைபி>` ."

#: ../source/guides/distributing-packages-using-setuptools.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Configuring your project"
msgstr "உங்கள் திட்டத்தை உள்ளமைத்தல்"

#: ../source/guides/distributing-packages-using-setuptools.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Initial files"
msgstr "தொடக்க கோப்புகள்"

#: ../source/guides/distributing-packages-using-setuptools.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The most important file is :file:`setup.py` which exists at the root of your"
" project directory. For an example, see the `setup.py "
"<https://github.com/pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.py>`_"
" in the `PyPA sample project <https://github.com/pypa/sampleproject>`_."
msgstr ""
"மிக முக்கியமான கோப்பு: கோப்பு: உங்கள் திட்ட கோப்பகத்தின் மூலத்தில் இருக்கும்"
" `setup.py`. ஒரு எடுத்துக்காட்டுக்கு, `setup.py "
"<https://github.com/pypa/sampleproject/blob/db5806e0a32040340340dde7dde7d5eb3fa2532e/setup.py."
" மாதிரி தயாரிப்பு> `_."

#: ../source/guides/distributing-packages-using-setuptools.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":file:`setup.py` serves two primary functions:"
msgstr ": கோப்பு: `setup.py` இரண்டு முதன்மை செயல்பாடுகளுக்கு உதவுகிறது:"

#: ../source/guides/distributing-packages-using-setuptools.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's the file where various aspects of your project are configured. The "
"primary feature of :file:`setup.py` is that it contains a global ``setup()``"
" function.  The keyword arguments to this function are how specific details "
"of your project are defined.  The most relevant arguments are explained in "
":ref:`the section below <setup() args>`."
msgstr ""
"உங்கள் திட்டத்தின் பல்வேறு நற்பொருத்தங்கள் கட்டமைக்கப்பட்ட கோப்பு இது. இதன் "
"முதன்மை அம்சம்: கோப்பு: `setup.py` என்னவென்றால், அதில் உலகளாவிய` `அமைவு ()` "
"`செயல்பாடு உள்ளது. இந்த செயல்பாட்டிற்கான முக்கிய வாதங்கள் உங்கள் திட்டத்தின்"
" குறிப்பிட்ட விவரங்கள் எவ்வாறு வரையறுக்கப்படுகின்றன என்பதுதான். மிகவும் "
"பொருத்தமான வாதங்கள் இதில் விளக்கப்பட்டுள்ளன: ref: `கீழே உள்ள பிரிவு <அமைவு "
"() args>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's the command line interface for running various commands that relate to "
"packaging tasks. To get a listing of available commands, run ``python3 "
"setup.py --help-commands``."
msgstr ""
"பேக்கேசிங் பணிகளுடன் தொடர்புடைய பல்வேறு கட்டளைகளை இயக்குவதற்கான கட்டளை வரி "
"இடைமுகம் இது. கிடைக்கக்கூடிய கட்டளைகளின் பட்டியலைப் பெற, `` python3 setup.py"
"--help-commands`` ஐ இயக்கவும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":file:`setup.cfg` is an ini file that contains option defaults for "
":file:`setup.py` commands.  For an example, see the `setup.cfg "
"<https://github.com/pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.cfg>`_"
" in the `PyPA sample project <https://github.com/pypa/sampleproject>`_."
msgstr ""
". ஒரு எடுத்துக்காட்டுக்கு, `setup.cfg "
"<https://github.com/pypa/sampleproject/blob/db5806e0a3204034034dde7dde7d5eb3fa2532e/setup.cfg>"
" _` _ _ _ _ _ _ _ _ _ மாதிரி தயாரிப்பு> `_."

#: ../source/guides/distributing-packages-using-setuptools.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "README.rst / README.md"
msgstr "ReadMe.rst / readme.md"

#: ../source/guides/distributing-packages-using-setuptools.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All projects should contain a readme file that covers the goal of the "
"project. The most common format is `reStructuredText "
"<https://docutils.sourceforge.io/rst.html>`_ with an \"rst\" extension, "
"although this is not a requirement; multiple variants of `Markdown "
"<https://daringfireball.net/projects/markdown/>`_ are supported as well "
"(look at ``setup()``'s :ref:`long_description_content_type <description>` "
"argument)."
msgstr ""
"எல்லா திட்டங்களிலும் திட்டத்தின் இலக்கை உள்ளடக்கிய README கோப்பு இருக்க "
"வேண்டும். மிகவும் பொதுவான வடிவம் `மறுசீரமைக்கப்பட்ட டெக்ச்ட் "
"<https://docutils.sourceforge.io/rst.html>` _ ஒரு \"rst\" நீட்டிப்புடன், இது"
" ஒரு தேவையில்லை என்றாலும்; `மார்க் பேரூர் "
"<https://daringfireball.net/projects/markdown/> _ _ ஆகியவற்றின் பல வகைகளும் "
"ஆதரிக்கப்படுகின்றன (` `அமைவு ()` `கள்: ref:` long_description_content_type "
"<criptry> `வாதம்)."

#: ../source/guides/distributing-packages-using-setuptools.rst:98
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For an example, see `README.md "
"<https://github.com/pypa/sampleproject/blob/main/README.md>`_ from the `PyPA"
" sample project <https://github.com/pypa/sampleproject>`_."
msgstr ""
"எடுத்துக்காட்டுக்கு, `Readme.md "
"<https://github.com/pypa/sampleproject/blob/main/readme.md>` _ `pypa மாதிரி "
"திட்டத்திலிருந்து <https://github.com/pypa/sampleproject ஐப் பார்க்கவும் > "
"`_."

#: ../source/guides/distributing-packages-using-setuptools.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Projects using :ref:`setuptools` 0.6.27+ have standard readme files "
"(:file:`README.rst`, :file:`README.txt`, or :file:`README`) included in "
"source distributions by default. The built-in :ref:`distutils` library "
"adopts this behavior beginning in Python 3.7. Additionally, "
":ref:`setuptools` 36.4.0+ will include a :file:`README.md` if found. If you "
"are using setuptools, you don't need to list your readme file in "
":file:`MANIFEST.in`. Otherwise, include it to be explicit."
msgstr ""
"பயன்படுத்தும் திட்டங்கள்: ref: `setuptools` 0.6.27+ நிலையான README "
"கோப்புகளைக் கொண்டுள்ளன (: கோப்பு:` readme.rst`,: கோப்பு: `ReadMe.txt`, "
"அல்லது: கோப்பு:` README`) மூல விநியோகங்களில் இயல்பாகவே. உள்ளமைக்கப்பட்ட: "
"ref: `தொலைதூரங்கள்` நூலகம் இந்த நடத்தையை பைத்தான் 3.7 இல் தொடங்குகிறது. "
"கூடுதலாக, குறிப்பு: `setuptools` 36.4.0+ ஒரு: கோப்பு:` Readme.md` கிடைத்தால்"
" அடங்கும். நீங்கள் செட்டுப்டூல்களைப் பயன்படுத்துகிறீர்கள் என்றால், உங்கள் "
"README கோப்பை அதில் பட்டியலிட தேவையில்லை: கோப்பு: `manifest.in`. "
"இல்லையெனில், அதை வெளிப்படையாகச் சேர்க்கவும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "MANIFEST.in"
msgstr "MANIFEST.in"

#: ../source/guides/distributing-packages-using-setuptools.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :file:`MANIFEST.in` is needed when you need to package additional files "
"that are not automatically included in a source distribution.  For details "
"on writing a :file:`MANIFEST.in` file, including a list of what's included "
"by default, see \":ref:`Using MANIFEST.in`\"."
msgstr ""
"ப: கோப்பு: மூல விநியோகத்தில் தானாக சேர்க்கப்படாத கூடுதல் கோப்புகளை நீங்கள் "
"தொகுக்க வேண்டியிருக்கும் போது `மேனிஃபெச்ட்.இன்` தேவை. ஒரு: கோப்பு: "
"`manifest.in` கோப்பு, இயல்புநிலையாக சேர்க்கப்பட்டவற்றின் பட்டியல் உட்பட,\": "
"ref: `Manifest.in`\" ஐப் பயன்படுத்துதல் \"ஐப் பார்க்கவும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, you may not have to use a :file:`MANIFEST.in`. For an example, the "
"`PyPA sample project <https://github.com/pypa/sampleproject>`_ has removed "
"its manifest file, since all the necessary files have been included by "
":ref:`setuptools` 43.0.0 and newer."
msgstr ""
"இருப்பினும், நீங்கள் ஒரு: கோப்பு: `manifest.in` ஐப் பயன்படுத்த "
"வேண்டியதில்லை. எடுத்துக்காட்டுக்கு, `பைபா மாதிரி திட்டம் "
"<https://github.com/pypa/sampleproject>` _ அதன் வெளிப்படையான கோப்பை "
"நீக்கிவிட்டது, ஏனெனில் தேவையான அனைத்து கோப்புகளும் இவற்றில் "
"சேர்க்கப்பட்டுள்ளன: ref: `setuptools` 43.0.0 மற்றும் புதியது ."

#: ../source/guides/distributing-packages-using-setuptools.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":file:`MANIFEST.in` does not affect binary distributions such as wheels."
msgstr ""
": கோப்பு: `manifest.in` சக்கரங்கள் போன்ற பைனரி விநியோகங்களை பாதிக்காது."

#: ../source/guides/distributing-packages-using-setuptools.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "LICENSE.txt"
msgstr "உரிமம்"

#: ../source/guides/distributing-packages-using-setuptools.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Every package should include a license file detailing the terms of "
"distribution. In many jurisdictions, packages without an explicit license "
"can not be legally used or distributed by anyone other than the copyright "
"holder. If you're unsure which license to choose, you can use resources such"
" as `GitHub's Choose a License <https://choosealicense.com/>`_ or consult a "
"lawyer."
msgstr ""
"ஒவ்வொரு தொகுப்பிலும் விநியோக விதிமுறைகளை விவரிக்கும் உரிமக் கோப்பு இருக்க "
"வேண்டும். பல அதிகார வரம்புகளில், வெளிப்படையான உரிமம் இல்லாத தொகுப்புகளை "
"பதிப்புரிமைதாரரைத் தவிர வேறு யாராலும் சட்டப்பூர்வமாக பயன்படுத்தவோ அல்லது "
"விநியோகிக்கவோ முடியாது. எந்த உரிமத்தை தேர்வு செய்வது என்று உங்களுக்குத் "
"தெரியாவிட்டால், `கிட்அப் போன்ற ஆதாரங்களை நீங்கள் பயன்படுத்தலாம் "
"<https://choosealicense.com/> _ _ அல்லது ஒரு வழக்கறிஞரை அணுகவும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For an example, see the `LICENSE.txt "
"<https://github.com/pypa/sampleproject/blob/main/LICENSE.txt>`_ from the "
"`PyPA sample project <https://github.com/pypa/sampleproject>`_."
msgstr ""
"எடுத்துக்காட்டுக்கு, `பைபா மாதிரி திட்டத்திலிருந்து "
"<https://github.com/pypa/ இலிருந்து` உரிமம். மாதிரி தயாரிப்பு> `_."

#: ../source/guides/distributing-packages-using-setuptools.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "<your package>"
msgstr "<உங்கள் தொகுப்பு>"

#: ../source/guides/distributing-packages-using-setuptools.rst:141
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Although it's not required, the most common practice is to include your "
"Python modules and packages under a single top-level package that has the "
"same :ref:`name <setup() name>` as your project, or something very close."
msgstr ""
"இது தேவையில்லை என்றாலும், உங்கள் பைதான் தொகுதிகள் மற்றும் தொகுப்புகளை ஒரே "
"ஒரு உயர் மட்ட தொகுப்பின் கீழ் சேர்ப்பது மிகவும் பொதுவான நடைமுறை: ref: `பெயர்"
" <அமைவு () பெயர்>` உங்கள் திட்டமாக அல்லது மிக நெருக்கமான ஒன்று."

#: ../source/guides/distributing-packages-using-setuptools.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For an example, see the `sample "
"<https://github.com/pypa/sampleproject/tree/main/src/sample>`_ package "
"that's included in the `PyPA sample project "
"<https://github.com/pypa/sampleproject>`_."
msgstr ""
"எடுத்துக்காட்டுக்கு, `மாதிரி "
"<https://github.com/pypa/sampleproject/tree/main/src/sample>` _ PYPA மாதிரி "
"திட்டத்தில் சேர்க்கப்பட்டுள்ள தொகுப்பு <https://github.com/pypa "
"/salemProject> `_."

#: ../source/guides/distributing-packages-using-setuptools.rst:153
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "setup() args"
msgstr "அமைவு () ஆர்க்ச்"

#: ../source/guides/distributing-packages-using-setuptools.rst:155
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As mentioned above, the primary feature of :file:`setup.py` is that it "
"contains a global ``setup()`` function.  The keyword arguments to this "
"function are how specific details of your project are defined."
msgstr ""
"மேலே குறிப்பிட்டுள்ளபடி, இதன் முதன்மை அம்சம்: கோப்பு: `setup.py` "
"என்னவென்றால், அதில் உலகளாவிய` `அமைவு ()` `செயல்பாடு உள்ளது. இந்த "
"செயல்பாட்டிற்கான முக்கிய வாதங்கள் உங்கள் திட்டத்தின் குறிப்பிட்ட விவரங்கள் "
"எவ்வாறு வரையறுக்கப்படுகின்றன என்பதுதான்."

#: ../source/guides/distributing-packages-using-setuptools.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some are temporarily explained below until their information is moved "
"elsewhere. The full list can be found :doc:`in the setuptools documentation "
"<setuptools:references/keywords>`."
msgstr ""
"சிலர் தங்கள் தகவல்கள் வேறு இடத்திற்கு நகர்த்தப்படும் வரை தற்காலிகமாக கீழே "
"விளக்கப்படுகிறார்கள். முழு பட்டியலையும் காணலாம்: டிஓசி: `செட்டுப்டூல்ச் "
"ஆவணத்தில் <செட்டுப்டூல்ச்: குறிப்புகள்/முக்கிய வார்த்தைகள்>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Most of the snippets given are taken from the `setup.py "
"<https://github.com/pypa/sampleproject/blob/db5806e0a3204034c51b1c00dde7d5eb3fa2532e/setup.py>`_"
" contained in the `PyPA sample project "
"<https://github.com/pypa/sampleproject>`_."
msgstr ""
"கொடுக்கப்பட்ட பெரும்பாலான துணுக்குகள் `setup.py "
"<https://github.com/pypa/sampleproject/blob/db5806e3204034c51b1c00dde7dde7dde7ba2532e/setup.py.py>"
" _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ com/pypa/salemProject> `_."

#: ../source/guides/distributing-packages-using-setuptools.rst:170
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, regex:":ref:`\w+[\w\s]* <Choosing a versioning scheme>`", rst-text
msgid ""
"See :ref:`Choosing a versioning scheme` for more information on ways to use "
"versions to convey compatibility information to your users."
msgstr ""
"காண்க: குறிப்பு: `ஒரு பதிப்பு திட்டத்தைத் தேர்ந்தெடுப்பது` உங்கள் "
"பயனர்களுக்கு பொருந்தக்கூடிய தகவல்களை தெரிவிக்க பதிப்புகளைப் "
"பயன்படுத்துவதற்கான வழிகள் பற்றிய கூடுதல் தகவலுக்கு."

#: ../source/guides/distributing-packages-using-setuptools.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``packages``"
msgstr "`` தொகுப்புகள்``"

#: ../source/guides/distributing-packages-using-setuptools.rst:183
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Set ``packages`` to a list of all :term:`packages <Import Package>` in your "
"project, including their subpackages, sub-subpackages, etc.  Although the "
"packages can be listed manually, ``setuptools.find_packages()`` finds them "
"automatically.  Use the ``include`` keyword argument to find only the given "
"packages.  Use the ``exclude`` keyword argument to omit packages that are "
"not intended to be released and installed."
msgstr ""
"எல்லாவற்றின் பட்டியலுக்கும் `` தொகுப்புகள்`` அமைக்கவும்: கால: `தொகுப்புகள் "
"<இறக்குமதி தொகுப்பு>`, உங்கள் திட்டத்தில், அவற்றின் துணைப் பேக்குகள், துணை "
"துணைப்பிரிவுகள் போன்றவை உட்பட. தொகுப்புகளை கைமுறையாக பட்டியலிட முடியும் "
"என்றாலும், `` setuptools.find_packages () `` அவற்றை தானாகவே கண்டுபிடிக்கும்."
" கொடுக்கப்பட்ட தொகுப்புகளை மட்டுமே கண்டுபிடிக்க `` `` முக்கிய வாதத்தை "
"சேர்க்கவும். விடுவிக்கப்பட்டு நிறுவப்பட விரும்பாத தொகுப்புகளைத் தவிர்க்க `` "
"விலக்கு `முக்கிய வாதத்தைப் பயன்படுத்தவும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``py_modules``"
msgstr "`` py_modules``"

#: ../source/guides/distributing-packages-using-setuptools.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your project contains any single-file Python modules that aren't part of "
"a package, set ``py_modules`` to a list of the names of the modules (minus "
"the ``.py`` extension) in order to make :ref:`setuptools` aware of them."
msgstr ""
"உங்கள் திட்டத்தில் ஏதேனும் ஒற்றை கோப்பு பைதான் தொகுதிகள் இருந்தால், ஒரு "
"தொகுப்பின் பகுதியாக இல்லாத ஏதேனும் ஒரு பைதான் தொகுதிகள் இருந்தால், `` "
"py_modules`` ஐ தொகுதிகளின் பெயர்களின் பட்டியலுக்கு அமைக்கவும் (`` .py`` "
"நீட்டிப்பு) செய்ய: குறிப்பு: `செட்ப்டூல்ச்` அவர்களைப் பற்றி "
"அறிந்திருக்கிறார்."

#. It's a literal, no translation is needed.
#: ../source/guides/distributing-packages-using-setuptools.rst:204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``install_requires``"
msgstr "`` install_requires``"

#: ../source/guides/distributing-packages-using-setuptools.rst:210
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"install_requires\" should be used to specify what dependencies a project "
"minimally needs to run. When the project is installed by :ref:`pip`, this is"
" the specification that is used to install its dependencies."
msgstr ""
"ஒரு திட்டம் குறைந்தபட்சமாக இயங்க வேண்டிய சார்புகளைக் குறிப்பிட "
"\"Install_requires\" பயன்படுத்தப்பட வேண்டும். திட்டத்தை நிறுவும் போது: ref: "
"`பிப்`, இது அதன் சார்புகளை நிறுவ பயன்படும் விவரக்குறிப்பு."

#: ../source/guides/distributing-packages-using-setuptools.rst:214
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more on using \"install_requires\" see :ref:`install_requires vs "
"Requirements files`."
msgstr ""
"\"Install_requires\" ஐப் பயன்படுத்துவது பற்றி மேலும் அறிய: ref: "
"`install_requires vs தேவைகள் கோப்புகள்`."

#: ../source/guides/distributing-packages-using-setuptools.rst:221
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``package_data``"
msgstr "`` தொகுப்பு_டேட்டா``"

#: ../source/guides/distributing-packages-using-setuptools.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Often, additional files need to be installed into a :term:`package <Import "
"Package>`. These files are often data that’s closely related to the "
"package’s implementation, or text files containing documentation that might "
"be of interest to programmers using the package. These files are called "
"\"package data\"."
msgstr ""
"பெரும்பாலும், கூடுதல் கோப்புகள் ஒரு: கால: `தொகுப்பு <இறக்குமதி தொகுப்பு> இல்"
" நிறுவப்பட வேண்டும். இந்த கோப்புகள் பெரும்பாலும் தொகுப்பின் செயல்படுத்தலுடன்"
" நெருக்கமாக தொடர்புடைய தரவு அல்லது தொகுப்பைப் பயன்படுத்தி புரோகிராமர்களுக்கு"
" ஆர்வமாக இருக்கும் ஆவணங்களைக் கொண்ட உரை கோப்புகள். இந்த கோப்புகள் \"தொகுப்பு"
" தரவு\" என்று அழைக்கப்படுகின்றன."

#: ../source/guides/distributing-packages-using-setuptools.rst:235
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The value must be a mapping from package name to a list of relative path "
"names that should be copied into the package. The paths are interpreted as "
"relative to the directory containing the package."
msgstr ""
"மதிப்பு தொகுப்பில் நகலெடுக்கப்பட வேண்டிய ஒப்பீட்டு பாதை பெயர்களின் "
"பட்டியலுக்கு தொகுப்பு பெயரிலிருந்து மேப்பிங் செய்ய வேண்டும். பாதைகள் "
"தொகுப்பைக் கொண்ட கோப்பகத்துடன் தொடர்புடையதாக விளக்கப்படுகின்றன."

#: ../source/guides/distributing-packages-using-setuptools.rst:239
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more information, see :std:doc:`Including Data Files "
"<setuptools:userguide/datafiles>` from the :std:doc:`setuptools docs "
"<setuptools:index>`."
msgstr ""
"மேலும் தகவலுக்கு, காண்க: எச்.டி.டி: டிஓசி: `தரவுக் கோப்புகள் <செட்டப்டூல்ச்:"
" யு.எச்.இ."

#: ../source/guides/distributing-packages-using-setuptools.rst:247
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``data_files``"
msgstr "`` data_files``"

#: ../source/guides/distributing-packages-using-setuptools.rst:253
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Although configuring :ref:`Package Data` is sufficient for most needs, in "
"some cases you may need to place data files *outside* of your "
":term:`packages <Import Package>`.  The ``data_files`` directive allows you "
"to do that. It is mostly useful if you need to install files which are used "
"by other programs, which may be unaware of Python packages."
msgstr ""
"உள்ளமைவு: ref: `தொகுப்பு தரவு` பெரும்பாலான தேவைகளுக்கு போதுமானது, சில "
"சந்தர்ப்பங்களில் நீங்கள் தரவுக் கோப்புகளை * வெளியே * வைக்க "
"வேண்டியிருக்கலாம்: உங்கள்: கால:` தொகுப்புகள் <இறக்குமதி தொகுப்பு> `. `` "
"Data_files`` கட்டளை அதைச் செய்ய உங்களை அனுமதிக்கிறது. பிற நிரல்களால் "
"பயன்படுத்தப்படும் கோப்புகளை நீங்கள் நிறுவ வேண்டுமானால் இது பெரும்பாலும் "
"பயனுள்ளதாக இருக்கும், அவை பைதான் தொகுப்புகளைப் பற்றி அறியாமல் இருக்கலாம்."

#: ../source/guides/distributing-packages-using-setuptools.rst:259
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each ``(directory, files)`` pair in the sequence specifies the installation "
"directory and the files to install there. The ``directory`` must be a "
"relative path (although this may change in the future, see `wheel Issue #92 "
"<https://github.com/pypa/wheel/issues/92>`_), and it is interpreted relative"
" to the installation prefix (Python’s ``sys.prefix`` for a default "
"installation; ``site.USER_BASE`` for a user installation). Each file name in"
" ``files`` is interpreted relative to the :file:`setup.py` script at the top"
" of the project source distribution."
msgstr ""
"ஒவ்வொரு `` (அடைவு, கோப்புகள்) `` வரிசையில் உள்ள இணை நிறுவல் அடைவு மற்றும் "
"அங்கு நிறுவ வேண்டிய கோப்புகளைக் குறிப்பிடுகிறது. `` அடைவு`` ஒரு உறவினர் "
"பாதையாக இருக்க வேண்டும் (இது எதிர்காலத்தில் மாறக்கூடும் என்றாலும், `சக்கர "
"சிக்கல் #92 <https://github.com/pypa/wheel/issues/92> _ _) ஐப் பார்க்கவும் "
"நிறுவல் முன்னொட்டுடன் தொடர்புடையது (இயல்புநிலை நிறுவலுக்காக பைதனின் `` "
"sys.prefix``; `` site.user_base`` ஒரு பயனர் நிறுவலுக்கு). `` கோப்புகள்`` இல்"
" உள்ள ஒவ்வொரு கோப்பின் பெயரும் திட்ட மூல விநியோகத்தின் மேலே: `setup.py` "
"ச்கிரிப்டுடன் தொடர்புடையது."

#: ../source/guides/distributing-packages-using-setuptools.rst:269
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more information see the distutils section on :ref:`Installing "
"Additional Files <setuptools:distutils-additional-files>`."
msgstr ""
"மேலும் தகவலுக்கு, தொலைதூரப் பகுதியைப் பார்க்கவும்: ref: `கூடுதல் கோப்புகளை "
"நிறுவுதல் <செட்டப்டூல்ச்: டிச்டிடில்ச்-அட்ரிசனல்-ஃபைல்கள்>`."

#: ../source/guides/distributing-packages-using-setuptools.rst:274
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When installing packages as egg, ``data_files`` is not supported. So, if "
"your project uses :ref:`setuptools`, you must use ``pip`` to install it. "
"Alternatively, if you must use ``python setup.py``, then you need to pass "
"the ``--old-and-unmanageable`` option."
msgstr ""
"தொகுப்புகளை முட்டையாக நிறுவும் போது, ​​`` data_files`` ஆதரிக்கப்படவில்லை. "
"எனவே, உங்கள் திட்டம் பயன்படுத்தினால்: Ref: `setuptools`, அதை நிறுவ` `பிப்`` "
"ஐப் பயன்படுத்த வேண்டும். மாற்றாக, நீங்கள் `` பைதான் setup.py`` ஐப் "
"பயன்படுத்த வேண்டும் என்றால், நீங்கள் `` --old-and-unmanageable` விருப்பத்தை "
"அனுப்ப வேண்டும்."

#. It's a literal, no translation is needed.
#: ../source/guides/distributing-packages-using-setuptools.rst:281
#: ../source/specifications/pyproject-toml.rst:147
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``scripts``"
msgstr "`` ச்கிரிப்ட்கள்``"

#: ../source/guides/distributing-packages-using-setuptools.rst:283
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Although ``setup()`` supports a :ref:`scripts <setuptools:distutils-"
"installing-scripts>` keyword for pointing to pre-made scripts to install, "
"the recommended approach to achieve cross-platform compatibility is to use "
":ref:`console_scripts` entry points (see below)."
msgstr ""
"`` Setup () `` ஆதரிக்கிறது ஒரு: குறிப்பு: `ச்கிரிப்டுகள் <செட்டுப்லூல்கள்: "
"டிச்ட்டில்ச்-இன்ச்டாலிங்-ச்கிரிப்டுகள்>` நிறுவுவதற்கு முன்பே தயாரிக்கப்பட்ட "
"ச்கிரிப்ட்களை சுட்டிக்காட்டுவதற்கான முக்கிய சொல், குறுக்கு-தளம் "
"பொருந்தக்கூடிய தன்மையை அடைய பரிந்துரைக்கப்பட்ட அணுகுமுறை: புதுப்பிப்பு: "
"புதுப்பிப்பு : `Console_scripts` நுழைவு புள்ளிகள் (கீழே காண்க)."

#: ../source/guides/distributing-packages-using-setuptools.rst:291
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Choosing a versioning scheme"
msgstr "பதிப்பு திட்டத்தைத் தேர்ந்தெடுப்பது"

#: ../source/guides/distributing-packages-using-setuptools.rst:293
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See :ref:`versioning` for information on common version schemes and how to "
"choose between them."
msgstr ""
"காண்க: குறிப்பு: பொதுவான பதிப்பு திட்டங்கள் மற்றும் அவற்றுக்கிடையே எவ்வாறு "
"தேர்வு செய்வது என்பது பற்றிய தகவல்களுக்கு `பதிப்பு."

#: ../source/guides/distributing-packages-using-setuptools.rst:298
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Working in \"development mode\""
msgstr "\"மேம்பாட்டு பயன்முறையில்\" பணிபுரிதல்"

#: ../source/guides/distributing-packages-using-setuptools.rst:300
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can install a project in \"editable\" or \"develop\" mode while you're "
"working on it. When installed as editable, a project can be edited in-place "
"without reinstallation: changes to Python source files in projects installed"
" as editable will be reflected the next time an interpreter process is "
"started."
msgstr ""
"நீங்கள் பணிபுரியும் போது ஒரு திட்டத்தை \"திருத்தக்கூடிய\" அல்லது "
"\"உருவாக்கு\" பயன்முறையில் நிறுவலாம். திருத்தக்கூடியதாக நிறுவப்பட்டால், ஒரு "
"திட்டத்தை மீண்டும் நிறுவாமல் இடத்திலேயே திருத்தலாம்: திருத்தக்கூடியதாக "
"நிறுவப்பட்ட திட்டங்களில் பைதான் மூல கோப்புகளில் மாற்றங்கள் அடுத்த முறை ஒரு "
"மொழிபெயர்ப்பாளர் செயல்முறை தொடங்கப்படும் போது பிரதிபலிக்கும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:306
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To install a Python package in \"editable\"/\"development\" mode Change "
"directory to the root of the project directory and run:"
msgstr ""
"ஒரு பைதான் தொகுப்பை \"திருத்தக்கூடிய\"/\"மேம்பாட்டு\" பயன்முறையில் திட்ட "
"கோப்பகத்தின் வேருக்கு கோப்பகத்தை மாற்றவும் இயக்கவும்:"

#: ../source/guides/distributing-packages-using-setuptools.rst:314
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The pip command-line flag ``-e`` is short for ``--editable``, and ``.`` "
"refers to the current working directory, so together, it means to install "
"the current directory (i.e. your project) in editable mode.  This will also "
"install any dependencies declared with ``install_requires`` and any scripts "
"declared with ``console_scripts``.  Dependencies will be installed in the "
"usual, non-editable mode."
msgstr ""
"பிஐபி கட்டளை-வரி கொடி `` -e`` ``-பொருத்தமற்ற`` க்கு குறுகியது, மற்றும் `` .`"
" .` .`` இது தற்போதைய பணி கோப்பகத்தைக் குறிக்கிறது, எனவே ஒன்றாக, தற்போதைய "
"கோப்பகத்தை நிறுவுவதாகும் (அதாவது உங்கள் திட்டத்தை ) திருத்தக்கூடிய "
"பயன்முறையில். இது `` Install_requires`` உடன் அறிவிக்கப்பட்ட எந்தவொரு "
"சார்புகளையும் நிறுவும் மற்றும் `` கன்சோல்_ச்கிரிப்ட்ச்`` உடன் அறிவிக்கப்பட்ட"
" எந்த ச்கிரிப்டுகளையும் நிறுவும். சார்புநிலைகள் வழக்கமான, திருத்தப்படாத "
"பயன்முறையில் நிறுவப்படும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:321
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You may want to install some of your dependencies in editable mode as well. "
"For example, supposing your project requires \"foo\" and \"bar\", but you "
"want \"bar\" installed from VCS in editable mode, then you could construct a"
" requirements file like so::"
msgstr ""
"உங்கள் சார்புகளில் சிலவற்றை திருத்தக்கூடிய பயன்முறையிலும் நிறுவ விரும்பலாம்."
" எடுத்துக்காட்டாக, உங்கள் திட்டத்திற்கு \"ஃபூ\" மற்றும் \"பார்\" தேவை என்று "
"கருதுகிறது, ஆனால் பகஅ இலிருந்து திருத்தக்கூடிய பயன்முறையில் நிறுவப்பட்ட "
"\"பார்\" வேண்டும் என்று நீங்கள் விரும்புகிறீர்கள், பின்னர் நீங்கள் ஒரு "
"தேவைகள் கோப்பை உருவாக்கலாம் ::"

#: ../source/guides/distributing-packages-using-setuptools.rst:329
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The first line says to install your project and any dependencies. The second"
" line overrides the \"bar\" dependency, such that it's fulfilled from VCS, "
"not PyPI."
msgstr ""
"உங்கள் திட்டத்தையும் எந்தவொரு சார்புகளையும் நிறுவ முதல் வரி கூறுகிறது. "
"இரண்டாவது வரி \"பார்\" சார்புநிலையை மீறுகிறது, இது வி.சி.க்களிலிருந்து "
"நிறைவேறும், இது பைபி அல்ல."

#: ../source/guides/distributing-packages-using-setuptools.rst:333
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If, however, you want \"bar\" installed from a local directory in editable "
"mode, the requirements file should look like this, with the local paths at "
"the top of the file::"
msgstr ""
"எவ்வாறாயினும், திருத்தக்கூடிய பயன்முறையில் ஒரு உள்ளக கோப்பகத்திலிருந்து "
"நிறுவப்பட்ட \"பார்\" விரும்பினால், தேவைகள் கோப்பு இப்படி இருக்க வேண்டும், "
"கோப்பின் மேலே உள்ள உள்ளக பாதைகள் ::"

#: ../source/guides/distributing-packages-using-setuptools.rst:338
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Otherwise, the dependency will be fulfilled from PyPI, due to the "
"installation order of the requirements file.  For more on requirements "
"files, see the :ref:`Requirements File <pip:Requirements Files>` section in "
"the pip docs.  For more on VCS installs, see the :ref:`VCS Support <pip:VCS "
"Support>` section of the pip docs."
msgstr ""
"இல்லையெனில், தேவைகள் கோப்பின் நிறுவல் வரிசை காரணமாக, சார்பு பைபியிலிருந்து "
"நிறைவேற்றப்படும். தேவைகள் கோப்புகளைப் பற்றி மேலும் அறிய, பார்க்க: ref: "
"`தேவைகள் கோப்பு <PIP: தேவைகள் கோப்புகள்>` PIP டாக்சில் பிரிவு. வி.சி.எச் "
"நிறுவல்களைப் பற்றி மேலும் அறிய, இதைக் காண்க: குறிப்பு: `வி.சி.எச் உதவி "
"<பிஐபி: வி.சி.எச் ஆதரவு>` பிஐபி டாக்சின் பிரிவு."

#: ../source/guides/distributing-packages-using-setuptools.rst:342
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Lastly, if you don't want to install any dependencies at all, you can run:"
msgstr ""
"கடைசியாக, நீங்கள் எந்த சார்புகளையும் நிறுவ விரும்பவில்லை என்றால், நீங்கள் "
"இயக்கலாம்:"

#: ../source/guides/distributing-packages-using-setuptools.rst:349
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more information, see the :doc:`Development Mode "
"<setuptools:userguide/development_mode>` section of the :ref:`setuptools` "
"docs."
msgstr ""
"மேலும் தகவலுக்கு,: DOC: `மேம்பாட்டு முறை <செட்டப்டூல்ச்: "
"userguide/development_mode>` பிரிவு: ref: `setuptools` டாக்சைப் பார்க்கவும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:356
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Packaging your project"
msgstr "உங்கள் திட்டத்தை பேக்கேசிங் செய்தல்"

#: ../source/guides/distributing-packages-using-setuptools.rst:358
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To have your project installable from a :term:`Package Index` like "
":term:`PyPI <Python Package Index (PyPI)>`, you'll need to create a "
":term:`Distribution <Distribution Package>` (aka \":term:`Package "
"<Distribution Package>`\") for your project."
msgstr ""
"உங்கள் திட்டத்தை ஒரு: கால: `தொகுப்பு குறியீட்டு` போன்றவற்றிலிருந்து நிறுவ "
"முடியும்: கால:` பைபி <பைதான் தொகுப்பு குறியீட்டு (பைபி)> `, நீங்கள் ஒரு: "
"காலத்தை உருவாக்க வேண்டும்:` விநியோக <விநியோக தொகுப்பு> `(அக்கா\" : கால: "
"`தொகுப்பு <விநியோக தொகுப்பு>` \") உங்கள் திட்டத்திற்கு."

#: ../source/guides/distributing-packages-using-setuptools.rst:363
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Before you can build wheels and sdists for your project, you'll need to "
"install the ``build`` package:"
msgstr ""
"உங்கள் திட்டத்திற்காக சக்கரங்கள் மற்றும் SDIST களை உருவாக்குவதற்கு முன், "
"நீங்கள் `` பில்ட்`` தொகுப்பை நிறுவ வேண்டும்:"

#: ../source/guides/distributing-packages-using-setuptools.rst:380
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source distributions"
msgstr "மூல வழங்கல்"

#: ../source/guides/distributing-packages-using-setuptools.rst:382
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Minimally, you should create a :term:`Source Distribution <Source "
"Distribution (or \"sdist\")>`:"
msgstr ""
"குறைந்தபட்சமாக, நீங்கள் ஒரு: காலத்தை உருவாக்க வேண்டும்: `மூல வழங்கல் <மூல "
"வழங்கல் (அல்லது\" SDIST \")>`:"

#: ../source/guides/distributing-packages-using-setuptools.rst:398
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A \"source distribution\" is unbuilt (i.e. it's not a :term:`Built "
"Distribution`), and requires a build step when installed by pip.  Even if "
"the distribution is pure Python (i.e. contains no extensions), it still "
"involves a build step to build out the installation metadata from "
":file:`setup.py` and/or :file:`setup.cfg`."
msgstr ""
"ஒரு \"மூல வழங்கல்\" கட்டமைக்கப்படாதது (அதாவது இது ஒரு: கால: `கட்டப்பட்ட "
"விநியோகம்`), மேலும் பிஐபி நிறுவும் போது ஒரு கட்டம் படி தேவைப்படுகிறது. "
"வழங்கல் தூய பைத்தான் என்றாலும் (அதாவது நீட்டிப்புகள் எதுவும் இல்லை), நிறுவல்"
" மெட்டாடேட்டாவை உருவாக்குவதற்கான கட்டமைப்பை இது இன்னும் உள்ளடக்கியது: "
"கோப்பு: `setup.py` மற்றும்/அல்லது: கோப்பு:` setup.cfg`."

#: ../source/guides/distributing-packages-using-setuptools.rst:406
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wheels"
msgstr "சக்கரங்கள்"

#: ../source/guides/distributing-packages-using-setuptools.rst:408
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You should also create a wheel for your project. A wheel is a :term:`built "
"package <Built Distribution>` that can be installed without needing to go "
"through the \"build\" process. Installing wheels is substantially faster for"
" the end user than installing from a source distribution."
msgstr ""
"உங்கள் திட்டத்திற்கு ஒரு சக்கரத்தையும் உருவாக்க வேண்டும். ஒரு சக்கரம் ஒரு: "
"சொல்: `கட்டப்பட்ட தொகுப்பு <கட்டப்பட்ட விநியோகம்>` இது \"உருவாக்க\" "
"செயல்முறையின் வழியாக செல்ல வேண்டிய அவசியமின்றி நிறுவப்படலாம். மூல "
"விநியோகத்திலிருந்து நிறுவுவதை விட சக்கரங்களை நிறுவுவது இறுதி பயனருக்கு "
"கணிசமாக வேகமாக இருக்கும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:413
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your project is pure Python then you'll be creating a :ref:`\"Pure Python"
" Wheel\" (see section below) <Pure Python Wheels>`."
msgstr ""
"உங்கள் திட்டம் தூய பைதான் என்றால், நீங்கள் ஒரு: ref: `\" தூய பைதான் சக்கரம் "
"\"(கீழே உள்ள பகுதியைக் காண்க) <தூய பைதான் சக்கரங்கள்>` உருவாக்குவீர்கள்."

#: ../source/guides/distributing-packages-using-setuptools.rst:416
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your project contains compiled extensions, then you'll be creating what's"
" called a :ref:`*Platform Wheel* (see section below) <Platform Wheels>`."
msgstr ""
"உங்கள் திட்டத்தில் தொகுக்கப்பட்ட நீட்டிப்புகள் இருந்தால், நீங்கள் A: ref: `*"
" இயங்குதள சக்கரம்* (கீழே உள்ள பகுதியைப் பார்க்கவும்) <இயங்குதள சக்கரங்கள்>` "
"என்று அழைக்கப்படுவதை உருவாக்குவீர்கள்."

#: ../source/guides/distributing-packages-using-setuptools.rst:419
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your project also supports Python 2 *and* contains no C extensions, then "
"you should create what's called a *Universal Wheel* by adding the following "
"to your :file:`setup.cfg` file:"
msgstr ""
"உங்கள் திட்டம் பைதான் 2 * ஐ ஆதரிக்கிறது மற்றும் * சி நீட்டிப்புகளைக் "
"கொண்டிருக்கவில்லை என்றால், உங்கள்: கோப்பு: `setup.cfg` கோப்பு: "
"பின்வருவனவற்றைச் சேர்ப்பதன் மூலம் * யுனிவர்சல் வீல் * என்று அழைக்கப்படுவதை "
"உருவாக்க வேண்டும்:"

#: ../source/guides/distributing-packages-using-setuptools.rst:428
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Only use this setting if your project does not have any C extensions *and* "
"supports Python 2 and 3."
msgstr ""
"உங்கள் திட்டத்திற்கு சி நீட்டிப்புகள் இல்லை என்றால் மட்டுமே இந்த அமைப்பைப் "
"பயன்படுத்தவும் * மற்றும் * பைதான் 2 மற்றும் 3 ஐ ஆதரிக்கிறது."

#: ../source/guides/distributing-packages-using-setuptools.rst:435
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pure Python Wheels"
msgstr "தூய பைதான் சக்கரங்கள்"

#: ../source/guides/distributing-packages-using-setuptools.rst:437
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"*Pure Python Wheels* contain no compiled extensions, and therefore only "
"require a single Python wheel."
msgstr ""
"* தூய பைதான் சக்கரங்கள்* தொகுக்கப்பட்ட நீட்டிப்புகளைக் கொண்டிருக்கவில்லை, "
"எனவே ஒரு பைதான் சக்கரம் மட்டுமே தேவைப்படுகிறது."

#: ../source/guides/distributing-packages-using-setuptools.rst:440
#: ../source/guides/distributing-packages-using-setuptools.rst:469
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To build the wheel:"
msgstr "சக்கரத்தை உருவாக்க:"

#: ../source/guides/distributing-packages-using-setuptools.rst:454
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``wheel`` package will detect that the code is pure Python, and build a "
"wheel that's named such that it's usable on any Python 3 installation.  For "
"details on the naming of wheel files, see :pep:`425`."
msgstr ""
"`` சக்கரம்`` தொகுப்பு குறியீடு தூய பைதான் என்பதைக் கண்டறிந்து, எந்த பைதான் 3"
" நிறுவலிலும் பயன்படுத்தக்கூடியதாக பெயரிடப்பட்ட ஒரு சக்கரத்தை உருவாக்குகிறது."
" சக்கர கோப்புகளின் பெயரிடுதல் குறித்த விவரங்களுக்கு, காண்க: PEP: `425`."

#: ../source/guides/distributing-packages-using-setuptools.rst:458
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you run ``build`` without ``--wheel`` or ``--sdist``, it will build both "
"files for you; this is useful when you don't need multiple wheels."
msgstr ""
"``-வீல்` அல்லது ``--ச்டிச்ட்` இல்லாமல் `` பில்ட்`` ஐ இயக்கினால், அது "
"உங்களுக்காக இரண்டு கோப்புகளையும் உருவாக்கும்; உங்களுக்கு பல சக்கரங்கள் "
"தேவையில்லை போது இது பயனுள்ளதாக இருக்கும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:464
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Platform Wheels"
msgstr "இயங்குதள சக்கரங்கள்"

#: ../source/guides/distributing-packages-using-setuptools.rst:466
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"*Platform Wheels* are wheels that are specific to a certain platform like "
"Linux, macOS, or Windows, usually due to containing compiled extensions."
msgstr ""
"* இயங்குதள சக்கரங்கள்* என்பது லினக்ச், மேகோச் அல்லது சாளரங்கள் போன்ற ஒரு "
"குறிப்பிட்ட தளத்திற்கு குறிப்பிட்ட சக்கரங்கள், பொதுவாக தொகுக்கப்பட்ட "
"நீட்டிப்புகளைக் கொண்டிருப்பதால்."

#: ../source/guides/distributing-packages-using-setuptools.rst:484
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``wheel`` package will detect that the code is not pure Python, and "
"build a wheel that's named such that it's only usable on the platform that "
"it was built on. For details on the naming of wheel files, see :pep:`425`."
msgstr ""
"`` சக்கரம்`` தொகுப்பு குறியீடு தூய பைதான் அல்ல என்பதைக் கண்டறிந்து, அது "
"கட்டப்பட்ட மேடையில் மட்டுமே பயன்படுத்தக்கூடியது என்று பெயரிடப்பட்ட ஒரு "
"சக்கரத்தை உருவாக்குங்கள். சக்கர கோப்புகளின் பெயரிடுதல் குறித்த "
"விவரங்களுக்கு, காண்க: PEP: `425`."

#: ../source/guides/distributing-packages-using-setuptools.rst:490
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":term:`PyPI <Python Package Index (PyPI)>` currently supports uploads of "
"platform wheels for Windows, macOS, and the multi-distro ``manylinux*`` ABI."
" Details of the latter are defined in :pep:`513`."
msgstr ". பிந்தைய விவரங்கள் வரையறுக்கப்பட்டுள்ளன: PEP: `513`."

#: ../source/guides/distributing-packages-using-setuptools.rst:498
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Uploading your Project to PyPI"
msgstr "உங்கள் திட்டத்தை PYPI இல் பதிவேற்றுகிறது"

#: ../source/guides/distributing-packages-using-setuptools.rst:500
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When you ran the command to create your distribution, a new directory "
"``dist/`` was created under your project's root directory. That's where "
"you'll find your distribution file(s) to upload."
msgstr ""
"உங்கள் விநியோகத்தை உருவாக்க நீங்கள் கட்டளையை இயக்கும்போது, ​​உங்கள் "
"திட்டத்தின் ரூட் கோப்பகத்தின் கீழ் `` DIST/`` ஒரு புதிய அடைவு "
"உருவாக்கப்பட்டது. பதிவேற்ற உங்கள் விநியோக கோப்பு (களை) காண்பீர்கள்."

#: ../source/guides/distributing-packages-using-setuptools.rst:504
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These files are only created when you run the command to create your "
"distribution. This means that any time you change the source of your project"
" or the configuration in your :file:`setup.py` file, you will need to "
"rebuild these files again before you can distribute the changes to PyPI."
msgstr ""
"உங்கள் விநியோகத்தை உருவாக்க கட்டளையை இயக்கும்போது மட்டுமே இந்த கோப்புகள் "
"உருவாக்கப்படுகின்றன. இதன் பொருள் என்னவென்றால், உங்கள் திட்டத்தின் மூலத்தையோ "
"அல்லது உங்கள்: கோப்பு: `setup.py` கோப்பிலோ எந்த நேரத்திலும் நீங்கள் "
"மாற்றும்போது, ​​நீங்கள் பைபிக்கு மாற்றங்களை விநியோகிப்பதற்கு முன்பு இந்த "
"கோப்புகளை மீண்டும் கட்டியெழுப்ப வேண்டும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:509
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Before releasing on main PyPI repo, you might prefer training with the `PyPI"
" test site <https://test.pypi.org/>`_ which is cleaned on a semi regular "
"basis. See :ref:`using-test-pypi` on how to setup your configuration in "
"order to use it."
msgstr ""
"மெயின் பைபி ரெப்போவில் வெளியிடுவதற்கு முன், நீங்கள் `PYPI சோதனை தளத்துடன் "
"பயிற்சியை விரும்பலாம் <https://test.pypi.org/>` _ இது அரை வழக்கமான "
"அடிப்படையில் தூய்மை செய்யப்படுகிறது. காண்க: குறிப்பு: `உங்கள் உள்ளமைவைப் "
"பயன்படுத்துவதற்காக அதை எவ்வாறு அமைப்பது என்பது குறித்து-டெச்ட்-பைபியைப் "
"பயன்படுத்துதல்."

#: ../source/guides/distributing-packages-using-setuptools.rst:514
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In other resources you may encounter references to using ``python setup.py "
"register`` and ``python setup.py upload``. These methods of registering and "
"uploading a package are **strongly discouraged** as it may use a plaintext "
"HTTP or unverified HTTPS connection on some Python versions, allowing your "
"username and password to be intercepted during transmission."
msgstr ""
"பிற ஆதாரங்களில் `` பைதான் செட்அப். ஒரு தொகுப்பை பதிவுசெய்தல் மற்றும் "
"பதிவேற்றுவதற்கான இந்த முறைகள் ** சில பைதான் பதிப்புகளில் ஒரு எளிய உரை HTTP "
"அல்லது சரிபார்க்கப்படாத HTTPS இணைப்பைப் பயன்படுத்துவதால், உங்கள் பயனர்பெயர் "
"மற்றும் கடவுச்சொல்லை பரிமாற்றத்தின் போது தடுத்து நிறுத்த அனுமதிக்கிறது."

#: ../source/guides/distributing-packages-using-setuptools.rst:520
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The reStructuredText parser used on PyPI is **not** Sphinx! Furthermore, to "
"ensure safety of all users, certain kinds of URLs and directives are "
"forbidden or stripped out (e.g., the ``.. raw::`` directive). **Before** "
"trying to upload your distribution, you should check to see if your brief / "
"long descriptions provided in :file:`setup.py` are valid.  You can do this "
"by running :std:doc:`twine check <index>` on your package files:"
msgstr ""
"PYPI இல் பயன்படுத்தப்படும் மறுசீரமைப்பு டெக்ச்ட் பாகுபடுத்தி ** அல்ல ** "
"sphinx! மேலும், அனைத்து பயனர்களின் பாதுகாப்பையும் உறுதிப்படுத்த, சில வகையான "
"முகவரி கள் மற்றும் வழிமுறைகள் தடைசெய்யப்பட்டுள்ளன அல்லது அகற்றப்படுகின்றன "
"(எ.கா., `` .. மூல :: `` உத்தரவு). ** முன் ** உங்கள் விநியோகத்தை பதிவேற்ற "
"முயற்சிக்கும் முன், உங்கள் சுருக்கமான / நீண்ட விளக்கங்கள் வழங்கப்பட்டதா "
"என்பதை நீங்கள் சரிபார்க்க வேண்டும்: கோப்பு: `setup.py` செல்லுபடியாகும். "
"இயங்குவதன் மூலம் இதைச் செய்யலாம்: எச்.டி.டி: டிஓசி: `உங்கள் தொகுப்பு "
"கோப்புகளில்` ட்வைன் செக் <குறியீட்டு> `:"

#: ../source/guides/distributing-packages-using-setuptools.rst:533
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Create an account"
msgstr "ஒரு கணக்கை உருவாக்கவும்"

#: ../source/guides/distributing-packages-using-setuptools.rst:535
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"First, you need a :term:`PyPI <Python Package Index (PyPI)>` user account. "
"You can create an account `using the form on the PyPI website "
"<https://pypi.org/account/register/>`_."
msgstr ""
"முதலில், உங்களுக்கு ஒரு: சொல் தேவை: `பைபி <பைதான் தொகுப்பு அட்டவணை (பைபி)>` "
"பயனர் கணக்கு. PYPI வலைத்தளமான <https://pypi.org/account/register/> _ _ இல் "
"படிவத்தைப் பயன்படுத்தி ஒரு கணக்கை உருவாக்கலாம்."

#: ../source/guides/distributing-packages-using-setuptools.rst:539
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now you'll create a PyPI `API token`_ so you will be able to securely upload"
" your project."
msgstr ""
"இப்போது நீங்கள் ஒரு பைபி `ஏபிஐ டோக்கன்`_ ஐ உருவாக்குவீர்கள், எனவே உங்கள் "
"திட்டத்தை பாதுகாப்பாக பதிவேற்ற முடியும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:542
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Go to https://pypi.org/manage/account/#api-tokens and create a new `API "
"token`_; don't limit its scope to a particular project, since you are "
"creating a new project."
msgstr ""
"Https://pypi.org/manage/account/#api-tokens க்குச் சென்று புதிய `API "
"டோக்கன்`_ ஐ உருவாக்கவும்; நீங்கள் ஒரு புதிய திட்டத்தை உருவாக்குவதால், ஒரு "
"குறிப்பிட்ட திட்டத்திற்கு அதன் நோக்கத்தை மட்டுப்படுத்த வேண்டாம்."

#: ../source/guides/distributing-packages-using-setuptools.rst:546
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Don't close the page until you have copied and saved the token — you won't"
" see that token again.**"
msgstr ""
"** நீங்கள் கிள்ளாக்கை நகலெடுத்து சேமிக்கும் வரை பக்கத்தை மூட வேண்டாம் - அந்த"
" கிள்ளாக்கை நீங்கள் மீண்டும் பார்க்க மாட்டீர்கள். **"

#: ../source/guides/distributing-packages-using-setuptools.rst:549
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To avoid having to copy and paste the token every time you upload, you can "
"create a :file:`$HOME/.pypirc` file:"
msgstr ""
"நீங்கள் பதிவேற்றும் ஒவ்வொரு முறையும் கிள்ளாக்கை நகலெடுத்து ஒட்ட வேண்டும் "
"என்பதைத் தவிர்க்க, நீங்கள் ஒரு: கோப்பு: `$ home/.pypirc` கோப்பு:"

#: ../source/guides/distributing-packages-using-setuptools.rst:558
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**Be aware that this stores your token in plaintext.**"
msgstr ""
"** இது உங்கள் கிள்ளாக்கை எளிய உரையை சேமிக்கிறது என்பதை அறிந்து கொள்ளுங்கள். "
"**"

#: ../source/guides/distributing-packages-using-setuptools.rst:560
#: ../source/guides/migrating-to-pypi-org.rst:74
#: ../source/guides/migrating-to-pypi-org.rst:113
#: ../source/guides/using-testpypi.rst:84
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more details, see the :ref:`specification <pypirc>` for :file:`.pypirc`."
msgstr ""
"மேலும் விவரங்களுக்கு, இதைக் காண்க: ref: `விவரக்குறிப்பு <Pypirc>` க்கு: "
"கோப்பு: `.பைர்க்`."

#: ../source/guides/distributing-packages-using-setuptools.rst:566
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Upload your distributions"
msgstr "உங்கள் விநியோகங்களை பதிவேற்றவும்"

#: ../source/guides/distributing-packages-using-setuptools.rst:568
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Once you have an account you can upload your distributions to :term:`PyPI "
"<Python Package Index (PyPI)>` using :ref:`twine`."
msgstr ""
"உங்களிடம் ஒரு கணக்கு கிடைத்ததும் உங்கள் விநியோகங்களை பதிவேற்றலாம்: கால: "
"`பைபி <பைதான் தொகுப்பு குறியீட்டு (பைபி)>` பயன்படுத்துதல்: குறிப்பு: "
"`ட்வைன்`."

#: ../source/guides/distributing-packages-using-setuptools.rst:571
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The process for uploading a release is the same regardless of whether or not"
" the project already exists on PyPI - if it doesn't exist yet, it will be "
"automatically created when the first release is uploaded."
msgstr ""
"ஒரு வெளியீட்டைப் பதிவேற்றுவதற்கான செயல்முறை PYPI இல் ஏற்கனவே உள்ளதா இல்லையா "
"என்பதைப் பொருட்படுத்தாமல் - அது இன்னும் இல்லை என்றால், முதல் வெளியீடு "
"பதிவேற்றப்படும்போது அது தானாகவே உருவாக்கப்படும்."

#: ../source/guides/distributing-packages-using-setuptools.rst:575
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For the second and subsequent releases, PyPI only requires that the version "
"number of the new release differ from any previous releases."
msgstr ""
"இரண்டாவது மற்றும் அடுத்தடுத்த வெளியீடுகளுக்கு, புதிய வெளியீட்டின் பதிப்பு "
"எண் முந்தைய வெளியீடுகளிலிருந்து வேறுபட வேண்டும் என்று PYPI தேவைப்படுகிறது."

#: ../source/guides/distributing-packages-using-setuptools.rst:582
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can see if your package has successfully uploaded by navigating to the "
"URL ``https://pypi.org/project/<sampleproject>`` where ``sampleproject`` is "
"the name of your project that you uploaded. It may take a minute or two for "
"your project to appear on the site."
msgstr ""
"`` Https://pypi.org/project/ <amphalproject> `` `` `shampeproject`` என்பது "
"நீங்கள் பதிவேற்றிய உங்கள் திட்டத்தின் பெயர். உங்கள் திட்டம் தளத்தில் "
"தோன்றுவதற்கு ஒரு மணித்துளி அல்லது இரண்டு நேரம் ஆகலாம்."

#: ../source/guides/distributing-packages-using-setuptools.rst:589
#: ../source/tutorials/installing-packages.rst:670
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Depending on your platform, this may require root or Administrator access. "
":ref:`pip` is currently considering changing this by `making user installs "
"the default behavior <https://github.com/pypa/pip/issues/1668>`_."
msgstr ""
"உங்கள் தளத்தைப் பொறுத்து, இதற்கு ரூட் அல்லது நிர்வாகி அணுகல் தேவைப்படலாம். ."

#: ../source/guides/dropping-older-python-versions.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dropping support for older Python versions"
msgstr "பழைய பைதான் பதிப்புகளுக்கான ஆதரவை கைவிடுதல்"

#: ../source/guides/dropping-older-python-versions.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ability to drop support for older Python versions is enabled by the "
"standard :ref:`core-metadata` 1.2 specification via the :ref:`\"Requires-"
"Python\" <core-metadata-requires-python>` attribute."
msgstr ""
"பழைய பைதான் பதிப்புகளுக்கான ஆதரவை கைவிடுவதற்கான திறன் தரநிலையால் "
"இயக்கப்பட்டது: குறிப்பு: `கோர்-மெட்டாடேட்டா` 1.2 விவரக்குறிப்பு வழியாக: "
"ref:` \"-பைதான் தேவை\" <கோர்-மெட்டாடேட்டா-வேண்டுகோள்-பைதான்> `பண்புக்கூறு."

#: ../source/guides/dropping-older-python-versions.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Metadata 1.2+ installers, such as Pip, will adhere to this specification by "
"matching the current Python runtime and comparing it with the required "
"version in the package metadata. If they do not match, it will attempt to "
"install the last package distribution that supported that Python runtime."
msgstr ""
"PIP போன்ற மேனிலை தரவு 1.2+ நிறுவிகள், தற்போதைய பைதான் இயக்க நேரத்துடன் "
"பொருந்துவதன் மூலமும், தொகுப்பு மெட்டாடேட்டாவில் தேவையான பதிப்போடு "
"ஒப்பிடுவதன் மூலமும் இந்த விவரக்குறிப்பைக் கடைப்பிடிக்கும். அவை பொருந்தவில்லை"
" என்றால், அந்த பைதான் இயக்க நேரத்தை ஆதரிக்கும் கடைசி தொகுப்பு விநியோகத்தை "
"நிறுவ முயற்சிக்கும்."

#: ../source/guides/dropping-older-python-versions.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This mechanism can be used to drop support for older Python versions, by "
"amending the ``Requires-Python`` attribute in the package metadata."
msgstr ""
"பழைய பைதான் பதிப்புகளுக்கான ஆதரவை கைவிட இந்த வழிமுறை பயன்படுத்தப்படலாம், "
"தொகுப்பு மெட்டாடேட்டாவில் ``-பைதான் `பண்புக்கூறு தேவைகள்."

#: ../source/guides/dropping-older-python-versions.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requirements"
msgstr "தேவைகள்"

#: ../source/guides/dropping-older-python-versions.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This workflow requires that the user installing the package uses Pip [#]_, "
"or another installer that supports the Metadata 1.2 specification."
msgstr ""
"தொகுப்பை நிறுவும் பயனர் பிஐபி [#] _ அல்லது மேனிலை தரவு 1.2 விவரக்குறிப்பை "
"ஆதரிக்கும் மற்றொரு நிறுவியைப் பயன்படுத்த வேண்டும்."

#: ../source/guides/dropping-older-python-versions.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dealing with the universal wheels"
msgstr "உலகளாவிய சக்கரங்களுடன் கையாள்வது"

#: ../source/guides/dropping-older-python-versions.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Traditionally, :ref:`setuptools` projects providing Python code that is "
"semantically compatible with both Python 2 and Python 3, produce "
":term:`wheels <Wheel>` that have a ``py2.py3`` tag in their names. When "
"dropping support for Python 2, it is important not to forget to change this "
"tag to just ``py3``. It is often configured within :file:`setup.cfg` under "
"the ``[bdist_wheel]`` section by setting ``universal = 1``."
msgstr ""
"பாரம்பரியமாக, குறிப்பு: பைதான் 2 மற்றும் பைதான் 3 ஆகிய இரண்டிலும் "
"சொற்பொருளாக இணக்கமான பைதான் குறியீட்டை வழங்கும் `செட்ப்டூல்ச்` திட்டங்கள், "
"உற்பத்தி: கால: `சக்கரங்கள் <சக்கர>` அவற்றின் பெயர்களில் `` py2.py3`` "
"குறிச்சொல்லைக் கொண்டுள்ளன. பைதான் 2 க்கான ஆதரவை கைவிடும்போது, ​​இந்த "
"குறிச்சொல்லை `` py3`` ஆக மாற்ற மறக்காமல் இருப்பது முதன்மை. இது பெரும்பாலும் "
"உள்ளே கட்டமைக்கப்பட்டுள்ளது: கோப்பு: `` [bdist_wheel] `` பிரிவின் கீழ் `` "
"`யுனிவர்சல் = 1``."

#: ../source/guides/dropping-older-python-versions.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you use this method, either remove this option or section, or explicitly "
"set ``universal`` to ``0``:"
msgstr ""
"இந்த முறையைப் பயன்படுத்தினால், இந்த விருப்பம் அல்லது பகுதியை அகற்று, அல்லது "
"வெளிப்படையாக `` யுனிவர்சல்`` ஐ `0`` என அமைக்கவும்:"

#: ../source/guides/dropping-older-python-versions.rst:41
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Regarding :ref:`deprecated <setup-py-deprecated>` direct ``setup.py`` "
"invocations, passing the ``--universal`` flag on the command line could "
"override this setting."
msgstr ""
"தொடர்புடையது: குறிப்பு: `நீக்கப்பட்ட <setup-py-deprecated>` நேரடி `` "
"setup.py`` அழைப்பிதழ்கள், கட்டளை வரியில் `` --niversal`` கொடியைக் கடந்து "
"செல்வது இந்த அமைப்பை மீறக்கூடும்."

#: ../source/guides/dropping-older-python-versions.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Defining the Python version required"
msgstr "தேவையான பைதான் பதிப்பை வரையறுத்தல்"

#: ../source/guides/dropping-older-python-versions.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "1. Install twine"
msgstr "1. கயிறு நிறுவவும்"

#: ../source/guides/dropping-older-python-versions.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Ensure that you have twine available at its latest version. Steps:"
msgstr ""
"அதன் அண்மைக் கால பதிப்பில் உங்களிடம் கயிறு கிடைக்கிறது என்பதை "
"உறுதிப்படுத்தவும். படிகள்:"

#: ../source/guides/dropping-older-python-versions.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2. Specify the version ranges for supported Python distributions"
msgstr ""
"2. ஆதரிக்கப்பட்ட பைதான் விநியோகங்களுக்கான பதிப்பு வரம்புகளைக் குறிப்பிடவும்"

#: ../source/guides/dropping-older-python-versions.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Set the version ranges declaring which Python distributions are supported "
"within your project's :file:`pyproject.toml`. The :ref:`requires-python` "
"configuration field corresponds to the :ref:`Requires-Python <core-metadata-"
"requires-python>` core metadata field:"
msgstr ""
"உங்கள் திட்டத்திற்குள் எந்த பைதான் விநியோகங்கள் ஆதரிக்கப்படுகின்றன என்பதை "
"அறிவிக்கும் பதிப்பு வரம்புகளை அமைக்கவும்: கோப்பு: `pyproject.toml`. தி: "
"ரெஃப்: `-பைதான் தேவை. உள்ளமைவு புலம் இதற்கு ஒத்திருக்கிறது: ref:`-பைதான் "
"தேவை <கோர்-மெட்டாடேட்டா-வேண்டுகோள்-பைதான்> `கோர் மேனிலை தரவு புலம்:"

#: ../source/guides/dropping-older-python-versions.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can specify version ranges and exclusion rules (complying with the "
":ref:`version-specifiers` specification), such as at least Python 3.9. Or, "
"at least Python 3.7 and beyond, skipping the 3.7.0 and 3.7.1 point releases:"
msgstr ""
"குறைந்தபட்சம் பைதான் 3.9 போன்ற பதிப்பு வரம்புகள் மற்றும் விலக்கு விதிகளை "
"நீங்கள் குறிப்பிடலாம் (குறிப்பு: re: `பதிப்பு-விவரிப்பாளர்கள்` "
"விவரக்குறிப்பு). அல்லது, குறைந்தபட்சம் பைதான் 3.7 மற்றும் அதற்கு அப்பால், "
"3.7.0 மற்றும் 3.7.1 புள்ளி வெளியீடுகளைத் தவிர்த்து:"

#: ../source/guides/dropping-older-python-versions.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If using the :ref:`setuptools` build backend, consult the `dependency-"
"management`_ documentation for more options."
msgstr ""
"பயன்படுத்தினால்: ref: `setuptools` பின்தளத்தில் உருவாக்குங்கள், மேலும் "
"விருப்பங்களுக்கு` சார்பு-மேலாண்மை`_ ஆவணங்களை அணுகவும்."

#: ../source/guides/dropping-older-python-versions.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Avoid adding upper bounds to the version ranges, e. g. ``\">= 3.8, < "
"3.10\"``. Doing so can cause different errors and version conflicts. See the"
" `discourse-discussion`_ for more information."
msgstr ""
"பதிப்பு வரம்புகளுக்கு மேல் எல்லையைச் சேர்ப்பதைத் தவிர்க்கவும், இ. g. `` \"> "
"= 3.8, <3.10\" ``. அவ்வாறு செய்வது வெவ்வேறு பிழைகள் மற்றும் பதிப்பு மோதல்களை"
" ஏற்படுத்தும். மேலும் தகவலுக்கு `சொற்பொழிவு-விவாதத்தை`_ ஐப் பார்க்கவும்."

#: ../source/guides/dropping-older-python-versions.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "3. Validating the Metadata before publishing"
msgstr "3. வெளியீட்டிற்கு முன் மெட்டாடேட்டாவை சரிபார்க்கிறது"

#: ../source/guides/dropping-older-python-versions.rst:98
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Within a Python source package (the zip or the tar-gz file you download) is "
"a text file called PKG-INFO."
msgstr ""
"பைதான் மூல தொகுப்புக்குள் (நீங்கள் பதிவிறக்கும் சிப் அல்லது தார்-சிஇசட் "
"கோப்பு) என்பது பி.கே.சி-இன்ஃபோ எனப்படும் உரை கோப்பு."

#: ../source/guides/dropping-older-python-versions.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This file is generated by the :term:`build backend <Build Backend>` when it "
"generates the source package. The file contains a set of keys and values, "
"the list of keys is part of the PyPA standard metadata format."
msgstr ""
"இந்த கோப்பு உருவாக்கப்படுகிறது: கால: `பின்தளத்தில் உருவாக்கு <பின்தளத்தில் "
"உருவாக்கு>` இது மூல தொகுப்பை உருவாக்கும் போது. கோப்பில் விசைகள் மற்றும் "
"மதிப்புகள் உள்ளன, விசைகளின் பட்டியல் PYPA நிலையான மேனிலை தரவு வடிவமைப்பின் "
"ஒரு பகுதியாகும்."

#: ../source/guides/dropping-older-python-versions.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "You can see the contents of the generated file like this:"
msgstr "இது போன்ற உருவாக்கப்பட்ட கோப்பின் உள்ளடக்கங்களை நீங்கள் காணலாம்:"

#: ../source/guides/dropping-older-python-versions.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Validate that the following is in place, before publishing the package:"
msgstr ""
"தொகுப்பை வெளியிடுவதற்கு முன்பு பின்வருபவை உள்ளன என்பதை சரிபார்க்கவும்:"

#: ../source/guides/dropping-older-python-versions.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you have upgraded correctly, the ``Metadata-Version`` value should be 1.2"
" or higher."
msgstr ""
"நீங்கள் சரியாக மேம்படுத்தப்பட்டிருந்தால், `` மெட்டாடேட்டா-பதிப்பு`` மதிப்பு "
"1.2 அல்லது அதற்கு மேற்பட்டதாக இருக்க வேண்டும்."

#: ../source/guides/dropping-older-python-versions.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``Requires-Python`` field is set and matches your specification in the "
"configuration file."
msgstr ""
"`` தேவைப்படுகிறது-பைதான்` `புலம் அமைக்கப்பட்டு, உங்கள் விவரக்குறிப்பை "
"உள்ளமைவு கோப்பில் பொருத்துகிறது."

#: ../source/guides/dropping-older-python-versions.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "4. Publishing the package"
msgstr "4. தொகுப்பை வெளியிடுதல்"

#: ../source/guides/dropping-older-python-versions.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Proceed as suggested in :ref:`Uploading your Project to PyPI`."
msgstr ""
"பரிந்துரைத்தபடி தொடரவும்: ref: `உங்கள் திட்டத்தை பைபிக்கு பதிவேற்றுதல்`."

#: ../source/guides/dropping-older-python-versions.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dropping a Python version"
msgstr "பைதான் பதிப்பை கைவிடுதல்"

#: ../source/guides/dropping-older-python-versions.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In principle, at least metadata support for Python versions should be kept "
"as long as possible, because once that has been dropped, people still "
"depending on a version will be forced to downgrade. If however supporting a "
"specific version becomes a blocker for a new feature or other issues occur, "
"the metadata ``Requires-Python`` should be amended. Of course this also "
"depends on whether the project needs to be stable and well-covered for a "
"wider range of users."
msgstr ""
"கொள்கையளவில், பைதான் பதிப்புகளுக்கான குறைந்தபட்சம் மேனிலை தரவு ஆதரவை "
"முடிந்தவரை வைக்க வேண்டும், ஏனென்றால் அது கைவிடப்பட்டவுடன், ஒரு பதிப்பைப் "
"பொறுத்து மக்கள் இன்னும் தரமிறக்க வேண்டிய கட்டாயத்தில் இருப்பார்கள். "
"இருப்பினும் ஒரு குறிப்பிட்ட பதிப்பை ஆதரிப்பது ஒரு புதிய அம்சத்திற்கான "
"தடுப்பாளராக மாறினால் அல்லது பிற சிக்கல்கள் ஏற்பட்டால், மேனிலை தரவு `` "
"தேவைப்படுகிறது-பைதான்` `திருத்தம் செய்யப்பட வேண்டும். நிச்சயமாக இது ஒரு "
"பரந்த அளவிலான பயனர்களுக்கு இந்த திட்டம் நிலையானதாகவும் நன்கு "
"மூடப்பட்டதாகவும் இருக்க வேண்டுமா என்பதையும் பொறுத்தது."

#: ../source/guides/dropping-older-python-versions.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Each version compatibility change should have its own release."
msgstr ""
"ஒவ்வொரு பதிப்பு பொருந்தக்கூடிய மாற்றமும் அதன் சொந்த வெளியீட்டைக் கொண்டிருக்க"
" வேண்டும்."

#: ../source/guides/dropping-older-python-versions.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When dropping a Python version, it might also be rewarding to upgrade the "
"project's code syntax generally, apart from updating the versions used in "
"visible places (like the testing environment). Tools like pyupgrade_ or "
"`ruff <https://docs.astral.sh/ruff/linter/>`_ can automate some of this "
"work."
msgstr ""
"பைதான் பதிப்பைக் கைவிடும்போது, ​​புலப்படும் இடங்களில் (சோதனைச் சூழல் "
"போன்றவை) பயன்படுத்தப்படும் பதிப்புகளைப் புதுப்பிப்பதைத் தவிர, திட்டத்தின் "
"குறியீடு தொடரியல் பொதுவாக மேம்படுத்தவும் இது பலனளிக்கும். Pyupgrade_ அல்லது "
"`Ruff <https://docs.astral.sh/ruff/linter/> _ _ இந்த வேலைகளில் சிலவற்றை "
"தானியக்கமாக்கலாம்."

#: ../source/guides/dropping-older-python-versions.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Support for the Metadata 1.2 specification has been added in Pip 9.0."
msgstr ""
"மேனிலை தரவு 1.2 விவரக்குறிப்புக்கான உதவி PIP 9.0 இல் சேர்க்கப்பட்டுள்ளது."

#: ../source/guides/hosting-your-own-index.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Hosting your own simple repository"
msgstr "உங்கள் சொந்த எளிய களஞ்சியத்தை புரவலன் செய்தல்"

#: ../source/guides/hosting-your-own-index.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you wish to host your own simple repository [1]_, you can either use a "
"software package like :doc:`devpi <devpi:index>` or you can simply create "
"the proper directory structure and use any web server that can serve static "
"files and generate an autoindex."
msgstr ""
"உங்கள் சொந்த எளிய களஞ்சியத்தை புரவலன் செய்ய விரும்பினால் [1] _, நீங்கள் "
"போன்ற ஒரு மென்பொருள் தொகுப்பைப் பயன்படுத்தலாம்: டாக்: `டெவிபி <டெவிபிஐ: "
"குறியீட்டு>` அல்லது சரியான அடைவு கட்டமைப்பை உருவாக்கி பணி செய்யக்கூடிய எந்த "
"வலை சேவையகத்தையும் பயன்படுத்தலாம் நிலையான கோப்புகள் மற்றும் ஒரு "
"ஆட்டோஇண்டெக்சை உருவாக்குகின்றன."

#: ../source/guides/hosting-your-own-index.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In either case, since you'll be hosting a repository that is likely not in "
"your user's default repositories, you should instruct them in your project's"
" description to configure their installer appropriately. For example with "
"pip:"
msgstr ""
"இரண்டிலும், உங்கள் பயனரின் இயல்புநிலை களஞ்சியங்களில் இல்லாத ஒரு களஞ்சியத்தை "
"நீங்கள் புரவலன் செய்வதால், அவற்றின் நிறுவியை சரியான முறையில் உள்ளமைக்க "
"உங்கள் திட்டத்தின் விளக்கத்தில் அவர்களுக்கு அறிவுறுத்த வேண்டும். உதாரணமாக "
"PIP உடன்:"

#: ../source/guides/hosting-your-own-index.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition, it is **highly** recommended that you serve your repository "
"with valid HTTPS. At this time, the security of your user's installations "
"depends on all repositories using a valid HTTPS setup."
msgstr ""
"கூடுதலாக, செல்லுபடியாகும் HTTPS உடன் உங்கள் களஞ்சியத்தை வழங்க நீங்கள் ** "
"மிகவும் ** பரிந்துரைக்கப்படுகிறது. இந்த நேரத்தில், உங்கள் பயனரின் "
"நிறுவல்களின் பாதுகாப்பு செல்லுபடியாகும் HTTPS அமைப்பைப் பயன்படுத்தி அனைத்து "
"களஞ்சியங்களையும் சார்ந்துள்ளது."

#: ../source/guides/hosting-your-own-index.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "\"Manual\" repository"
msgstr "\"கையேடு\" களஞ்சியம்"

#: ../source/guides/hosting-your-own-index.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The directory layout is fairly simple, within a root directory you need to "
"create a directory for each project. This directory should be the "
":ref:`normalized name <name-normalization>` of the project. Within each of "
"these directories simply place each of the downloadable files. If you have "
"the projects \"Foo\" (with the versions 1.0 and 2.0) and \"bar\" (with the "
"version 0.1) You should end up with a structure that looks like::"
msgstr ""
"அடைவு தளவமைப்பு மிகவும் எளிமையானது, ஒரு ரூட் கோப்பகத்திற்குள் நீங்கள் "
"ஒவ்வொரு திட்டத்திற்கும் ஒரு கோப்பகத்தை உருவாக்க வேண்டும். இந்த அடைவு "
"பின்வருமாறு: ref: `இயல்பாக்கப்பட்ட பெயர் <பெயர்-இயல்பாக்கம்>` திட்டத்தின். "
"இந்த ஒவ்வொரு கோப்பகத்திலும் தரவிறக்கம் செய்யக்கூடிய ஒவ்வொரு கோப்புகளையும் "
"வைக்கவும். உங்களிடம் \"ஃபூ\" (பதிப்புகள் 1.0 மற்றும் 2.0) மற்றும் \"பார்\" "
"(பதிப்பு 0.1 உடன்) திட்டங்கள் இருந்தால், நீங்கள் ஒரு கட்டமைப்போடு "
"முடிவடையும் ::"

#: ../source/guides/hosting-your-own-index.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Once you have this layout, simply configure your webserver to serve the root"
" directory with autoindex enabled. For an example using the built in Web "
"server in `Twisted`_, you would simply run ``twistd -n web --path .`` and "
"then instruct users to add the URL to their installer's configuration."
msgstr ""
"இந்த தளவமைப்பை நீங்கள் பெற்றவுடன், ஆட்டோஇண்டெக்ச் இயக்கப்பட்ட ரூட் "
"கோப்பகத்தை வழங்க உங்கள் வெப்சர்வரை உள்ளமைக்கவும். `ட்விச்டட்`_ இல் உள்ள "
"கட்டமைக்கப்பட்ட வலை சேவையகத்தைப் பயன்படுத்துவதற்கு, நீங்கள்` `ட்விச்ட்ட் "
"-என் வலை -பாதையை இயக்குவீர்கள் .`` பின்னர் பயனர்கள் தங்கள் நிறுவியின் "
"உள்ளமைவில் முகவரி ஐ சேர்க்க அறிவுறுத்துங்கள்."

#: ../source/guides/hosting-your-own-index.rst:57
#: ../source/guides/index-mirrors-and-caches.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Existing projects"
msgstr "தற்போதுள்ள திட்டங்கள்"

#: ../source/guides/hosting-your-own-index.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package upload"
msgstr "தொகுப்பு பதிவேற்றம்"

#: ../source/guides/hosting-your-own-index.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "PyPI fall-through [2]_"
msgstr "பைபி வீழ்ச்சி-த்ரூ [2] _"

#: ../source/guides/hosting-your-own-index.rst:65
#: ../source/guides/index-mirrors-and-caches.rst:56
#: ../source/guides/supporting-windows-using-appveyor.rst:146
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Additional notes"
msgstr "கூடுதல் குறிப்புகள்"

#: ../source/guides/hosting-your-own-index.rst:67
#: ../source/guides/index-mirrors-and-caches.rst:58
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`devpi`"
msgstr ": Ref: `devpi`"

#: ../source/guides/hosting-your-own-index.rst:68
#: ../source/guides/hosting-your-own-index.rst:69
#: ../source/guides/hosting-your-own-index.rst:75
#: ../source/guides/hosting-your-own-index.rst:79
#: ../source/guides/hosting-your-own-index.rst:99
#: ../source/guides/hosting-your-own-index.rst:120
#: ../source/guides/index-mirrors-and-caches.rst:59
#: ../source/guides/index-mirrors-and-caches.rst:60
#: ../source/guides/index-mirrors-and-caches.rst:66
#: ../source/guides/index-mirrors-and-caches.rst:67
#: ../source/guides/index-mirrors-and-caches.rst:74
#: ../source/guides/index-mirrors-and-caches.rst:78
#: ../source/guides/index-mirrors-and-caches.rst:80
#: ../source/guides/index-mirrors-and-caches.rst:85
#: ../source/guides/index-mirrors-and-caches.rst:86
#: ../source/guides/index-mirrors-and-caches.rst:90
#: ../source/guides/index-mirrors-and-caches.rst:92
#: ../source/guides/index-mirrors-and-caches.rst:96
#: ../source/guides/index-mirrors-and-caches.rst:98
#: ../source/guides/index-mirrors-and-caches.rst:102
#: ../source/guides/index-mirrors-and-caches.rst:104
#: ../source/guides/index-mirrors-and-caches.rst:108
#: ../source/guides/index-mirrors-and-caches.rst:110
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "✔"
msgstr "✔"

#: ../source/guides/hosting-your-own-index.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"multiple indexes with inheritance, with syncing, replication, fail-over; "
"mirroring"
msgstr "பரம்பரை கொண்ட பல குறியீடுகள், ஒத்திசைவு, பிரதி, தோல்வி; பிரதிபலிப்பு"

#: ../source/guides/hosting-your-own-index.rst:73
#: ../source/guides/index-mirrors-and-caches.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`simpleindex`"
msgstr ": Ref: `SimpleIndex`"

#: ../source/guides/hosting-your-own-index.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`pypiserver`"
msgstr ": குறிப்பு: `பைபிசெவர்`"

#: ../source/guides/hosting-your-own-index.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`pypiprivate`"
msgstr ": ref: `pypiprivate`"

#: ../source/guides/hosting-your-own-index.rst:88
#: ../source/guides/index-mirrors-and-caches.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`pypicloud`"
msgstr ": Ref: `Pypicloud`"

#: ../source/guides/hosting-your-own-index.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "unmaintained; also cached proxying; authentication, authorisation"
msgstr ""
"மதிப்பிடப்படாதது; தற்காலிகமாக தற்காலிகமாக சேமிக்கப்பட்டது; ஏற்பு, ஏற்பு"

#: ../source/guides/hosting-your-own-index.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`pywharf`"
msgstr ": ref: `pywharf`"

#: ../source/guides/hosting-your-own-index.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "unmaintained; serve files in GitHub"
msgstr "மதிப்பிடப்படாதது; கிதுபில் கோப்புகளை பரிமாறவும்"

#: ../source/guides/hosting-your-own-index.rst:98
#: ../source/guides/index-mirrors-and-caches.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`pulppython`"
msgstr ": சிவப்பு: `கூழ் பைதான்`"

#: ../source/guides/hosting-your-own-index.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "also mirroring, proxying; plugin for Pulp"
msgstr "பிரதிபலிக்கும், ப்ராக்சிங்; கூழ் சொருகி"

#: ../source/guides/hosting-your-own-index.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`pip2pi`"
msgstr ": ref: `Pip2pi`"

#: ../source/guides/hosting-your-own-index.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "also mirroring; manual synchronisation"
msgstr "மேலும் பிரதிபலிக்கும்; கையேடு ஒத்திசைவு"

#: ../source/guides/hosting-your-own-index.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`dumb-pypi`"
msgstr ": குறிப்பு: `டம்ப்-பைபி`"

#: ../source/guides/hosting-your-own-index.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "not a server, but a static file site generator"
msgstr "ஒரு சேவையகம் அல்ல, ஆனால் நிலையான கோப்பு தள செனரேட்டர்"

#: ../source/guides/hosting-your-own-index.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`httpserver`"
msgstr ": குறிப்பு: `httpserver`"

#: ../source/guides/hosting-your-own-index.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "standard-library"
msgstr "நிலையான-நூலகம்"

#: ../source/guides/hosting-your-own-index.rst:118
#: ../source/guides/index-mirrors-and-caches.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Apache <https://httpd.apache.org/>`_"
msgstr "`அப்பாச்சி <https://httpd.apache.org/>` _"

#: ../source/guides/hosting-your-own-index.rst:121
#: ../source/guides/index-mirrors-and-caches.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"using `mod_rewrite "
"<https://httpd.apache.org/docs/current/mod/mod_rewrite.html>`_ and "
"`mod_cache_disk "
"<https://httpd.apache.org/docs/current/mod/mod_cache_disk.html>`_, you can "
"cache requests to package indexes through an Apache server"
msgstr ""
"using `mod_rewrite "
"<https://httpd.apache.org/docs/current/mod/mod_rewrite.html>`_ and "
"`mod_cache_disk "
"<https://httpd.apache.org/docs/current/mod/mod_cache_disk.html> `_, "
"அப்பாச்சி சேவையகம் மூலம் குறியீடுகளை தொகுப்பு குறியீடுகளுக்கு கேச் செய்யலாம்"

#: ../source/guides/hosting-your-own-index.rst:131
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For complete documentation of the simple repository protocol, see "
":ref:`simple repository API <simple-repository-api>`."
msgstr ""
"எளிய களஞ்சிய நெறிமுறையின் முழுமையான ஆவணங்களுக்கு, காண்க: குறிப்பு: `எளிய "
"களஞ்சிய பநிஇ <எளிய-ரோபோசிட்டரி-ஏபிஐ>`."

#: ../source/guides/hosting-your-own-index.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Can be configured to fall back to PyPI (or another package index) if a "
"requested package is missing."
msgstr ""
"கோரப்பட்ட தொகுப்பு காணவில்லை எனில், PYPI (அல்லது மற்றொரு தொகுப்பு "
"குறியீட்டு) க்கு திரும்புவதற்கு கட்டமைக்க முடியும்."

#: ../source/guides/index.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Guides** are focused on accomplishing a specific task and assume that you "
"are already familiar with the basics of Python packaging. If you're looking "
"for an introduction to packaging, see :doc:`/tutorials/index`."
msgstr ""
"** வழிகாட்டிகள் ** ஒரு குறிப்பிட்ட பணியை நிறைவேற்றுவதில் கவனம் "
"செலுத்துகின்றன, மேலும் பைதான் பேக்கேசிங்கின் அடிப்படைகளை நீங்கள் ஏற்கனவே "
"அறிந்திருக்கிறீர்கள் என்று கருதுகிறீர்கள். நீங்கள் பேக்கேசிங்கிற்கான "
"அறிமுகத்தைத் தேடுகிறீர்களானால், காண்க: டாக்: `/டுடோரியல்கள்/குறியீட்டு`."

#: ../source/guides/index-mirrors-and-caches.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package index mirrors and caches"
msgstr "தொகுப்பு குறியீட்டு கண்ணாடிகள் மற்றும் தற்காலிக சேமிப்புகள்"

#: ../source/guides/index-mirrors-and-caches.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2023-11-08"
msgstr "2023-11-08"

#: ../source/guides/index-mirrors-and-caches.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Mirroring or caching of PyPI (and other :term:`package indexes <Package "
"Index>`) can be used to speed up local package installation, allow offline "
"work, handle corporate firewalls or just plain Internet flakiness."
msgstr ""
"PYPI இன் பிரதிபலிப்பு அல்லது தற்காலிக சேமிப்பு (மற்றும் பிற: கால: `தொகுப்பு "
"குறியீடுகள் <தொகுப்பு குறியீட்டு>`) உள்ளக தொகுப்பு நிறுவலை விரைவுபடுத்தவும்,"
" இணைப்பில்லாத வேலையை அனுமதிக்கவும், கார்ப்பரேட் ஃபயர்வால்களைக் கையாளவும் "
"அல்லது வெற்று இணையத் துடிப்பு ஆகியவற்றைப் பயன்படுத்தவும் பயன்படுத்தப்படலாம்."

#: ../source/guides/index-mirrors-and-caches.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "There are multiple classes of options in this area:"
msgstr "இந்த பகுதியில் பல வகை விருப்பங்கள் உள்ளன:"

#: ../source/guides/index-mirrors-and-caches.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "local/hosted caching of package indexes."
msgstr "தொகுப்பு குறியீடுகளின் உள்ளூர்/ஓச்ட் செய்யப்பட்ட தற்காலிக சேமிப்பு."

#: ../source/guides/index-mirrors-and-caches.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"local/hosted mirroring of a package index. A mirror is a (whole or partial) "
"copy of a package index, which can be used in place of the original index."
msgstr ""
"ஒரு தொகுப்பு குறியீட்டின் உள்ளூர்/ஓச்ட் பிரதிபலிப்பு. ஒரு கண்ணாடி என்பது ஒரு"
" தொகுப்பு குறியீட்டின் ஒரு (முழு அல்லது பகுதி) நகலாகும், இது அசல் "
"குறியீட்டுக்கு பதிலாக பயன்படுத்தப்படலாம்."

#: ../source/guides/index-mirrors-and-caches.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"private package index with fall-through to public package indexes (for "
"example, to mitigate dependency confusion attacks), also known as a proxy."
msgstr ""
"பொது தொகுப்பு குறியீடுகளுக்கு வீழ்ச்சி கொண்ட தனியார் தொகுப்பு குறியீடு "
"(எடுத்துக்காட்டாக, சார்பு குழப்ப தாக்குதல்களைத் தணிக்க), இது பதிலாள் என்றும்"
" அழைக்கப்படுகிறது."

#: ../source/guides/index-mirrors-and-caches.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Caching with pip"
msgstr "பிப் உடன் தேக்ககிருத்தல்"

#: ../source/guides/index-mirrors-and-caches.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip provides a number of facilities for speeding up installation by using "
"local cached copies of :term:`packages <Distribution Package>`:"
msgstr ""
"உள்ளக தற்காலிக சேமிப்பு நகல்களைப் பயன்படுத்துவதன் மூலம் நிறுவலை "
"விரைவுபடுத்துவதற்கு பிஐபி பல வசதிகளை வழங்குகிறது: கால: `தொகுப்புகள் <விநியோக"
" தொகுப்பு>`:"

#: ../source/guides/index-mirrors-and-caches.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`Fast & local installs <pip:installing from local packages>` by "
"downloading all the requirements for a project and then pointing pip at "
"those downloaded files instead of going to PyPI."
msgstr ""
":ref:`Fast & local installs <pip:installing இருந்து local packages>` by "
"downloading அனைத்தும் the requirements க்கு a திட்டம் and then pointing pip "
"at those downloaded கோப்புகள் instead of going பெறுநர் PyPI."

#: ../source/guides/index-mirrors-and-caches.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A variation on the above which pre-builds the installation files for the "
"requirements using :ref:`python3 -m pip wheel <pip:pip wheel>`:"
msgstr ""
"பயன்படுத்தும் தேவைகளுக்காக நிறுவல் கோப்புகளை முன்பே கட்டியெழுப்பும் மேலே "
"உள்ள மாறுபாடு: குறிப்பு: `பைதான் 3 -எம் பிப் வீல் <பிப்: பிப் வீல்>`:"

#: ../source/guides/index-mirrors-and-caches.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Cache"
msgstr "கேச்"

#: ../source/guides/index-mirrors-and-caches.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Mirror"
msgstr "கண்ணாடி"

#: ../source/guides/index-mirrors-and-caches.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Proxy"
msgstr "பதிலாள்"

#: ../source/guides/index-mirrors-and-caches.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"multiple indexes with inheritance; syncing, replication, fail-over; package "
"upload"
msgstr ""
"பரம்பரை கொண்ட பல குறியீடுகள்; ஒத்திசைவு, பிரதி, தோல்வி; தொகுப்பு பதிவேற்றம்"

#: ../source/guides/index-mirrors-and-caches.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`bandersnatch`"
msgstr ": ref: `bandersnatch`"

#: ../source/guides/index-mirrors-and-caches.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "custom plugin enables caching; re-routing to other package indexes"
msgstr ""
"தனிப்பயன் சொருகி தற்காலிக சேமிப்பை செயல்படுத்துகிறது; பிற தொகுப்பு "
"குறியீடுகளுக்கு மீண்டும் திசை திருப்புதல்"

#: ../source/guides/index-mirrors-and-caches.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "unmaintained; authentication, authorisation"
msgstr "மதிப்பிடப்படாதது; ஏற்பு, ஏற்பு"

#: ../source/guides/index-mirrors-and-caches.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "plugin for Pulp; multiple proxied indexes; package upload"
msgstr "கூழ் சொருகி; பல ப்ராக்சிட் குறியீடுகள்; தொகுப்பு பதிவேற்றம்"

#: ../source/guides/index-mirrors-and-caches.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`proxpi`"
msgstr ": குறிப்பு: `ப்ராக்ச்பி`"

#: ../source/guides/index-mirrors-and-caches.rst:93
#: ../source/guides/index-mirrors-and-caches.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "multiple proxied indexes"
msgstr "பல ப்ராக்சிட் குறியீடுகள்"

#: ../source/guides/index-mirrors-and-caches.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`nginx_pypi_cache`"
msgstr ": குறிப்பு: `nginx_pypi_cache`"

#: ../source/guides/index-mirrors-and-caches.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`flaskpypiproxy`"
msgstr ": குறிப்பு: `பிளாச்க்பிபிப்ராக்சி`"

#: ../source/guides/index-mirrors-and-caches.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "unmaintained"
msgstr "வழங்கப்படாதது"

#: ../source/guides/installing-scientific-packages.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing scientific packages"
msgstr "அறிவியல் தொகுப்புகளை நிறுவுதல்"

#: ../source/guides/installing-scientific-packages.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Scientific software tends to have more complex dependencies than most, and "
"it will often have multiple build options to take advantage of different "
"kinds of hardware, or to interoperate with different pieces of external "
"software."
msgstr ""
"விஞ்ஞான மென்பொருள் பெரும்பாலானவற்றை விட மிகவும் சிக்கலான சார்புகளைக் "
"கொண்டிருக்கிறது, மேலும் இது பல்வேறு வகையான வன்பொருள்களைப் பயன்படுத்த பல "
"கட்டுமான விருப்பங்களைக் கொண்டிருக்கும், அல்லது வெளிப்புற மென்பொருளின் "
"வெவ்வேறு துண்டுகளுடன் செயல்படுகிறது."

#: ../source/guides/installing-scientific-packages.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In particular, `NumPy <https://numpy.org/>`__, which provides the basis for "
"most of the software in the `scientific Python stack <https://scientific-"
"python.org>`_ can be configured to interoperate with different FORTRAN "
"libraries, and can take advantage of different levels of vectorized "
"instructions available in modern CPUs."
msgstr ""
"குறிப்பாக, `numpy <https://numpy.org/>` __, இது `அறிவியல் பைதான் அடுக்கில் "
"<https://scientific-python.org> _ _ _ வெவ்வேறு ஃபோர்டிரான் நூலகங்களுடன் "
"ஒன்றிணைந்து, நவீன சிபியு களில் கிடைக்கும் வெவ்வேறு நிலைகளில் திசையன் "
"வழிமுறைகளைப் பயன்படுத்திக் கொள்ளலாம்."

#: ../source/guides/installing-scientific-packages.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Starting with version 1.10.4 of NumPy and version 1.0.0 of SciPy, pre-built "
"32-bit and 64-bit binaries in the ``wheel`` format are available for all "
"major operating systems (Windows, macOS, and Linux) on PyPI. Note, however, "
"that on Windows, NumPy binaries are linked against the `ATLAS <https://math-"
"atlas.sourceforge.net/>`__ BLAS/LAPACK library, restricted to SSE2 "
"instructions, so they may not provide optimal linear algebra performance."
msgstr ""
"`` வீல்`` வடிவத்தில் முன்பே கட்டப்பட்ட 32-பிட் மற்றும் 64-பிட் பைனரிகள் "
"அனைத்து முக்கிய இயக்க முறைமைகளுக்கும் (விண்டோச், மேகோச் மற்றும் லினக்ச்) "
"கிடைக்கின்றன பைபியில். இருப்பினும், சாளரங்களில், நம்பி பைனரிகள் `அட்லச் "
"<https://math-atlas.sourceforge.net/> __ __ பிளாச்/லேபாக் நூலகம், எச்எச்இ 2 "
"வழிமுறைகளுக்கு கட்டுப்படுத்தப்பட்டுள்ளன, எனவே அவை உகந்த நேரியல் இயற்கணிதத்தை"
" வழங்காது செயல்திறன்."

#: ../source/guides/installing-scientific-packages.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are a number of alternative options for obtaining scientific Python "
"libraries (or any other Python libraries that require a compilation "
"environment to install from source and don't provide pre-built wheel files "
"on PyPI)."
msgstr ""
"விஞ்ஞான பைதான் நூலகங்களைப் பெறுவதற்கு பல மாற்று விருப்பங்கள் உள்ளன (அல்லது "
"மூலத்திலிருந்து நிறுவ ஒரு தொகுப்பு சூழல் தேவைப்படும் மற்றும் பைபியில் முன்பே"
" கட்டப்பட்ட சக்கர கோப்புகளை வழங்காத வேறு எந்த பைதான் நூலகங்களும்)."

#: ../source/guides/installing-scientific-packages.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Building from source"
msgstr "மூலத்திலிருந்து கட்டிடம்"

#: ../source/guides/installing-scientific-packages.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The same complexity which makes it difficult to distribute NumPy (and many "
"of the projects that depend on it) as wheel files also make them difficult "
"to build from source yourself. However, for intrepid folks that are willing "
"to spend the time wrangling compilers and linkers for both C and FORTRAN, "
"building from source is always an option."
msgstr ""
"சக்கரக் கோப்புகள் என நம்பியை (மற்றும் அதைச் சார்ந்து இருக்கும் பல "
"திட்டங்களை) விநியோகிப்பது கடினமாக்கும் அதே சிக்கலானது, மூலத்திலிருந்து "
"உங்களை உருவாக்குவது கடினம். எவ்வாறாயினும், சி மற்றும் ஃபோர்ட்ரான் ஆகிய "
"இரண்டிற்கும் கம்பைலர்கள் மற்றும் இணைப்பாளர்களை சண்டையிடும் நேரத்தை செலவிடத் "
"தயாராக இருக்கும் துணிச்சலான அனைவருக்கும், மூலத்திலிருந்து கட்டுவது எப்போதும்"
" ஒரு விருப்பமாகும்."

#: ../source/guides/installing-scientific-packages.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Linux distribution packages"
msgstr "லினக்ச் விநியோக தொகுப்புகள்"

#: ../source/guides/installing-scientific-packages.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For Linux users, the system package manager will often have pre-compiled "
"versions of various pieces of scientific software, including NumPy and other"
" parts of the scientific Python stack."
msgstr ""
"லினக்ச் பயனர்களைப் பொறுத்தவரை, கணினி தொகுப்பு மேலாளர் பெரும்பாலும் எண் "
"மற்றும் விஞ்ஞான பைதான் அடுக்கின் பிற பகுதிகள் உட்பட பல்வேறு அறிவியல் "
"மென்பொருள்களின் முன் தொகுக்கப்பட்ட பதிப்புகளைக் கொண்டிருப்பார்."

#: ../source/guides/installing-scientific-packages.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If using versions which may be several months old is acceptable, then this "
"is likely to be a good option (just make sure to allow access to "
"distributions installed into the system Python when using virtual "
"environments)."
msgstr ""
"பல மாதங்கள் பழமையான பதிப்புகளைப் பயன்படுத்துவது ஏற்றுக்கொள்ளத்தக்கது "
"என்றால், இது ஒரு நல்ல தேர்வாக இருக்கக்கூடும் (மெய்நிகர் சூழல்களைப் "
"பயன்படுத்தும் போது கணினி பைத்தானில் நிறுவப்பட்ட விநியோகங்களை அணுக "
"அனுமதிப்பதை உறுதிசெய்க)."

#: ../source/guides/installing-scientific-packages.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Windows installers"
msgstr "சாளரங்கள் நிறுவிகள்"

#: ../source/guides/installing-scientific-packages.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Many Python projects that don't (or can't) currently publish wheel files at "
"least publish Windows installers, either on PyPI or on their project "
"download page. Using these installers allows users to avoid the need to set "
"up a suitable environment to build extensions locally."
msgstr ""
"இல்லாத பல பைதான் திட்டங்கள் தற்போது சக்கரக் கோப்புகளை வெளியிடுகின்றன, "
"குறைந்தது சாளரங்கள் நிறுவிகளை பைபி அல்லது அவற்றின் திட்ட பதிவிறக்க "
"பக்கத்தில் வெளியிடுகின்றன. இந்த நிறுவிகளைப் பயன்படுத்துவது பயனர்கள் "
"உள்நாட்டில் நீட்டிப்புகளை உருவாக்க பொருத்தமான சூழலை அமைக்க வேண்டிய "
"அவசியத்தைத் தவிர்க்க அனுமதிக்கிறது."

#: ../source/guides/installing-scientific-packages.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The extensions provided in these installers are typically compatible with "
"the CPython Windows installers published on python.org."
msgstr ""
"இந்த நிறுவிகளில் வழங்கப்பட்ட நீட்டிப்புகள் பொதுவாக python.org இல் "
"வெளியிடப்பட்ட CPyThon சாளரங்கள் நிறுவிகளுடன் இணக்கமாக இருக்கும்."

#: ../source/guides/installing-scientific-packages.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As with Linux system packages, the Windows installers will only install into"
" a system Python installation - they do not support installation in virtual "
"environments. Allowing access to distributions installed into the system "
"Python when using virtual environments is a common approach to working "
"around this limitation."
msgstr ""
"லினக்ச் கணினி தொகுப்புகளைப் போலவே, சாளரங்கள் நிறுவிகள் கணினி பைதான் "
"நிறுவலில் மட்டுமே நிறுவப்படும் - அவை மெய்நிகர் சூழல்களில் நிறுவலை "
"ஆதரிக்காது. மெய்நிகர் சூழல்களைப் பயன்படுத்தும் போது கணினி பைத்தானில் "
"நிறுவப்பட்ட விநியோகங்களை அணுக அனுமதிப்பது இந்த வரம்பைச் சுற்றி "
"செயல்படுவதற்கான பொதுவான அணுகுமுறையாகும்."

#: ../source/guides/installing-scientific-packages.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :term:`Wheel` project also provides a :command:`wheel convert` "
"subcommand that can convert a Windows :command:`bdist_wininst` installer to "
"a wheel."
msgstr ""
"தி: கால: `வீல்` திட்டம் ஒரு விண்டோசை மாற்றக்கூடிய ஒரு: கட்டளை:` சக்கர "
"மாற்றுதல் துணைக் கட்டளை: கட்டளை: `bdist_wininst` நிறுவி ஒரு சக்கரத்திற்கு."

#: ../source/guides/installing-scientific-packages.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "macOS installers and package managers"
msgstr "மேகோச் நிறுவிகள் மற்றும் தொகுப்பு மேலாளர்கள்"

#: ../source/guides/installing-scientific-packages.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Similar to the situation on Windows, many projects (including NumPy) publish"
" macOS installers that are compatible with the macOS CPython binaries "
"published on python.org."
msgstr ""
"விண்டோசின் நிலைமையைப் போலவே, பல திட்டங்கள் (NUMPY உட்பட) MACOS நிறுவிகளை "
"வெளியிடுகின்றன, அவை பைதான்.ஆர்சில் வெளியிடப்பட்ட மேகோச் சிபிதான் பைனரிகளுடன்"
" இணக்கமாக உள்ளன."

#: ../source/guides/installing-scientific-packages.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"macOS users also have access to Linux distribution style package managers "
"such as ``Homebrew``. The SciPy site has more details on using Homebrew to "
"`install SciPy on macOS <https://scipy.org/install/#macos>`_."
msgstr ""
"மேகோச் பயனர்கள் `` ஓம் ப்ரூ`` போன்ற லினக்ச் விநியோக பாணி தொகுப்பு "
"மேலாளர்களுக்கும் அணுகலைக் கொண்டுள்ளனர். மேகோச் "
"<https://scipy.org/install/#macos> `_ இல் SCIPY ஐ நிறுவ ஓம் ப்ரூவைப் "
"பயன்படுத்துவது பற்றிய கூடுதல் விவரங்கள் SCIPY தளத்தில் உள்ளன."

#: ../source/guides/installing-scientific-packages.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "SciPy distributions"
msgstr "சுறுசுறுப்பான வழங்கல்"

#: ../source/guides/installing-scientific-packages.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The SciPy site lists `several distributions <https://scipy.org/install/>`_ "
"that provide the full SciPy stack to end users in an easy to use and update "
"format."
msgstr ""
"SCIPY தளம் `பல விநியோகங்களை பட்டியலிடுகிறது <https://scipy.org/install/>` _ "
"இது பயனர்களை எளிதாகப் பயன்படுத்தவும் புதுப்பிக்கவும் முழு ச்கிப்பி அடுக்கை "
"வழங்குகிறது."

#: ../source/guides/installing-scientific-packages.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some of these distributions may not be compatible with the standard ``pip`` "
"and ``virtualenv`` based toolchain."
msgstr ""
"இந்த விநியோகங்களில் சில நிலையான `` பிஐபி`` மற்றும் `` மெய்நிகர்என்.வி`` "
"அடிப்படையிலான கருவித்தொகுப்புடன் பொருந்தாது."

#: ../source/guides/installing-scientific-packages.rst:100
#: ../source/key_projects.rst:812
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Spack"
msgstr "ச்பேர்ட்"

#: ../source/guides/installing-scientific-packages.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Spack <https://github.com/spack/spack>`_ is a flexible package manager "
"designed to support multiple versions, configurations, platforms, and "
"compilers. It was built to support the needs of large supercomputing centers"
" and scientific application teams, who must often build software many "
"different ways. Spack is not limited to Python; it can install packages for "
"``C``, ``C++``, ``Fortran``, ``R``, and other languages.  It is non-"
"destructive; installing a new version of one package does not break existing"
" installations, so many configurations can coexist on the same system."
msgstr ""
"`ச்பேக் <https://github.com/spack/spack>` _ என்பது பல பதிப்புகள், "
"உள்ளமைவுகள், தளங்கள் மற்றும் கம்பைலர்களை ஆதரிக்க வடிவமைக்கப்பட்ட ஒரு "
"நெகிழ்வான தொகுப்பு மேலாளராகும். பெரிய சூப்பர் கம்ப்யூட்டிங் மையங்கள் மற்றும்"
" அறிவியல் பயன்பாட்டுக் குழுக்களின் தேவைகளை ஆதரிப்பதற்காக இது கட்டப்பட்டது, "
"அவர்கள் பெரும்பாலும் மென்பொருளை பல வழிகளில் உருவாக்க வேண்டும். ச்பேக் "
"பைத்தானுக்கு மட்டுப்படுத்தப்படவில்லை; இது `` c``, `` c ++ ``, `` "
"ஃபோர்ட்ரான்``, `` r`` மற்றும் பிற மொழிகளுக்கான தொகுப்புகளை நிறுவ முடியும். "
"இது அழிவில்லாதது; ஒரு தொகுப்பின் புதிய பதிப்பை நிறுவுவது ஏற்கனவே உள்ள "
"நிறுவல்களை உடைக்காது, எனவே பல உள்ளமைவுகள் ஒரே கணினியில் இணைந்து வாழ "
"முடியும்."

#: ../source/guides/installing-scientific-packages.rst:110
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Spack offers a simple but powerful syntax that allows users to specify "
"versions and configuration options concisely. Package files are written in "
"pure Python, and they are templated so that it is easy to swap compilers, "
"dependency implementations (like MPI), versions, and build options with a "
"single package file.  Spack also generates *module* files so that packages "
"can be loaded and unloaded from the user's environment."
msgstr ""
"ச்பாக் ஒரு எளிய ஆனால் சக்திவாய்ந்த தொடரியல் வழங்குகிறது, இது பயனர்களை "
"பதிப்புகள் மற்றும் உள்ளமைவு விருப்பங்களை சுருக்கமாகக் குறிப்பிட "
"அனுமதிக்கிறது. தொகுப்பு கோப்புகள் தூய பைத்தானில் எழுதப்பட்டுள்ளன, மேலும் அவை"
" வார்ப்புருக்கள், இதனால் கம்பைலர்கள், சார்பு செயலாக்கங்கள் (எம்.பி.ஐ "
"போன்றவை), பதிப்புகள் மற்றும் ஒற்றை தொகுப்பு கோப்புடன் விருப்பங்களை "
"உருவாக்குவது எளிது. ச்பேக் * தொகுதி * கோப்புகளையும் உருவாக்குகிறது, இதனால் "
"பயனரின் சூழலில் இருந்து தொகுப்புகளை ஏற்றவும் இறக்கவும் முடியும்."

#: ../source/guides/installing-scientific-packages.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The conda cross-platform package manager"
msgstr "காண்டா குறுக்கு-தளம் தொகுப்பு மேலாளர்"

#: ../source/guides/installing-scientific-packages.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``conda`` is an open source (BSD licensed) package management system and "
"environment management system that allows users to install multiple versions"
" of binary software packages and their dependencies, and easily switch "
"between them. It is a cross-platform tool working on Windows, MacOS, and "
"Linux. Conda can be used to package up and distribute all kinds of packages,"
" it is not limited to just Python packages. It has full support for native "
"virtual environments. Conda makes environments first-class citizens, making "
"it easy to create independent environments even for C libraries. It is "
"written in Python, but is Python-agnostic. Conda manages Python itself as a "
"package, so that :command:`conda update python` is possible, in contrast to "
"pip, which only manages Python packages."
msgstr ""
"`` காண்டா`` என்பது ஒரு திறந்த மூல (பி.எச்.டி உரிமம் பெற்ற) தொகுப்பு மேலாண்மை"
" அமைப்பு மற்றும் சுற்றுச்சூழல் மேலாண்மை அமைப்பு, இது பைனரி மென்பொருள் "
"தொகுப்புகளின் பல பதிப்புகளையும் அவற்றின் சார்புகளையும் நிறுவ பயனர்களை "
"அனுமதிக்கிறது, மேலும் அவற்றுக்கு இடையில் எளிதாக மாறுகிறது. இது சாளரங்கள், "
"மேகோச் மற்றும் லினக்சில் பணிபுரியும் குறுக்கு-தளம் கருவியாகும். அனைத்து "
"வகையான தொகுப்புகளையும் தொகுத்து விநியோகிக்க கான்டாவைப் பயன்படுத்தலாம், இது "
"பைதான் தொகுப்புகளுக்கு மட்டுப்படுத்தப்படவில்லை. இது சொந்த மெய்நிகர் "
"சூழல்களுக்கு முழு ஆதரவைக் கொண்டுள்ளது. காண்டா சூழல்களை முதல் தர குடிமக்களை "
"உருவாக்குகிறது, இது சி நூலகங்களுக்கு கூட சுயாதீனமான சூழல்களை உருவாக்குவதை "
"எளிதாக்குகிறது. இது பைத்தானில் எழுதப்பட்டுள்ளது, ஆனால் பைதான்-அஞ்ஞானியாகும்."
" காண்டா பைத்தானை ஒரு தொகுப்பாக நிர்வகிக்கிறார், அதனால்: கட்டளை: `காண்டா "
"புதுப்பிப்பு பைதான்` சாத்தியமாகும், இது PITHON தொகுப்புகளை மட்டுமே "
"நிர்வகிக்கிறது."

#: ../source/guides/installing-scientific-packages.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Anaconda `Anaconda <https://docs.anaconda.com/anaconda/>`_ is a Python "
"distribution published by Anaconda, Inc. It is a stable collection of Open "
"Source packages for big data and scientific use, and a collection of "
"Graphical Interface utilities for managing conda environments."
msgstr ""
"அனகோண்டா `அனகோண்டா <https://docs.anaconda.com/anaconda/>` _ என்பது அனகோண்டா,"
" இன்க். கான்டா சூழல்களை நிர்வகிப்பதற்கான இடைமுக பயன்பாடுகள்."

#: ../source/guides/installing-scientific-packages.rst:135
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to the full distribution provided by Anaconda, the conda package"
" manager itself is available in  `miniconda "
"<https://docs.anaconda.com/miniconda/>`_, `miniforge "
"<https://github.com/conda-forge/miniforge>`_, and `pixi "
"<https://pixi.sh/>`_."
msgstr ""
"அனகோண்டா வழங்கிய முழு விநியோகத்திற்கு கூடுதலாக, காண்டா தொகுப்பு மேலாளர் "
"`மினிகொண்டா <https://docs.anaconda.com/miniconda/>` _, `மினிஃபார்ச் "
"<https://github.com/conda இல் கிடைக்கிறது. ஃபோர்ச்/மினிஃபார்ச்> `_, மற்றும்`"
" பிக்சி <https://pixi.sh/> `_."

#: ../source/guides/installing-scientific-packages.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Conda packages are available on multiple channels on Anaconda.org, including"
" the default channel supported by Anaconda, Inc, the community supported "
"conda-forge channel, which provides a wide variety of pre-built packages, "
"and some domain-specific package collections."
msgstr ""
"அனகோண்டா.ஆர்சில் பல சேனல்களில் காண்டா தொகுப்புகள் கிடைக்கின்றன, இதில் "
"அனகோண்டா, இன்க் ஆதரிக்கப்படும் இயல்புநிலை சேனல், சமூகம் ஆதரவளித்த "
"கான்டா-ஃபார்ச் சேனலை உள்ளடக்கியது, இது பலவிதமான முன் கட்டப்பட்ட தொகுப்புகளை "
"வழங்குகிறது மற்றும் சில டொமைன்-குறிப்பிட்ட தொகுப்பு தொகுப்புகளை வழங்குகிறது."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing stand alone command line tools"
msgstr "ச்டாண்ட் தனியாக கட்டளை வரி கருவிகளை நிறுவுதல்"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Many packages provide command line applications. Examples of such packages "
"are `mypy <https://github.com/python/mypy>`_, `flake8 "
"<https://github.com/PyCQA/flake8>`_, `black "
"<https://github.com/psf/black>`_, and :ref:`pipenv`."
msgstr ""
"பல தொகுப்புகள் கட்டளை வரி பயன்பாடுகளை வழங்குகின்றன. அத்தகைய தொகுப்புகளின் "
"எடுத்துக்காட்டுகள் `mypy <https://github.com/python/mypy>` _, `flake8 "
"<https://github.com/pycqa/flake8>` _, `கருப்பு <https: // github. "
"com/psf/கருப்பு> `_, மற்றும்: ref:` pipenv`."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Usually you want to be able to access these applications from anywhere on "
"your system, but installing packages and their dependencies to the same "
"global environment can cause version conflicts and break dependencies the "
"operating system has on Python packages."
msgstr ""
"வழக்கமாக நீங்கள் இந்த பயன்பாடுகளை உங்கள் கணினியில் எங்கிருந்தும் அணுக "
"முடியும், ஆனால் தொகுப்புகளையும் அவற்றின் சார்புகளையும் அதே உலகளாவிய "
"சூழலுக்கு நிறுவுவது பதிப்பு மோதல்களை ஏற்படுத்தும் மற்றும் பைதான் "
"தொகுப்புகளில் இயக்க முறைமை வைத்திருக்கும் சார்புகளை உடைக்கலாம்."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`pipx` solves this by creating a virtual environment for each package, "
"while also ensuring that its applications are accessible through a directory"
" that is on your ``$PATH``. This allows each package to be upgraded or "
"uninstalled without causing conflicts with other packages, and allows you to"
" safely run the applications from anywhere."
msgstr ""
". இது ஒவ்வொரு தொகுப்பையும் மற்ற தொகுப்புகளுடன் மோதல்களை ஏற்படுத்தாமல் "
"மேம்படுத்த அல்லது நிறுவல் நீக்க அனுமதிக்கிறது, மேலும் பயன்பாடுகளை "
"எங்கிருந்தும் பாதுகாப்பாக இயக்க அனுமதிக்கிறது."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pipx only works with Python 3.6+."
msgstr "பிஐபிஎக்ச் பைதான் 3.6+ உடன் மட்டுமே வேலை செய்கிறது."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pipx is installed with pip:"
msgstr "PIPX PIP உடன் நிறுவப்பட்டுள்ளது:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``ensurepath`` ensures that the application directory is on your ``$PATH``. "
"You may need to restart your terminal for this update to take effect."
msgstr ""
"`` உறுதிப்படுத்தவும் `` பயன்பாட்டு அடைவு உங்கள் `` $ பாதை`` ஐ உறுதி "
"செய்கிறது. இந்த புதுப்பிப்பு நடைமுறைக்கு வர உங்கள் முனையத்தை மறுதொடக்கம் "
"செய்ய வேண்டியிருக்கலாம்."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now you can install packages with ``pipx install`` and run the package's "
"applications(s) from anywhere."
msgstr ""
"இப்போது நீங்கள் `` பிஐபிஎக்ச் நிறுவல்` உடன் தொகுப்புகளை நிறுவலாம் மற்றும் "
"எங்கிருந்தும் தொகுப்பின் பயன்பாடுகளை (களை) இயக்கலாம்."

#: ../source/guides/installing-stand-alone-command-line-tools.rst:54
#: ../source/specifications/entry-points.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For example:"
msgstr "உதாரணமாக:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:76
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To see a list of packages installed with pipx and which applications are "
"available, use ``pipx list``:"
msgstr ""
"PIPX உடன் நிறுவப்பட்ட தொகுப்புகளின் பட்டியலைக் காண மற்றும் எந்த பயன்பாடுகள் "
"கிடைக்கின்றன என்பதைக் காண, `` PIPX பட்டியல்`` ஐப் பயன்படுத்தவும்:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To upgrade or uninstall a package:"
msgstr "ஒரு தொகுப்பை மேம்படுத்த அல்லது நிறுவல் நீக்க:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pipx can be upgraded or uninstalled with pip:"
msgstr "PIPX ஐ மேம்படுத்தலாம் அல்லது PIP உடன் நிறுவல் நீக்கலாம்:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pipx also allows you to install and run the latest version of an application"
" in a temporary, ephemeral environment. For example:"
msgstr ""
"ஒரு பயன்பாட்டின் அண்மைக் கால பதிப்பை தற்காலிக, இடைக்கால சூழலில் நிறுவவும் "
"இயக்கவும் PIPX உங்களை அனுமதிக்கிறது. உதாரணமாக:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To see the full list of commands pipx offers, run:"
msgstr "பிப்எக்ச் வழங்கும் கட்டளைகளின் முழு பட்டியலையும் காண, இயக்கவும்:"

#: ../source/guides/installing-stand-alone-command-line-tools.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "You can learn more about pipx at https://pipx.pypa.io/."
msgstr "PIPX பற்றி https://pipx.pypa.io/ இல் மேலும் அறியலாம்."

#: ../source/guides/installing-using-linux-tools.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing pip/setuptools/wheel with Linux Package Managers"
msgstr "லினக்ச் தொகுப்பு மேலாளர்களுடன் PIP/Setuptools/whle ஐ நிறுவுதல்"

#: ../source/guides/installing-using-linux-tools.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2021-07-26"
msgstr "2021-07-26"

#: ../source/guides/installing-using-linux-tools.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section covers how to install :ref:`pip`, :ref:`setuptools`, and "
":ref:`wheel` using Linux package managers."
msgstr ""
"இந்த பிரிவு எவ்வாறு நிறுவுவது என்பதை உள்ளடக்கியது: குறிப்பு: `பிப்`,: ref:` "
"setuptools`, மற்றும்: Ref: `whel` லினக்ச் தொகுப்பு மேலாளர்களைப் "
"பயன்படுத்துதல்."

#: ../source/guides/installing-using-linux-tools.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you're using a Python that was downloaded from `python.org "
"<https://www.python.org>`_, then this section does not apply.  See the "
":ref:`installing_requirements` section instead."
msgstr ""
"`Python.org <https://www.python.org> _ _ இலிருந்து பதிவிறக்கம் செய்யப்பட்ட "
"பைதானைப் பயன்படுத்துகிறீர்கள் என்றால், இந்த பிரிவு பொருந்தாது. இதைக் காண்க: "
"ref: `நிறுவுதல்_ரொக்விரெமென்ட்ச்` பிரிவு."

#: ../source/guides/installing-using-linux-tools.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that it's common for the versions of :ref:`pip`, :ref:`setuptools`, and"
" :ref:`wheel` supported by a specific Linux Distribution to be outdated by "
"the time it's released to the public, and updates generally only occur for "
"security reasons, not for feature updates.  For certain Distributions, there"
" are additional repositories that can be enabled to provide newer versions."
"  The repositories we know about are explained below."
msgstr ""
"இதன் பதிப்புகளுக்கு இது பொதுவானது: ref: `பிப்`,: ref:` setuptools`, மற்றும்:"
" ref: `சக்கரம்` ஒரு குறிப்பிட்ட லினக்ச் விநியோகத்தால் ஆதரிக்கப்படுகிறது, அது"
" பொதுமக்களுக்கு வெளியிடப்பட்ட நேரத்தில் காலாவதியானது, பொதுவாக "
"புதுப்பிப்புகள் பாதுகாப்பு காரணங்களுக்காக மட்டுமே நிகழ்கிறது, அம்ச "
"புதுப்பிப்புகளுக்கு அல்ல. சில விநியோகங்களுக்கு, புதிய பதிப்புகளை வழங்க "
"கூடுதல் களஞ்சியங்கள் இயக்கப்படலாம். எங்களுக்குத் தெரிந்த களஞ்சியங்கள் கீழே "
"விளக்கப்பட்டுள்ளன."

#: ../source/guides/installing-using-linux-tools.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Also note that it's somewhat common for Distributions to apply patches for "
"the sake of security and normalization to their own standards.  In some "
"cases, this can lead to bugs or unexpected behaviors that vary from the "
"original unpatched versions.  When this is known, we will make note of it "
"below."
msgstr ""
"பாதுகாப்பு மற்றும் இயல்பாக்குதலுக்காக தங்கள் சொந்த தரங்களுக்கு விநியோகங்கள் "
"இணைப்புகளைப் பயன்படுத்துவது ஓரளவு பொதுவானது என்பதையும் நினைவில் கொள்க. சில "
"சந்தர்ப்பங்களில், இது அசல் இணைக்கப்படாத பதிப்புகளிலிருந்து மாறுபடும் பிழைகள்"
" அல்லது எதிர்பாராத நடத்தைகளுக்கு வழிவகுக்கும். இது அறியப்படும்போது, ​​அதை "
"கீழே குறிப்பிடுவோம்."

#: ../source/guides/installing-using-linux-tools.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Fedora"
msgstr "ஃபெடோரா"

#: ../source/guides/installing-using-linux-tools.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To learn more about Python in Fedora, please visit the `official Fedora "
"docs`_, `Python Classroom`_ or `Fedora Loves Python`_."
msgstr ""
"ஃபெடோராவில் பைதான் பற்றி மேலும் அறிய, தயவுசெய்து `அதிகாரப்பூர்வ ஃபெடோரா "
"டாக்ச்`_,` பைதான் வகுப்பறை`_ அல்லது `ஃபெடோரா பைதான்`_ ஐ நேசிக்கவும்."

#: ../source/guides/installing-using-linux-tools.rst:45
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "CentOS/RHEL"
msgstr "சென்டோச்/ரெல்"

#: ../source/guides/installing-using-linux-tools.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"CentOS and RHEL don't offer :ref:`pip` or :ref:`wheel` in their core "
"repositories, although :ref:`setuptools` is installed by default."
msgstr ""
"சென்டோச் மற்றும் ரெல் வழங்கவில்லை: குறிப்பு: `பிப்` அல்லது: Ref:` வீல்` "
"அவர்களின் முக்கிய களஞ்சியங்களில், இருப்பினும்: Ref: `setuptools` இயல்பாக "
"நிறுவப்பட்டுள்ளது."

#: ../source/guides/installing-using-linux-tools.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To install pip and wheel for the system Python, there are two options:"
msgstr ""
"கணினி பைத்தானுக்கு பிஐபி மற்றும் சக்கரத்தை நிறுவ, இரண்டு விருப்பங்கள் உள்ளன:"

#: ../source/guides/installing-using-linux-tools.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Enable the `EPEL repository <https://fedoraproject.org/wiki/EPEL>`_ using "
"`these instructions <https://docs.fedoraproject.org/en-US/epel/getting-"
"started/>`__. On EPEL 7, you can install pip and wheel like so:"
msgstr ""
"`எபல் களஞ்சியத்தை <https://fedoraproject.org/wiki/epel>` _ இந்த வழிமுறைகளைப்"
" பயன்படுத்தி <https://docs.fedoraproject.org/en-us/epel/egetting-started/> "
"__. எபல் 7 இல், நீங்கள் பிப் மற்றும் வீலை நிறுவலாம்:"

#: ../source/guides/installing-using-linux-tools.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Since EPEL only offers extra, non-conflicting packages, EPEL does not offer "
"setuptools, since it's in the core repository."
msgstr ""
"எபல் கூடுதல், மோதல் அல்லாத தொகுப்புகளை மட்டுமே வழங்குவதால், எபல் "
"செட்டுப்லூல்களை வழங்காது, ஏனெனில் இது முக்கிய களஞ்சியத்தில் உள்ளது."

#: ../source/guides/installing-using-linux-tools.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Enable the `PyPA Copr Repo "
"<https://copr.fedorainfracloud.org/coprs/pypa/pypa/>`_ using `these "
"instructions <https://fedoraproject.org/wiki/Infrastructure/Fedorahosted-"
"retirement>`__ [1]_. You can install pip and wheel like so:"
msgstr ""
"`பைபா கோப்ர் ரெப்போ <https://copr.fedorainfracloud.org/coprs/pypa/pypa/>` _ "
"`இந்த வழிமுறைகளைப் பயன்படுத்துதல் <https://fedoraprogict. 1] _. நீங்கள் "
"குழாய் மற்றும் சக்கரத்தை நிறுவலாம்:"

#: ../source/guides/installing-using-linux-tools.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To additionally upgrade setuptools, run:"
msgstr "கூடுதலாக செட்டுப்டூல்சை மேம்படுத்த, இயக்கவும்:"

#: ../source/guides/installing-using-linux-tools.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To install pip, wheel, and setuptools, in a parallel, non-system environment"
" (using yum) then there are two options:"
msgstr ""
"பிஐபி, வீல் மற்றும் செட்டுப்டூல்களை நிறுவ, ஒரு இணையான, அமைப்பு அல்லாத "
"சூழலில் (YUM ஐப் பயன்படுத்தி) இரண்டு விருப்பங்கள் உள்ளன:"

#: ../source/guides/installing-using-linux-tools.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Use the \"Software Collections\" feature to enable a parallel collection "
"that includes pip, setuptools, and wheel."
msgstr ""
"PIP, Setuptools மற்றும் whel ஆகியவற்றை உள்ளடக்கிய ஒரு இணையான சேகரிப்பை இயக்க"
" \"மென்பொருள் சேகரிப்புகள்\" அம்சத்தைப் பயன்படுத்தவும்."

#: ../source/guides/installing-using-linux-tools.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For Redhat, see here: "
"https://developers.redhat.com/products/softwarecollections/overview"
msgstr ""
"ரெட்ஆட்டைப் பொறுத்தவரை, இங்கே காண்க: "
"https://developers.redhat.com/products/softwarecollections/overview"

#: ../source/guides/installing-using-linux-tools.rst:90
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For CentOS, see here: https://github.com/sclorg"
msgstr "சென்டோசுக்கு, இங்கே காண்க: https://github.com/sclorg"

#: ../source/guides/installing-using-linux-tools.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Be aware that collections may not contain the most recent versions."
msgstr ""
"சேகரிப்புகளில் மிக அண்மைக் கால பதிப்புகள் இல்லை என்பதை அறிந்து கொள்ளுங்கள்."

#: ../source/guides/installing-using-linux-tools.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Enable the `IUS repository <https://ius.io/setup>`_ and install one of the "
"`parallel-installable <https://ius.io/usage#parallel-installable-packages>`_"
" Pythons, along with pip, setuptools, and wheel, which are kept fairly up to"
" date."
msgstr ""
"`Ius களஞ்சியத்தை <https://ius.io/setup> _ _ _` இணையாக-உள்ள-நிறுவல் "
"<https://ius.io/usage#parallel-installable-packages> `_ பைதான்ச் ஆகியவற்றில்"
" ஒன்றை நிறுவவும் பிப், செடுப்டூல்கள் மற்றும் சக்கரம், அவை மிகவும் "
"புதுப்பித்த நிலையில் உள்ளன."

#: ../source/guides/installing-using-linux-tools.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For example, for Python 3.4 on CentOS7/RHEL7:"
msgstr "எடுத்துக்காட்டாக, centos7/Rhel7 இல் பைதான் 3.4 க்கு:"

#: ../source/guides/installing-using-linux-tools.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "openSUSE"
msgstr "OpenSuse"

#: ../source/guides/installing-using-linux-tools.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Debian/Ubuntu and derivatives"
msgstr "டெபியன்/உபுண்டு மற்றும் வழித்தோன்றல்கள்"

#: ../source/guides/installing-using-linux-tools.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Firstly, update and refresh repository lists by running this command:"
msgstr ""
"முதலாவதாக, இந்த கட்டளையை இயக்குவதன் மூலம் களஞ்சிய பட்டியல்களைப் புதுப்பித்து"
" புதுப்பிக்கவும்:"

#: ../source/guides/installing-using-linux-tools.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Recent Debian/Ubuntu versions have modified pip to use the `\"User Scheme\" "
"<https://pip.pypa.io/en/stable/user_guide/#user-installs>`_ by default, "
"which is a significant behavior change that can be surprising to some users."
msgstr ""
"அண்மைக் கால டெபியன்/உபுண்டு பதிப்புகள் `\" பயனர் திட்டத்தை "
"\"<https://pip.pypa.io/en/stable/user_guide/#user-installs>` _ இயல்பாக "
"மாற்றியமைத்த பிஐபி மாற்றியமைத்துள்ளன, இது முன்னிருப்பாக, இது ஒரு "
"குறிப்பிடத்தக்க நடத்தை மாற்றமாகும் சில பயனர்களுக்கு ஆச்சரியமாக இருக்கும்."

#: ../source/guides/installing-using-linux-tools.rst:135
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Arch Linux"
msgstr "ஆர்ச் லினக்ச்"

#: ../source/guides/installing-using-linux-tools.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Currently, there is no \"copr\" yum plugin available for CentOS/RHEL, so the"
" only option is to manually place the repo files as described."
msgstr ""
"தற்போது, ​​சென்டோச்/ஆர்.எச்.இ.எல் -க்கு \"கோப்ஆர்\" யூம் சொருகி "
"கிடைக்கவில்லை, எனவே விவரிக்கப்பட்டுள்ளபடி ரெப்போ கோப்புகளை கைமுறையாக வைப்பதே"
" ஒரே வழி."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:2
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install packages in a virtual environment using pip and venv"
msgstr ""
"PIP மற்றும் WENV ஐப் பயன்படுத்தி மெய்நிகர் சூழலில் தொகுப்புகளை நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide discusses how to create and activate a virtual environment using "
"the standard library's virtual environment tool :ref:`venv` and install "
"packages. The guide covers how to:"
msgstr ""
"இந்த வழிகாட்டி நிலையான நூலகத்தின் மெய்நிகர் சூழல் கருவியைப் பயன்படுத்தி ஒரு "
"மெய்நிகர் சூழலை எவ்வாறு உருவாக்குவது மற்றும் செயல்படுத்துவது என்பதை "
"விவாதிக்கிறது: ref: `VEV` மற்றும் தொகுப்புகளை நிறுவுதல். வழிகாட்டி எப்படி "
"என்பதை உள்ளடக்கியது:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Create and activate a virtual environment"
msgstr "மெய்நிகர் சூழலை உருவாக்கி செயல்படுத்தவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:9
#: ../source/guides/installing-using-pip-and-virtual-environments.rst:153
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Prepare pip"
msgstr "பிப் தயாரிக்கவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install packages into a virtual environment using the ``pip`` command"
msgstr ""
"`` பிப்`` கட்டளையைப் பயன்படுத்தி மெய்நிகர் சூழலில் தொகுப்புகளை நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:11
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Use and create a requirements file"
msgstr "தேவைகள் கோப்பைப் பயன்படுத்தவும் உருவாக்கவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide applies to supported versions of Python, currently 3.8 and "
"higher."
msgstr ""
"இந்த வழிகாட்டி தற்போது 3.8 மற்றும் அதற்கு மேற்பட்ட பைத்தானின் ஆதரிக்கப்பட்ட "
"பதிப்புகளுக்கு பொருந்தும்."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide uses the term **package** to refer to a :term:`Distribution "
"Package`, which commonly is installed from an external host. This differs "
"from the term :term:`Import Package` which refers to import modules in your "
"Python source code."
msgstr ""
"இந்த வழிகாட்டி ஒரு: கால: `விநியோக தொகுப்பு` ஐக் குறிக்க ** தொகுப்பு ** என்ற "
"வார்த்தையைப் பயன்படுத்துகிறது, இது பொதுவாக வெளிப்புற ஓச்டிலிருந்து "
"நிறுவப்படுகிறது. இது வார்த்தையிலிருந்து வேறுபடுகிறது: சொல்: `இறக்குமதி "
"தொகுப்பு` இது உங்கள் பைதான் மூலக் குறியீட்டில் தொகுதிகளை இறக்குமதி செய்வதைக்"
" குறிக்கிறது."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide has the prerequisite that you are using an official Python "
"version obtained from <https://www.python.org/downloads/>. If you are using "
"your operating system's package manager to install Python, please ensure "
"that Python is installed before proceeding with these steps."
msgstr ""
"இந்த வழிகாட்டியில் <https://www.python.org/downloads/> இலிருந்து பெறப்பட்ட "
"அதிகாரப்பூர்வ பைதான் பதிப்பைப் பயன்படுத்துகிறீர்கள் என்ற முன்நிபந்தனை "
"உள்ளது. பைத்தானை நிறுவ உங்கள் இயக்க முறைமையின் தொகுப்பு மேலாளரைப் "
"பயன்படுத்துகிறீர்கள் என்றால், இந்த படிகளைத் தொடர முன் பைதான் "
"நிறுவப்பட்டிருப்பதை உறுதிப்படுத்தவும்."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Create and Use Virtual Environments"
msgstr "மெய்நிகர் சூழல்களை உருவாக்கி பயன்படுத்தவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Create a new virtual environment"
msgstr "புதிய மெய்நிகர் சூழலை உருவாக்கவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`venv` (for Python 3) allows you to manage separate package "
"installations for different projects. It creates a \"virtual\" isolated "
"Python installation. When you switch projects, you can create a new virtual "
"environment which is isolated from other virtual environments. You benefit "
"from the virtual environment since packages can be installed confidently and"
" will not interfere with another project's environment."
msgstr ""
". இது ஒரு \"மெய்நிகர்\" தனிமைப்படுத்தப்பட்ட பைதான் நிறுவலை உருவாக்குகிறது. "
"நீங்கள் திட்டங்களை மாற்றும்போது, ​​பிற மெய்நிகர் சூழல்களிலிருந்து "
"தனிமைப்படுத்தப்பட்ட புதிய மெய்நிகர் சூழலை உருவாக்கலாம். மெய்நிகர் சூழலில் "
"இருந்து நீங்கள் பயனடைகிறீர்கள், ஏனெனில் தொகுப்புகள் நம்பிக்கையுடன் "
"நிறுவப்படலாம், மேலும் மற்றொரு திட்டத்தின் சூழலில் தலையிடாது."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is recommended to use a virtual environment when working with third party"
" packages."
msgstr ""
"மூன்றாம் தரப்பு தொகுப்புகளுடன் பணிபுரியும் போது மெய்நிகர் சூழலைப் பயன்படுத்த"
" பரிந்துரைக்கப்படுகிறது."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To create a virtual environment, go to your project's directory and run the "
"following command. This will create a new virtual environment in a local "
"folder named ``.venv``:"
msgstr ""
"மெய்நிகர் சூழலை உருவாக்க, உங்கள் திட்டத்தின் கோப்பகத்திற்குச் சென்று "
"பின்வரும் கட்டளையை இயக்கவும். இது `` .venv`` என்ற உள்ளக கோப்புறையில் புதிய "
"மெய்நிகர் சூழலை உருவாக்கும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The second argument is the location to create the virtual environment. "
"Generally, you can just create this in your project and call it ``.venv``."
msgstr ""
"இரண்டாவது உரையாடல் மெய்நிகர் சூழலை உருவாக்குவதற்கான இடம். பொதுவாக, இதை "
"உங்கள் திட்டத்தில் உருவாக்கி `` .venv`` என்று அழைக்கலாம்."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``venv`` will create a virtual Python installation in the ``.venv`` folder."
msgstr ""
"`` .venv`` கோப்புறையில் ஒரு மெய்நிகர் பைதான் நிறுவலை உருவாக்கும் `` vev``."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You should exclude your virtual environment directory from your version "
"control system using ``.gitignore`` or similar."
msgstr ""
"உங்கள் மெய்நிகர் சுற்றுச்சூழல் கோப்பகத்தை உங்கள் பதிப்பு கட்டுப்பாட்டு "
"அமைப்பிலிருந்து `` .gitignore`` அல்லது அதற்கு ஒத்ததாக விலக்க வேண்டும்."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Activate a virtual environment"
msgstr "மெய்நிகர் சூழலை செயல்படுத்தவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:76
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Before you can start installing or using packages in your virtual "
"environment you'll need to ``activate`` it. Activating a virtual environment"
" will put the virtual environment-specific ``python`` and ``pip`` "
"executables into your shell's ``PATH``."
msgstr ""
"உங்கள் மெய்நிகர் சூழலில் தொகுப்புகளை நிறுவவோ பயன்படுத்தவோ தொடங்குவதற்கு "
"முன், நீங்கள் அதை `` செயல்படுத்த வேண்டும்`. ஒரு மெய்நிகர் சூழலைச் "
"செயல்படுத்துவது மெய்நிகர் சூழல் சார்ந்த `` பைதான்`` மற்றும் `பிப்`` "
"இயங்கக்கூடியவை உங்கள் செல்லின்` `பாதை`` செய்யும்."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To confirm the virtual environment is activated, check the location of your "
"Python interpreter:"
msgstr ""
"மெய்நிகர் சூழல் செயல்படுத்தப்பட்டதை உறுதிப்படுத்த, உங்கள் பைதான் "
"மொழிபெயர்ப்பாளரின் இருப்பிடத்தை சரிபார்க்கவும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While the virtual environment is active, the above command will output a "
"filepath that includes the ``.venv`` directory, by ending with the "
"following:"
msgstr ""
"மெய்நிகர் சூழல் செயலில் இருக்கும்போது, ​​மேற்கண்ட கட்டளை பின்வருவனவற்றுடன் "
"முடிவடைவதன் மூலம் `` .venv`` கோப்பகத்தை உள்ளடக்கிய ஒரு கோப்பு இடத்தை "
"வெளியிடும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While a virtual environment is activated, pip will install packages into "
"that specific environment. This enables you to import and use packages in "
"your Python application."
msgstr ""
"ஒரு மெய்நிகர் சூழல் செயல்படுத்தப்படும் போது, ​​பிஐபி அந்த குறிப்பிட்ட "
"சூழலில் தொகுப்புகளை நிறுவும். இது உங்கள் பைதான் பயன்பாட்டில் தொகுப்புகளை "
"இறக்குமதி செய்து பயன்படுத்த உதவுகிறது."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Deactivate a virtual environment"
msgstr "மெய்நிகர் சூழலை செயலிழக்கச் செய்யுங்கள்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you want to switch projects or leave your virtual environment, "
"``deactivate`` the environment:"
msgstr ""
"நீங்கள் திட்டங்களை மாற்ற விரும்பினால் அல்லது உங்கள் மெய்நிகர் சூழலை விட்டு "
"வெளியேற விரும்பினால், `` செயலிழக்கச் செய்யுங்கள்` சூழலை:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Closing your shell will deactivate the virtual environment. If you open a "
"new shell window and want to use the virtual environment, reactivate it."
msgstr ""
"உங்கள் செல்லை மூடுவது மெய்நிகர் சூழலை செயலிழக்கச் செய்யும். நீங்கள் ஒரு "
"புதிய செல் சாளரத்தைத் திறந்து மெய்நிகர் சூழலைப் பயன்படுத்த விரும்பினால், அதை"
" மீண்டும் செயல்படுத்தவும்."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Reactivate a virtual environment"
msgstr "மெய்நிகர் சூழலை மீண்டும் செயல்படுத்தவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:147
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you want to reactivate an existing virtual environment, follow the same "
"instructions about activating a virtual environment. There's no need to "
"create a new virtual environment."
msgstr ""
"ஏற்கனவே உள்ள மெய்நிகர் சூழலை மீண்டும் செயல்படுத்த விரும்பினால், மெய்நிகர் "
"சூழலை செயல்படுத்துவது குறித்த அதே வழிமுறைகளைப் பின்பற்றவும். புதிய மெய்நிகர்"
" சூழலை உருவாக்க வேண்டிய அவசியமில்லை."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:155
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`pip` is the reference Python package manager. It's used to install and"
" update packages into a virtual environment."
msgstr ""
": குறிப்பு: `பிப்` என்பது குறிப்பு பைதான் தொகுப்பு மேலாளர். தொகுப்புகளை "
"மெய்நிகர் சூழலில் நிறுவவும் புதுப்பிக்கவும் இது பயன்படுகிறது."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:161
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The Python installers for macOS include pip. On Linux, you may have to "
"install an additional package such as ``python3-pip``. You can make sure "
"that pip is up-to-date by running:"
msgstr ""
"MACOS க்கான பைதான் நிறுவிகளில் PIP அடங்கும். லினக்சில், `` பைதான் 3-பிப்`` "
"போன்ற கூடுதல் தொகுப்பை நீங்கள் நிறுவ வேண்டியிருக்கும். இயங்குவதன் மூலம் "
"பிஐபி புதுப்பித்த நிலையில் இருப்பதை நீங்கள் உறுதிப்படுத்திக் கொள்ளலாம்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:170
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Afterwards, you should have the latest version of pip installed in your user"
" site:"
msgstr ""
"பின்னர், உங்கள் பயனர் தளத்தில் PIP இன் அண்மைக் கால பதிப்பை நிறுவ வேண்டும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:179
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The Python installers for Windows include pip. You can make sure that pip is"
" up-to-date by running:"
msgstr ""
"விண்டோசிற்கான பைதான் நிறுவிகளில் பிஐபி அடங்கும். இயங்குவதன் மூலம் பிஐபி "
"புதுப்பித்த நிலையில் இருப்பதை நீங்கள் உறுதிப்படுத்திக் கொள்ளலாம்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:187
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Afterwards, you should have the latest version of pip:"
msgstr "பின்னர், PIP இன் அண்மைக் கால பதிப்பு உங்களிடம் இருக்க வேண்டும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:195
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install packages using pip"
msgstr "PIP ஐப் பயன்படுத்தி தொகுப்புகளை நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:197
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When your virtual environment is activated, you can install packages. Use "
"the ``pip install`` command to install packages."
msgstr ""
"உங்கள் மெய்நிகர் சூழல் செயல்படுத்தப்படும்போது, ​​நீங்கள் தொகுப்புகளை "
"நிறுவலாம். தொகுப்புகளை நிறுவ `` பிஐபி நிறுவல்` கட்டளையைப் பயன்படுத்தவும்."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:201
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install a package"
msgstr "ஒரு தொகுப்பை நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:203
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example,let's install the `Requests`_ library from the :term:`Python "
"Package Index (PyPI)`:"
msgstr ""
"எடுத்துக்காட்டாக, `கோரிக்கைகள்`_ நூலகத்தை நிறுவுவோம்: கால:` பைதான் தொகுப்பு "
"குறியீட்டு (PYPI) `:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:218
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip should download requests and all of its dependencies and install them:"
msgstr ""
"பிஐபி கோரிக்கைகள் மற்றும் அதன் அனைத்து சார்புகளையும் பதிவிறக்கம் செய்து "
"அவற்றை நிறுவ வேண்டும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:239
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install a specific package version"
msgstr "ஒரு குறிப்பிட்ட தொகுப்பு பதிப்பை நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip allows you to specify which version of a package to install using "
":term:`version specifiers <Version Specifier>`. For example, to install a "
"specific version of ``requests``:"
msgstr ""
"ஒரு தொகுப்பின் எந்த பதிப்பை நிறுவ வேண்டும் என்பதைக் குறிப்பிட PIP உங்களை "
"அனுமதிக்கிறது: கால: `பதிப்பு விவரக்குறிப்புகள் <பதிப்பு விவரக்குறிப்பு>`. "
"எடுத்துக்காட்டாக, `` கோரிக்கைகள்`` இன் குறிப்பிட்ட பதிப்பை நிறுவ:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:257
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To install the latest ``2.x`` release of requests:"
msgstr "கோரிக்கைகளின் அண்மைக் கால `` 2.x`` வெளியீட்டை நிறுவ:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To install pre-release versions of packages, use the ``--pre`` flag:"
msgstr ""
"தொகுப்புகளின் முன் வெளியீட்டு பதிப்புகளை நிறுவ, `` --pre`` கொடியைப் "
"பயன்படுத்தவும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:287
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install extras"
msgstr "கூடுதல் நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:289
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some packages have optional `extras`_. You can tell pip to install these by "
"specifying the extra in brackets:"
msgstr ""
"சில தொகுப்புகளில் விருப்பமான `எக்ச்ட்ராச்`_ உள்ளது. அடைப்புக்குறிக்குள் "
"கூடுதல் குறிப்பைக் குறிப்பிடுவதன் மூலம் இவற்றை நிறுவ பிப் சொல்லலாம்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:309
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install a package from source"
msgstr "மூலத்திலிருந்து ஒரு தொகுப்பை நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:311
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip can install a package directly from its source code. For example, to "
"install the source code in the ``google-auth`` directory:"
msgstr ""
"பிஐபி அதன் மூலக் குறியீட்டிலிருந்து நேரடியாக ஒரு தொகுப்பை நிறுவ முடியும். "
"எடுத்துக்காட்டாக, மூலக் குறியீட்டை `` Google-auth`` கோப்பகத்தில் நிறுவ:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:328
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Additionally, pip can install packages from source in :doc:`development mode"
" <setuptools:userguide/development_mode>`, meaning that changes to the "
"source directory will immediately affect the installed package without "
"needing to re-install:"
msgstr ""
"கூடுதலாக, பிஐபி மூலத்திலிருந்து தொகுப்புகளை நிறுவலாம்: டிஓசி: `மேம்பாட்டு "
"முறை <செட்டப்டூல்ச்: யூசர்சூட்/டெவலப்மென்ட்_மோட்>`, அதாவது மூல கோப்பகத்தில் "
"மாற்றங்கள் மீண்டும் நிறுவத் தேவையில்லாமல் நிறுவப்பட்ட தொகுப்பை உடனடியாக "
"பாதிக்கும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:347
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install from version control systems"
msgstr "பதிப்பு கட்டுப்பாட்டு அமைப்புகளிலிருந்து நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:349
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip can install packages directly from their version control system. For "
"example, you can install directly from a git repository:"
msgstr ""
"பிஐபி அவற்றின் பதிப்பு கட்டுப்பாட்டு அமைப்பிலிருந்து நேரடியாக தொகுப்புகளை "
"நிறுவ முடியும். எடுத்துக்காட்டாக, நீங்கள் ஒரு அறிவிலி களஞ்சியத்திலிருந்து "
"நேரடியாக நிறுவலாம்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:356
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more information on supported version control systems and syntax, see "
"pip's documentation on :ref:`VCS Support <pip:VCS Support>`."
msgstr ""
"ஆதரிக்கப்பட்ட பதிப்பு கட்டுப்பாட்டு அமைப்புகள் மற்றும் தொடரியல் பற்றிய "
"கூடுதல் தகவலுக்கு, பைப்பின் ஆவணங்களைப் பார்க்கவும்: குறிப்பு: `வி.சி.எச் "
"உதவி <பிஐபி: வி.சி.எச் ஆதரவு>`."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:361
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install from local archives"
msgstr "உள்ளக காப்பகங்களிலிருந்து நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:363
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you have a local copy of a :term:`Distribution Package`'s archive (a zip,"
" wheel, or tar file) you can install it directly with pip:"
msgstr ""
"உங்களிடம் ஒரு உள்ளக நகல் இருந்தால்: கால: `விநியோக தொகுப்பின் காப்பகம் (ஒரு "
"சிப், சக்கரம் அல்லது தார் கோப்பு) அதை நேரடியாக PIP உடன் நிறுவலாம்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:378
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you have a directory containing archives of multiple packages, you can "
"tell pip to look for packages there and not to use the :term:`Python Package"
" Index (PyPI)` at all:"
msgstr ""
"பல தொகுப்புகளின் காப்பகங்களைக் கொண்ட ஒரு அடைவு உங்களிடம் இருந்தால், நீங்கள் "
"அங்கு தொகுப்புகளைத் தேடும்படி பைப்பிடம் சொல்லலாம், மேலும் பயன்படுத்த "
"வேண்டாம்: கால: `பைதான் தொகுப்பு குறியீட்டு (PYPI)`."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:394
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is useful if you are installing packages on a system with limited "
"connectivity or if you want to strictly control the origin of distribution "
"packages."
msgstr ""
"வரையறுக்கப்பட்ட இணைப்பு கொண்ட கணினியில் நீங்கள் தொகுப்புகளை நிறுவினால் "
"அல்லது விநியோக தொகுப்புகளின் தோற்றத்தை கண்டிப்பாக கட்டுப்படுத்த விரும்பினால்"
" இது பயனுள்ளதாக இருக்கும்."

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:400
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install from other package indexes"
msgstr "பிற தொகுப்பு குறியீடுகளிலிருந்து நிறுவவும்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:402
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you want to download packages from a different index than the "
":term:`Python Package Index (PyPI)`, you can use the ``--index-url`` flag:"
msgstr ""
"இதை விட வேறு குறியீட்டிலிருந்து தொகுப்புகளை பதிவிறக்கம் செய்ய விரும்பினால்: "
"கால: `பைதான் தொகுப்பு குறியீட்டு (PYPI)`, நீங்கள் `` --index-url`` கொடியைப் "
"பயன்படுத்தலாம்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:417
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you want to allow packages from both the :term:`Python Package Index "
"(PyPI)` and a separate index, you can use the ``--extra-index-url`` flag "
"instead:"
msgstr ""
"இரண்டிலிருந்தும் தொகுப்புகளை அனுமதிக்க விரும்பினால்: சொல்: `பைதான் தொகுப்பு "
"குறியீட்டு (PYPI)` மற்றும் ஒரு தனி குறியீட்டை, அதற்கு பதிலாக `` --extra-"
"index-url`` கொடியைப் பயன்படுத்தலாம்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:434
#: ../source/tutorials/installing-packages.rst:393
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Upgrading packages"
msgstr "தொகுப்புகளை மேம்படுத்துதல்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:436
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip can upgrade packages in-place using the ``--upgrade`` flag. For example,"
" to install the latest version of ``requests`` and all of its dependencies:"
msgstr ""
"பிஐபி `` --upgrade`` கொடியைப் பயன்படுத்தி தொகுப்புகளை மேம்படுத்தலாம். "
"எடுத்துக்காட்டாக, `` கோரிக்கைகள்`` மற்றும் அதன் அனைத்து சார்புகளின் அண்மைக் "
"கால பதிப்பையும் நிறுவ:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:452
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using a requirements file"
msgstr "தேவைகள் கோப்பைப் பயன்படுத்துதல்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:454
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Instead of installing packages individually, pip allows you to declare all "
"dependencies in a :ref:`Requirements File <pip:Requirements Files>`. For "
"example you could create a :file:`requirements.txt` file containing:"
msgstr ""
"தொகுப்புகளை தனித்தனியாக நிறுவுவதற்கு பதிலாக, அனைத்து சார்புகளையும் A: Ref: "
"`தேவைகள் கோப்பு <PIP: தேவைகள் கோப்புகள்>` இல் அறிவிக்க PIP உங்களை "
"அனுமதிக்கிறது. எடுத்துக்காட்டாக, நீங்கள் ஒரு: கோப்பு: `தேவைகள். TXT` கோப்பு:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:463
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"And tell pip to install all of the packages in this file using the ``-r`` "
"flag:"
msgstr ""
"`` -R`` கொடியைப் பயன்படுத்தி இந்த கோப்பில் உள்ள அனைத்து தொகுப்புகளையும் "
"நிறுவ பைப்பிடம் சொல்லுங்கள்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:478
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Freezing dependencies"
msgstr "உறைபனி சார்புகள்"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:480
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pip can export a list of all installed packages and their versions using the"
" ``freeze`` command:"
msgstr ""
"`` ஃப்ரீச்`` கட்டளையைப் பயன்படுத்தி நிறுவப்பட்ட அனைத்து தொகுப்புகளின் "
"பட்டியலையும் அவற்றின் பதிப்புகளையும் பிஐபி ஏற்றுமதி செய்யலாம்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:495
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Which will output a list of package specifiers such as:"
msgstr "இது போன்ற தொகுப்பு குறிப்பான்களின் பட்டியலை வெளியிடும்:"

#: ../source/guides/installing-using-pip-and-virtual-environments.rst:511
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``pip freeze`` command is useful for creating :ref:`pip:Requirements "
"Files` that can re-create the exact versions of all packages installed in an"
" environment."
msgstr ""
"`` பிஐபி ஃப்ரீச்`` கட்டளை உருவாக்க பயனுள்ளதாக இருக்கும்: குறிப்பு: `பிஐபி: "
"தேவைகள் கோப்புகள்` இது சூழலில் நிறுவப்பட்ட அனைத்து தொகுப்புகளின் சரியான "
"பதிப்புகளை மீண்டும் உருவாக்க முடியும்."

#: ../source/guides/installing-using-virtualenv.rst:2
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing packages using virtualenv"
msgstr "மெய்நிகர் ஈன்வி பயன்படுத்தி தொகுப்புகளை நிறுவுதல்"

#: ../source/guides/installing-using-virtualenv.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide discusses how to install packages using :ref:`pip` and "
":ref:`virtualenv`, a tool to create isolated Python environments."
msgstr ""
"இந்த வழிகாட்டி பயன்படுத்தி தொகுப்புகளை எவ்வாறு நிறுவுவது என்பதை "
"விவாதிக்கிறது: ref: `PIP` மற்றும்: Ref:` Virtualenv`, தனிமைப்படுத்தப்பட்ட "
"பைதான் சூழல்களை உருவாக்குவதற்கான ஒரு கருவி."

#: ../source/guides/installing-using-virtualenv.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This \"how to\" guide on installing packages and using :ref:`virtualenv` is "
"under development. Please refer to the :ref:`virtualenv` documentation for "
"details on installation and usage."
msgstr ""
"தொகுப்புகளை நிறுவுவதற்கும் பயன்படுத்துவதற்கும் இந்த \"எப்படி\" வழிகாட்டுதல்:"
" குறிப்பு: `மெய்நிகர்என்வ்` வளர்ச்சியில் உள்ளது. நிறுவல் மற்றும் பயன்பாடு "
"குறித்த விவரங்களுக்கு: ref: `மெய்நிகர்என்வ்` ஆவணங்களை தயவுசெய்து "
"பார்க்கவும்."

#: ../source/guides/installing-using-virtualenv.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This doc uses the term **package** to refer to a :term:`Distribution "
"Package`  which is different from an :term:`Import Package` that which is "
"used to import modules in your Python source code."
msgstr ""
"இந்த ஆவணம் ** தொகுப்பு ** என்ற வார்த்தையைப் பயன்படுத்துகிறது: கால: `விநியோக "
"தொகுப்பு` இது ஒரு: கால:` இறக்குமதி தொகுப்பு` உங்கள் பைதான் மூலக் "
"குறியீட்டில் தொகுதிகளை இறக்குமதி செய்யப் பயன்படுகிறது."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Licensing examples and user scenarios"
msgstr "உரிமம் அளிக்கும் எடுத்துக்காட்டுகள் மற்றும் பயனர் காட்சிகள்"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":pep:`639` has specified the way to declare a project's license and paths to"
" license files and other legally required information. This document aims to"
" provide clear guidance how to migrate from the legacy to the standardized "
"way of declaring licenses."
msgstr ""
". இந்த ஆவணம் உரிமைகளை அறிவிக்கும் தரப்படுத்தப்பட்ட வழிக்கு "
"மரபுரிமையிலிருந்து எவ்வாறு குடிபெயர்வது என்பதை தெளிவான வழிகாட்டுதலை "
"வழங்குவதை நோக்கமாகக் கொண்டுள்ளது."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Licensing Examples"
msgstr "உரிம எடுத்துக்காட்டுகள்"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Basic example"
msgstr "அடிப்படை எடுத்துக்காட்டு"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The Setuptools project itself, as of `version 75.6.0 <setuptools7560_>`__, "
"does not use the ``License`` field in its own project source metadata. "
"Further, it no longer explicitly specifies "
"``license_file``/``license_files`` as it did previously, since Setuptools "
"relies on its own automatic inclusion of license-related files matching "
"common patterns, such as the :file:`LICENSE` file it uses."
msgstr ""
"`பதிப்பு 75.6.0 <etuptools7560_> __ __, அதன் சொந்த திட்ட மூல "
"மெட்டாடேட்டாவில்` `உரிமம்`` புலத்தைப் பயன்படுத்தாது. மேலும், இது முன்னர் "
"செய்ததைப் போலவே `` உரிமம்_பீல்``/`உரிமம்_பில்கள்`` ஐ இனி வெளிப்படையாகக் "
"குறிப்பிடவில்லை, ஏனெனில் செடுப்டூல்ச் அதன் சொந்த உரிமம் தொடர்பான கோப்புகளை "
"தானாகவே சேர்ப்பதை நம்பியுள்ளது:` உரிமம்` கோப்பு போன்ற பொதுவான வடிவங்களுடன் "
"பொருந்துகிறது இது பயன்படுத்துகிறது."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It includes the following license-related metadata in its "
":file:`pyproject.toml`:"
msgstr ""
"இது அதன் பின்வரும் உரிமம் தொடர்பான மெட்டாடேட்டாவை உள்ளடக்கியது: கோப்பு: "
"`pyproject.toml`:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The simplest migration to PEP 639 would consist of using this instead:"
msgstr ""
"PEP 639 க்கு எளிமையான இடம்பெயர்வு இதற்கு பதிலாக இதைப் பயன்படுத்துவதைக் "
"கொண்டிருக்கும்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Or, if the project used :file:`setup.cfg`, in its ``[metadata]`` table:"
msgstr ""
"அல்லது, திட்டம் பயன்படுத்தப்பட்டால்: கோப்பு: `setup.cfg`, அதன்` "
"`[மெட்டாடேட்டா]` `அட்டவணை:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The output Core Metadata for the distribution packages would then be:"
msgstr "விநியோக தொகுப்புகளுக்கான வெளியீட்டு கோர் மேனிலை தரவு பின்னர்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :file:`LICENSE` file would be stored at "
":file:`/setuptools-{VERSION}/LICENSE` in the sdist and "
":file:`/setuptools-{VERSION}.dist-info/licenses/LICENSE` in the wheel, and "
"unpacked from there into the site directory (e.g. :file:`site-packages/`) on"
" installation; :file:`/` is the root of the respective archive and "
"``{VERSION}`` the version of the Setuptools release in the Core Metadata."
msgstr ""
"The: கோப்பு: `உரிமம்` கோப்பு இங்கே சேமிக்கப்படும்: கோப்பு:`/setuptools- "
"{VERSION}/உரிமம்` SDIST இல் மற்றும்: கோப்பு: `/setuptools- {VERSION} .dist-"
"info/உரிமங்கள்/உரிமம்` இல் சக்கரம், மற்றும் அங்கிருந்து தள கோப்பகத்தில் "
"(எ.கா.: கோப்பு: `தள-பேக்கேச்கள்/`) நிறுவலில் திறக்கப்படவில்லை; ."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Advanced example"
msgstr "மேம்பட்ட எடுத்துக்காட்டு"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Suppose Setuptools were to include the licenses of the third-party projects "
"that are vendored in the :file:`setuptools/_vendor/` and "
":file:`pkg_resources/_vendor/` directories; specifically:"
msgstr ""
"செடிப்டூல்ச் மூன்றாம் தரப்பு திட்டங்களின் உரிமங்களை உள்ளடக்கியது என்று "
"வைத்துக்கொள்வோம்: கோப்பு: `setuptools/_vendor/` மற்றும்: கோப்பு: "
"`pkg_resources/_vendor/` கோப்பகங்கள்; குறிப்பாக:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:84
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The license expressions for these projects are:"
msgstr "இந்த திட்டங்களுக்கான உரிம வெளிப்பாடுகள்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A comprehensive license expression covering both Setuptools proper and its "
"vendored dependencies would contain these metadata, combining all the "
"license expressions into one. Such an expression might be:"
msgstr ""
"செட்ப்டூல்கள் இரண்டையும் உள்ளடக்கிய ஒரு விரிவான உரிம வெளிப்பாடு மற்றும் அதன்"
" விற்பனையான சார்புநிலைகள் இந்த மெட்டாடேட்டாவைக் கொண்டிருக்கும், இது அனைத்து "
"உரிம வெளிப்பாடுகளையும் ஒன்றாக இணைக்கிறது. அத்தகைய வெளிப்பாடு இருக்கலாம்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition, per the requirements of the licenses, the relevant license "
"files must be included in the package. Suppose the :file:`LICENSE` file "
"contains the text of the MIT license and the copyrights used by Setuptools, "
"``pyparsing``, ``more_itertools`` and ``ordered-set``; and the "
":file:`LICENSE*` files in the :file:`setuptools/_vendor/packaging/` "
"directory contain the Apache 2.0 and 2-clause BSD license text, and the "
"Packaging copyright statement and `license choice notice "
"<packaginglicense_>`__."
msgstr ""
"கூடுதலாக, உரிமங்களின் தேவைகளின்படி, தொடர்புடைய உரிமக் கோப்புகள் தொகுப்பில் "
"சேர்க்கப்பட வேண்டும். : கோப்பு: `உரிமம்` கோப்பில் எம்ஐடி உரிமத்தின் உரை "
"மற்றும் செடுப்டூல்ச் பயன்படுத்தும் பதிப்புரிமை,` `பைபார்சிங்``,` "
"`மோர்_ஐடெர்டூல்ச்`` மற்றும்` `ஆர்டர் செய்யப்பட்ட-செட்`; மற்றும் கோப்பு: "
"`உரிமம்*` கோப்புகள்: கோப்பில்: `setuptools/_vendor/பேக்கேசிங்/` கோப்பகத்தில்"
" அப்பாச்சி 2.0 மற்றும் 2-உட்பிரிவு பி.எச்.டி உரிம உரை உள்ளது, மற்றும் "
"பேக்கேசிங் பதிப்புரிமை அறிக்கை மற்றும் `உரிமம் தேர்வு அறிவிப்பு <பேக்கேசிங் "
"லிசன்ச்_>` __."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Specifically, we assume the license files are located at the following paths"
" in the project source tree (relative to the project root and "
":file:`pyproject.toml`):"
msgstr ""
"குறிப்பாக, உரிமக் கோப்புகள் திட்ட மூல மரத்தில் பின்வரும் பாதைகளில் "
"அமைந்துள்ளன என்று கருதுகிறோம் (திட்ட மூலத்துடன் தொடர்புடையது: கோப்பு: "
"`pyproject.toml`):"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Putting it all together, our :file:`pyproject.toml` would be:"
msgstr ""
"அனைத்தையும் ஒன்றாக இணைத்து, எங்கள்: கோப்பு: `pyproject.toml` இருக்கும்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:131
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Or alternatively, the license files can be specified explicitly (paths will "
"be interpreted as glob patterns):"
msgstr ""
"அல்லது மாற்றாக, உரிமக் கோப்புகளை வெளிப்படையாக குறிப்பிடலாம் (பாதைகள் குளோப் "
"வடிவங்கள் என விளக்கப்படும்):"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "If our project used :file:`setup.cfg`, we could define this in :"
msgstr ""
"எங்கள் திட்டம் பயன்படுத்தப்பட்டால்: கோப்பு: `setup.cfg`, இதை நாங்கள் "
"வரையறுக்கலாம்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"With either approach, the output Core Metadata in the distribution would be:"
msgstr "எந்தவொரு அணுகுமுறையிலும், விநியோகத்தில் வெளியீட்டு கோர் மெட்டாடேட்டா:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:168
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In the resulting sdist, with :file:`/` as the root of the archive and "
"``{VERSION}`` the version of the Setuptools release specified in the Core "
"Metadata, the license files would be located at the paths:"
msgstr ""
"இதன் விளைவாக வரும் SDIST இல், உடன்: கோப்பு: `/` காப்பகத்தின் மூலமாகவும், "
"`{{VERSION}` `கோர் மெட்டாடேட்டாவில் குறிப்பிடப்பட்டுள்ள செடிப்டூல்ச் "
"வெளியீட்டின் பதிப்பாகவும், உரிமக் கோப்புகள் பாதைகளில் அமைந்திருக்கும்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:179
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In the built wheel, with :file:`/` being the root of the archive and "
"``{VERSION}`` as the previous, the license files would be stored at:"
msgstr ""
"கட்டப்பட்ட சக்கரத்தில், உடன்: கோப்பு: `/` காப்பகத்தின் வேர் மற்றும் `` "
"{VERSION} `` முந்தையதைப் போல, உரிமக் கோப்புகள் சேமிக்கப்படும்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:189
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Finally, in the installed project, with :file:`site-packages/` being the "
"site dir and ``{VERSION}`` as the previous, the license files would be "
"installed to:"
msgstr ""
"இறுதியாக, நிறுவப்பட்ட திட்டத்தில், உடன்: கோப்பு: `தள-பேக்கேச்கள்/` தள அடைவு "
"மற்றும் `` {VERSION} `` முந்தையதைப் போல, உரிமக் கோப்புகள் நிறுவப்படும்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:201
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Expression examples"
msgstr "வெளிப்பாடு எடுத்துக்காட்டுகள்"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:203
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Some additional examples of valid ``License-Expression`` values:"
msgstr ""
"செல்லுபடியாகும் `` உரிம-வெளிப்பாடு`` மதிப்புகளின் சில கூடுதல் "
"எடுத்துக்காட்டுகள்:"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:218
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "User Scenarios"
msgstr "பயனர் காட்சிகள்"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following covers the range of common use cases from a user perspective, "
"providing guidance for each. Do note that the following should **not** be "
"considered legal advice, and readers should consult a licensed legal "
"practitioner in their jurisdiction if they are unsure about the specifics "
"for their situation."
msgstr ""
"பின்வருபவை பயனர் கண்ணோட்டத்தில் பொதுவான பயன்பாட்டு நிகழ்வுகளின் வரம்பை "
"உள்ளடக்கியது, ஒவ்வொன்றிற்கும் வழிகாட்டுதலை வழங்குகிறது. பின்வருபவை சட்ட "
"ஆலோசனையாக கருதப்படக்கூடாது என்பதை நினைவில் கொள்க, மேலும் வாசகர்கள் தங்கள் "
"நிலைமைக்கான பிரத்தியேகங்களைப் பற்றி உறுதியாக தெரியாவிட்டால், உரிமம் பெற்ற "
"சட்ட பயிற்சியாளரை தங்கள் அதிகார வரம்பில் அணுக வேண்டும்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:228
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "I have a private package that won't be distributed"
msgstr "என்னிடம் ஒரு தனியார் தொகுப்பு உள்ளது, அது விநியோகிக்கப்படாது"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your package isn't shared publicly, i.e. outside your company, "
"organization or household, it *usually* isn't strictly necessary to include "
"a formal license, so you wouldn't necessarily have to do anything extra "
"here."
msgstr ""
"உங்கள் தொகுப்பு பகிரங்கமாக பகிரப்படாவிட்டால், அதாவது உங்கள் நிறுவனம், "
"அமைப்பு அல்லது வீட்டுக்கு வெளியே, இது * வழக்கமாக * முறையான உரிமத்தை சேர்க்க "
"கண்டிப்பாக அவசியமில்லை, எனவே நீங்கள் இங்கே கூடுதல் எதையும் செய்ய வேண்டிய "
"அவசியமில்லை."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:234
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, it is still a good idea to include ``LicenseRef-Proprietary`` as a "
"license expression in your package configuration, and/or a copyright "
"statement and any legal notices in a :file:`LICENSE.txt` file in the root of"
" your project directory, which will be automatically included by packaging "
"tools."
msgstr ""
"எவ்வாறாயினும், உங்கள் தொகுப்பு உள்ளமைவில் உரிம வெளிப்பாடாக `` உரிமம் "
"பெறுதல்-தனியுரிமைக்குறி`, மற்றும்/அல்லது பதிப்புரிமை அறிக்கை மற்றும் ஒரு "
"சட்ட அறிவிப்புகளை ஒரு: கோப்பு: `உரிமம். உங்கள் திட்ட அடைவு, இது தானாக "
"பேக்கேசிங் கருவிகளால் சேர்க்கப்படும்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:242
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "I just want to share my own work without legal restrictions"
msgstr ""
"நான் எனது சொந்த வேலையை சட்டரீதியான கட்டுப்பாடுகள் இல்லாமல் பகிர்ந்து கொள்ள "
"விரும்புகிறேன்"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:244
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While you aren't required to include a license, if you don't, no one has "
"`any permission to download, use or improve your work "
"<dontchoosealicense_>`__, so that's probably the *opposite* of what you "
"actually want. The `MIT license <chooseamitlicense_>`__ is a great choice "
"instead, as it's simple, widely used and allows anyone to do whatever they "
"want with your work (other than sue you, which you probably also don't "
"want)."
msgstr ""
"நீங்கள் உரிமத்தை சேர்க்கத் தேவையில்லை என்றாலும், உங்களிடம் அவ்வாறு "
"செய்யாவிட்டால், உங்கள் வேலையை பதிவிறக்கம் செய்ய, பயன்படுத்த அல்லது "
"மேம்படுத்த யாருக்கும் எந்த அனுமதியும் இல்லை <dontchoosealicense_> `__, எனவே "
"இது நீங்கள் உண்மையில் விரும்பியதற்கு * நேர்மாறாக இருக்கலாம். `எம்ஐடி உரிமம் "
"<Choseamitlicense_> __ __ அதற்கு பதிலாக ஒரு சிறந்த தேர்வாகும், ஏனெனில் இது "
"எளிமையானது, பரவலாகப் பயன்படுத்தப்படுகிறது மற்றும் உங்கள் வேலையுடன் யாரையும் "
"அவர்கள் விரும்பியதைச் செய்ய அனுமதிக்கிறது (நீங்கள் வழக்குத் தொடுப்பதைத் "
"தவிர, நீங்கள் விரும்பாதது)."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:251
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To apply it, just paste `the text <chooseamitlicense_>`__ into a file named "
":file:`LICENSE.txt` at the root of your repo, and add the year and your name"
" to the copyright line. Then, just add ``license = \"MIT\"`` under "
"``[project]`` in your :file:`pyproject.toml` if your packaging tool supports"
" it, or in its config file/section. You're done!"
msgstr ""
"அதைப் பயன்படுத்த, `உரையை <choseamitlicense_> __ __ என்ற கோப்பில் ஒட்டவும்: "
"கோப்பு:` உரிமம். பின்னர், உங்கள்: கோப்பில் `` [திட்டம்] `` `` `` `` "
"[திட்டம்] `` `` `` pyproject.toml` இன் கீழ் `` உரிமம் = \"எம்ஐடி\" "
"சேர்க்கவும் அல்லது அதன் கட்டமைப்பு கோப்பு/பிரிவில் இருந்தால். நீங்கள் "
"முடித்துவிட்டீர்கள்!"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:259
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "I want to distribute my project under a specific license"
msgstr ""
"எனது திட்டத்தை ஒரு குறிப்பிட்ட உரிமத்தின் கீழ் விநியோகிக்க விரும்புகிறேன்"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:261
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To use a particular license, simply paste its text into a "
":file:`LICENSE.txt` file at the root of your repo, if you don't have it in a"
" file starting with :file:`LICENSE` or :file:`COPYING` already, and add "
"``license = \"LICENSE-ID\"`` under ``[project]`` in your "
":file:`pyproject.toml` if your packaging tool supports it, or else in its "
"config file. You can find the ``LICENSE-ID`` and copyable license text on "
"sites like `ChooseALicense <choosealicenselist_>`__ or `SPDX <spdxlist_>`__."
msgstr ""
"ஒரு குறிப்பிட்ட உரிமத்தைப் பயன்படுத்த, அதன் உரையை ஒரு: கோப்பு: `உரிமம். "
"`ஏற்கனவே நகலெடுக்கவும்,` `உரிமம் =\" உரிமம்-ஐடி \"` `[திட்டத்தின்]` `` `` "
"உங்கள்: `pyproject.toml` இன் கீழ் சேர்க்கவும், உங்கள் பேக்கேசிங் கருவி அதை "
"ஆதரித்தால், அல்லது அதன் கட்டமைப்பு கோப்பில் வேறு. `` உரிமம்-ஐடி`` மற்றும் "
"நகலெடுக்கக்கூடிய உரிம உரையை `Choosealicense <chosealicenselist_> __ __ "
"அல்லது` spdx <spdxlist_> __ __ போன்ற தளங்களில் காணலாம்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:270
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Many popular code hosts, project templates and packaging tools can add the "
"license file for you, and may support the expression as well in the future."
msgstr ""
"பல பிரபலமான குறியீடு ஓச்ட்கள், திட்ட வார்ப்புருக்கள் மற்றும் பேக்கேசிங் "
"கருவிகள் உங்களுக்காக உரிமக் கோப்பைச் சேர்க்கலாம், மேலும் எதிர்காலத்திலும் "
"வெளிப்பாட்டை ஆதரிக்கலாம்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:275
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "I maintain an existing package that's already licensed"
msgstr "ஏற்கனவே உரிமம் பெற்ற ஒரு தொகுப்பை நான் பராமரிக்கிறேன்"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:277
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you already have license files and metadata in your project, you should "
"only need to make a couple of tweaks to take advantage of the new "
"functionality."
msgstr ""
"உங்கள் திட்டத்தில் ஏற்கனவே உரிமக் கோப்புகள் மற்றும் மேனிலை தரவு இருந்தால், "
"புதிய செயல்பாட்டைப் பயன்படுத்த நீங்கள் இரண்டு மாற்றங்களை மட்டுமே செய்ய "
"வேண்டும்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:281
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In your project config file, enter your license expression under ``license``"
" (``[project]`` table in :file:`pyproject.toml`), or the equivalent for your"
" packaging tool, and make sure to remove any legacy ``license`` table "
"subkeys or ``License ::`` classifiers. Your existing ``license`` value may "
"already be valid as one (e.g. ``MIT``, ``Apache-2.0 OR BSD-2-Clause``, etc);"
" otherwise, check the `SPDX license list <spdxlist_>`__ for the identifier "
"that matches the license used in your project."
msgstr ""
"உங்கள் திட்ட கட்டமைப்பு கோப்பில், உங்கள் உரிம வெளிப்பாட்டை `` உரிமம்`` (`` "
"[திட்டம்] `` அட்டவணை: கோப்பு: `pyproject.toml`), அல்லது உங்கள் பேக்கேசிங் "
"கருவிக்கு சமமானதாக உள்ளிட்டு, எதையும் அகற்றுவதை உறுதிசெய்க மரபு `` உரிமம்`` "
"அட்டவணை சப் கீச் அல்லது `` உரிமம் :: `` வகைப்படுத்திகள். உங்கள் இருக்கும் ``"
" உரிமம்`` மதிப்பு ஏற்கனவே ஒன்றாக செல்லுபடியாகும் (எ.கா. இல்லையெனில், உங்கள் "
"திட்டத்தில் பயன்படுத்தப்படும் உரிமத்துடன் பொருந்தக்கூடிய அடையாளங்காட்டிக்கு "
"`SPDX உரிம பட்டியல் <SPDXLIST_>` __ __ ஐ சரிபார்க்கவும்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:290
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Make sure to list your license files under ``license-files`` under "
"``[project]`` in :file:`pyproject.toml` or else in your tool's configuration"
" file."
msgstr ""
"உங்கள் உரிமக் கோப்புகளை `` [திட்டம்] `` `இன் கீழ்` `உரிமக் கோப்புகள்` இன் "
"கீழ் பட்டியலிடுவதை உறுதிசெய்க: கோப்பு:` pyproject.toml` அல்லது உங்கள் "
"கருவியின் உள்ளமைவு கோப்பில்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:294
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See the :ref:`licensing-example-basic` for a simple but complete real-world "
"demo of how this works in practice. See also the best-effort guidance on how"
" to translate license classifiers into license expression provided by the "
":pep:`639` authors: `Mapping License Classifiers to SPDX Identifiers "
"<mappingclassifierstospdx_>`__. Packaging tools may support automatically "
"converting legacy licensing metadata; check your tool's documentation for "
"more information."
msgstr ""
"ஐப் பார்க்கவும்: ref: `உரிமம்-எடுத்துக்காட்டு-அடிப்படை` இது நடைமுறையில் "
"எவ்வாறு செயல்படுகிறது என்பதற்கான எளிய ஆனால் முழுமையான நிச உலக டெமோவுக்கு. "
"உரிம வகைப்படுத்தல்களை உரிம வெளிப்பாட்டில் எவ்வாறு மொழிபெயர்ப்பது என்பது "
"குறித்த சிறந்த உத்திகளையும் காண்க: PEP: `639` ஆசிரியர்கள்: `SPDX "
"அடையாளங்காட்டிகளுக்கு மேப்பிங் உரிம வகைப்படுத்திகள் <மேப்பிங் "
"கிளாசிஃபியர்ச்டோச்பிஎக்ச்_> ____. பேக்கேசிங் கருவிகள் மரபு உரிமம் பெறும் "
"மெட்டாடேட்டாவை தானாக மாற்றுவதை ஆதரிக்கக்கூடும்; மேலும் தகவலுக்கு உங்கள் "
"கருவியின் ஆவணங்களை சரிபார்க்கவும்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:304
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "My package includes other code under different licenses"
msgstr "எனது தொகுப்பில் வெவ்வேறு உரிமங்களின் கீழ் பிற குறியீடு அடங்கும்"

#: ../source/guides/licensing-examples-and-user-scenarios.rst:306
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your project includes code from others covered by different licenses, "
"such as vendored dependencies or files copied from other open source "
"software, you can construct a license expression to describe the licenses "
"involved and the relationship between them."
msgstr ""
"உங்கள் திட்டத்தில் விற்பனையான சார்புநிலைகள் அல்லது பிற திறந்த மூல "
"மென்பொருளிலிருந்து நகலெடுக்கப்பட்ட கோப்புகள் போன்ற வெவ்வேறு உரிமங்களால் "
"மூடப்பட்ட மற்றவர்களிடமிருந்து குறியீடு இருந்தால், சம்பந்தப்பட்ட "
"உரிமங்களையும் அவற்றுக்கிடையேயான உறவை விவரிக்க உரிம வெளிப்பாட்டை "
"உருவாக்கலாம்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:312
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In short, ``License-1 AND License-2`` mean that *both* licenses apply to "
"your project, or parts of it (for example, you included a file under another"
" license), and ``License-1 OR License-2`` means that *either* of the "
"licenses can be used, at the user's option (for example, you want to allow "
"users a choice of multiple licenses). You can use parenthesis (``()``) for "
"grouping to form expressions that cover even the most complex situations."
msgstr ""
"சுருக்கமாக, `` உரிமம் -1 மற்றும் உரிமம் -2`` என்பது உங்கள் திட்டத்திற்கு "
"அல்லது அதன் பகுதிகளுக்கு * இரண்டு * உரிமங்களும் பொருந்தும் என்று பொருள் "
"(எடுத்துக்காட்டாக, நீங்கள் மற்றொரு உரிமத்தின் கீழ் ஒரு கோப்பை "
"சேர்த்துள்ளீர்கள்), மற்றும் `` உரிமம் -1 அல்லது உரிமம் -2`` என்றால், பயனரின்"
" விருப்பத்தில் * உரிமங்களில் * பயன்படுத்தப்படலாம் (எடுத்துக்காட்டாக, "
"பயனர்களுக்கு பல உரிமங்களைத் தேர்வு செய்ய அனுமதிக்க விரும்புகிறீர்கள்). "
"மிகவும் சிக்கலான சூழ்நிலைகளை கூட உள்ளடக்கும் வெளிப்பாடுகளை உருவாக்க "
"குழுவிற்கு நீங்கள் அடைப்புக்குறிக்கு (`` () `) பயன்படுத்தலாம்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:320
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In your project config file, enter your license expression under ``license``"
" (``[project]`` table of :file:`pyproject.toml`), or the equivalent for your"
" packaging tool, and make sure to remove any legacy ``license`` table "
"subkeys or ``License ::`` classifiers."
msgstr ""
"உங்கள் திட்ட கட்டமைப்பு கோப்பில், உங்கள் உரிம வெளிப்பாட்டை `` உரிமம்`` (`` "
"[திட்டம்] `` அட்டவணை: கோப்பு: `pyproject.toml`), அல்லது உங்கள் பேக்கேசிங் "
"கருவிக்கு சமமானதாக உள்ளிட்டு, எதையும் அகற்றுவதை உறுதிசெய்க மரபு `` உரிமம்`` "
"அட்டவணை சப் கீச் அல்லது `` உரிமம் :: `` வகைப்படுத்திகள்."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:326
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Also, make sure you add the full license text of all the licenses as files "
"somewhere in your project repository. List the relative path or glob "
"patterns to each of them under ``license-files`` under ``[project]`` in "
":file:`pyproject.toml` (if your tool supports it), or else in your tool's "
"configuration file."
msgstr ""
"மேலும், உங்கள் திட்ட களஞ்சியத்தில் எங்காவது கோப்புகளாக அனைத்து உரிமங்களின் "
"முழு உரிம உரையையும் சேர்ப்பதை உறுதிசெய்க. `` [திட்டம்] `` `இல்: கோப்பு:` "
"pyproject.toml` (உங்கள் கருவி அதை ஆதரித்தால்), அல்லது உங்கள் கருவியின் "
"உள்ளமைவில், அல்லது உங்கள் கருவியின் உள்ளமைவில், அவை ஒவ்வொன்றிற்கும் உறவினர் "
"பாதை அல்லது குளோப் வடிவங்களை பட்டியலிடுங்கள் கோப்பு."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:332
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As an example, if your project was licensed MIT but incorporated a vendored "
"dependency (say, ``packaging``) that was licensed under either Apache 2.0 or"
" the 2-clause BSD, your license expression would be ``MIT AND (Apache-2.0 OR"
" BSD-2-Clause)``. You might have a :file:`LICENSE.txt` in your repo root, "
"and a :file:`LICENSE-APACHE.txt` and :file:`LICENSE-BSD.txt` in the "
":file:`_vendor/` subdirectory, so to include all of them, you'd specify "
"``[\"LICENSE.txt\", \"_vendor/packaging/LICENSE*\"]`` as glob patterns, or "
"``[\"LICENSE.txt\", \"_vendor/LICENSE-APACHE.txt\", \"_vendor/LICENSE-"
"BSD.txt\"]`` as literal file paths."
msgstr ""
"உதாரணமாக, உங்கள் திட்டம் எம்ஐடி உரிமம் பெற்றதாக இருந்தால், அப்பாச்சி 2.0 "
"அல்லது 2-கைது பி.எச்.டி ஆகியவற்றின் கீழ் உரிமம் பெற்ற விற்பனையான சார்பு "
"(சொல்லுங்கள், `` பேக்கேசிங்``) இணைத்தால், உங்கள் உரிம வெளிப்பாடு `` எம்ஐடி "
"மற்றும் (அப்பாச்சி- 2.0 அல்லது பி.எச்.டி -2-அடைப்பு) ``. உங்கள் ரெப்போ "
"ரூட்டில் `உரிமம். , எனவே அவை அனைத்தையும் சேர்க்க, நீங்கள் `` [\"உரிமம். "
"-Apache.txt \",\" _vendor/உரிமம்-bsd.txt \"]` `நேரடி கோப்பு பாதைகளாக."

#: ../source/guides/licensing-examples-and-user-scenarios.rst:343
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See a fully worked out :ref:`licensing-example-advanced` for an end-to-end "
"application of this to a real-world complex project, with many technical "
"details, and consult a `tutorial <spdxtutorial_>`__ for more help and "
"examples using SPDX identifiers and expressions."
msgstr ""
"ஒரு முழுமையான வேலை: ref: `உரிமம்-எடுத்துக்காட்டு-மேம்பட்டது` இது ஒரு நிச உலக"
" சிக்கலான திட்டத்திற்கு, பல தொழில்நுட்ப விவரங்களுடன் இதைப் "
"பயன்படுத்துவதற்கு, மேலும் ஒரு `பயிற்சி <spdxtutorial_>` __ __ ஐ அணுகவும் "
"SPDX அடையாளங்காட்டிகள் மற்றும் வெளிப்பாடுகளைப் பயன்படுத்தி உதவி மற்றும் "
"எடுத்துக்காட்டுகள்."

#: ../source/guides/making-a-pypi-friendly-readme.rst:2
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Making a PyPI-friendly README"
msgstr "ஒரு பைபி நட்பு ரீட்மே தயாரித்தல்"

#: ../source/guides/making-a-pypi-friendly-readme.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"README files can help your users understand your project and can be used to "
"set your project's description on PyPI. This guide helps you create a README"
" in a PyPI-friendly format and include your README in your package so it "
"appears on PyPI."
msgstr ""
"உங்கள் திட்டத்தைப் புரிந்துகொள்ள உங்கள் பயனர்களுக்கு README கோப்புகள் "
"உதவும், மேலும் உங்கள் திட்டத்தின் விளக்கத்தை PYPI இல் அமைக்க பயன்படுத்தலாம்."
" இந்த வழிகாட்டி ஒரு பைபி-நட்பு வடிவத்தில் ஒரு README ஐ உருவாக்க உதவுகிறது "
"மற்றும் உங்கள் தொகுப்பில் உங்கள் README ஐ சேர்க்கவும், எனவே இது PYPI இல் "
"தோன்றும்."

#: ../source/guides/making-a-pypi-friendly-readme.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating a README file"
msgstr "README கோப்பை உருவாக்குதல்"

#: ../source/guides/making-a-pypi-friendly-readme.rst:11
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"README files for Python projects are often named ``README``, ``README.txt``,"
" ``README.rst``, or ``README.md``."
msgstr ""
"பைதான் திட்டங்களுக்கான README கோப்புகள் பெரும்பாலும் `` ReadMe``, `` "
"readme.txt``, `` ReadMe.rst``, அல்லது `` Readme.md`` என்று "
"பெயரிடப்படுகின்றன."

#: ../source/guides/making-a-pypi-friendly-readme.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For your README to display properly on PyPI, choose a markup language "
"supported by PyPI. Formats supported by `PyPI's README renderer "
"<https://github.com/pypa/readme_renderer>`_ are:"
msgstr ""
"உங்கள் README PYPI இல் சரியாகக் காண்பிக்க, PYPI ஆல் ஆதரிக்கப்படும் மார்க்அப்"
" மொழியைத் தேர்வுசெய்க. `பைபியின் ரீட்மே ரெண்டரர் "
"<https://github.com/pypa/readme_renderer>` _ ஆகியவற்றால் ஆதரிக்கப்படும் "
"வடிவங்கள்:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "plain text"
msgstr "சாதாரண எழுத்து"

#: ../source/guides/making-a-pypi-friendly-readme.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`reStructuredText <https://docutils.sourceforge.io/rst.html>`_ (without "
"Sphinx extensions)"
msgstr ""
"`மறுசீரமைக்கப்பட்ட டெக்ச்ட் <https://docutils.sourceforge.io/rst.html>` _ "
"(ச்பின்க்ச் நீட்டிப்புகள் இல்லாமல்)"

#: ../source/guides/making-a-pypi-friendly-readme.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Markdown (`GitHub Flavored Markdown <https://github.github.com/gfm/>`_ by "
"default, or `CommonMark <https://commonmark.org/>`_)"
msgstr ""
"மார்க் பேரூர் (`கிதுப் சுவையான மார்க் பேரூர் "
"<https://github.github.com/gfm/>` _ இயல்பாக, அல்லது `காமன்மார்க் "
"<https://commonmark.org/>` _))"

#: ../source/guides/making-a-pypi-friendly-readme.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's customary to save your README file in the root of your project, in the "
"same directory as your :file:`setup.py` file."
msgstr ""
"உங்கள் திட்டத்தின் மூலத்தில் உங்கள் README கோப்பை சேமிப்பது வழக்கம், உங்கள்:"
" கோப்பு: `setup.py` கோப்பு."

#: ../source/guides/making-a-pypi-friendly-readme.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Including your README in your package's metadata"
msgstr "உங்கள் தொகுப்பின் மெட்டாடேட்டாவில் உங்கள் README உட்பட"

#: ../source/guides/making-a-pypi-friendly-readme.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To include your README's contents as your package description, set your "
"project's ``Description`` and ``Description-Content-Type`` metadata, "
"typically in your project's :file:`setup.py` file."
msgstr ""
"உங்கள் தொகுப்பு விளக்கமாக உங்கள் README இன் உள்ளடக்கங்களைச் சேர்க்க, உங்கள் "
"திட்டத்தின் `` விளக்கம்`` மற்றும் `` விளக்கம்-உள்ளடக்க-வகை`` மெட்டாடேட்டாவை "
"அமைக்கவும், பொதுவாக உங்கள் திட்டத்தின்: கோப்பு: `setup.py` கோப்பில்."

#: ../source/guides/making-a-pypi-friendly-readme.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`description-optional`"
msgstr ": Ref: `விளக்கம்-விருப்பத்தேர்வு`"

#: ../source/guides/making-a-pypi-friendly-readme.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`description-content-type-optional`"
msgstr ": குறிப்பு: `விளக்கம்-உள்ளடக்க வகை-விருப்பத்தேர்வு`"

#: ../source/guides/making-a-pypi-friendly-readme.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, to set these values in a package's :file:`setup.py` file, use "
"``setup()``'s ``long_description`` and ``long_description_content_type``."
msgstr ""
"எடுத்துக்காட்டாக, இந்த மதிப்புகளை ஒரு தொகுப்பில் அமைக்க: கோப்பு: `setup.py` "
"கோப்பில்,` `setup ()` 's `` long_description`` மற்றும் `` "
"long_description_content_type`` ஐப் பயன்படுத்தவும்."

#: ../source/guides/making-a-pypi-friendly-readme.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Set the value of ``long_description`` to the contents (not the path) of the "
"README file itself. Set the ``long_description_content_type`` to an accepted"
" ``Content-Type``-style value for your README file's markup, such as "
"``text/plain``, ``text/x-rst`` (for reStructuredText), or ``text/markdown``."
msgstr ""
"`` Long_description`` இன் மதிப்பை README கோப்பின் உள்ளடக்கங்களுக்கு (பாதை "
"அல்ல) அமைக்கவும். `` உரை/வெற்று``, `` உரை/x-rst`` (மறுசீரமைப்புக்கு), `` "
"long_description_content_type`` ஐ உங்கள் ரீட்மே கோப்பின் மார்க்அப்பிற்கு "
"ஏற்றுக்கொள்ளப்பட்ட `` உள்ளடக்க-வகை``-ச்டைல் ​​மதிப்புக்கு அமைக்கவும் அல்லது "
"`` உரை/மார்க் டவுன்``."

#: ../source/guides/making-a-pypi-friendly-readme.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you're using GitHub-flavored Markdown to write a project's description, "
"ensure you upgrade the following tools:"
msgstr ""
"திட்டத்தின் விளக்கத்தை எழுத நீங்கள் கிதுப்-சுவை மார்க் டவுனைப் "
"பயன்படுத்துகிறீர்கள் என்றால், பின்வரும் கருவிகளை மேம்படுத்துவதை உறுதிசெய்க:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The minimum required versions of the respective tools are:"
msgstr "அந்தந்த கருவிகளின் குறைந்தபட்ச தேவையான பதிப்புகள்:"

#. This string contains inline code. It mustn't be translated.
#: ../source/guides/making-a-pypi-friendly-readme.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``setuptools >= 38.6.0``"
msgstr "`` setuptools> = 38.6.0``"

#. This string contains inline code. It mustn't be translated.
#: ../source/guides/making-a-pypi-friendly-readme.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``wheel >= 0.31.0``"
msgstr "`` சக்கரம்> = 0.31.0``"

#. This string contains inline code. It mustn't be translated.
#: ../source/guides/making-a-pypi-friendly-readme.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``twine >= 1.11.0``"
msgstr "`` ட்வைன்> = 1.11.0``"

#: ../source/guides/making-a-pypi-friendly-readme.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's recommended that you use ``twine`` to upload the project's distribution"
" packages:"
msgstr ""
"திட்டத்தின் விநியோக தொகுப்புகளை பதிவேற்ற `` ட்வைன்`` ஐப் பயன்படுத்த "
"பரிந்துரைக்கப்படுகிறது:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:72
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, see this :file:`setup.py` file, which reads the contents of "
":file:`README.md` as ``long_description`` and identifies the markup as "
"GitHub-flavored Markdown:"
msgstr ""
"எடுத்துக்காட்டாக, இதைக் காண்க: கோப்பு: `setup.py` கோப்பு, இது "
"உள்ளடக்கங்களைப் படிக்கிறது: கோப்பு:` readme.md` `` long_description`` "
"மற்றும் மார்க்அப்பை கிட்அப்-சுவையான மார்க் பேரூர் என அடையாளம் காட்டுகிறது:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Validating reStructuredText markup"
msgstr "மறுசீரமைப்பு மார்க்அப்பை சரிபார்க்கிறது"

#: ../source/guides/making-a-pypi-friendly-readme.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your README is written in reStructuredText, any invalid markup will "
"prevent it from rendering, causing PyPI to instead just show the README's "
"raw source."
msgstr ""
"உங்கள் README மறுசீரமைப்பு டெக்ச்டில் எழுதப்பட்டிருந்தால், எந்தவொரு தவறான "
"மார்க்அப்பும் அதை வழங்குதல் செய்வதைத் தடுக்கும், இதனால் பைபி அதற்கு பதிலாக "
"README இன் மூல மூலத்தைக் காண்பிக்கும்."

#: ../source/guides/making-a-pypi-friendly-readme.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that Sphinx extensions used in docstrings, such as :doc:`directives "
"<sphinx:usage/restructuredtext/directives>` and :doc:`roles "
"<sphinx:usage/restructuredtext/roles>` (e.g., \"``:py:func:`getattr```\" or "
"\"``:ref:`my-reference-label```\"), are not allowed here and will result in "
"error messages like \"``Error: Unknown interpreted text role "
"\"py:func\".``\"."
msgstr ""
"டாக்ச்ட்ரிங்சில் பயன்படுத்தப்படும் சூரரிமாச்சிலை நீட்டிப்புகள்: doc: "
"`வழிமுறைகள் <Sphinx: பயன்பாடு/மறுசீரமைப்பு/கட்டளைகள்>` மற்றும்: டாக்: "
"`பாத்திரங்கள் <SPHINX: பயன்பாடு/மறுசீரமைப்பு/பாத்திரங்கள்>` (எ.கா. func: "
"`getattr```\" அல்லது \"` `: குறிப்பு:` எனது-குறிப்பு-லேபிள்```` \"), இங்கே "
"அனுமதிக்கப்படவில்லை, மேலும்\" `` பிழை: அறியப்படாத விளக்கமளிக்கப்பட்ட உரை "
"பாத்திரம் \"py: func \".``\"."

#: ../source/guides/making-a-pypi-friendly-readme.rst:104
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can check your README for markup errors before uploading as follows:"
msgstr ""
"பதிவேற்றுவதற்கு முன் மார்க்அப் பிழைகளுக்கு உங்கள் README ஐ சரிபார்க்கலாம்:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Install the latest version of `twine <https://github.com/pypa/twine>`_; "
"version 1.12.0 or higher is required:"
msgstr ""
"`ட்வைன் <https://github.com/pypa/twine>` _; பதிப்பு 1.12.0 அல்லது அதற்கு "
"மேற்பட்டது தேவை:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build the sdist and wheel for your project as described under "
":ref:`Packaging Your Project`."
msgstr ""
"கீழ் விவரிக்கப்பட்டுள்ளபடி உங்கள் திட்டத்திற்கான SDIST மற்றும் சக்கரத்தை "
"உருவாக்குங்கள்: ref: `உங்கள் திட்டத்தை பேக்கேசிங் செய்தல்`."

#: ../source/guides/making-a-pypi-friendly-readme.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Run ``twine check`` on the sdist and wheel:"
msgstr "Sdist மற்றும் சக்கரத்தில் `` கயிறு காசோலை`` ஐ இயக்கவும்:"

#: ../source/guides/making-a-pypi-friendly-readme.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This command will report any problems rendering your README.  If your markup"
" renders fine, the command will output ``Checking distribution FILENAME: "
"Passed``."
msgstr ""
"இந்த கட்டளை உங்கள் README ஐ வழங்குவதில் ஏதேனும் சிக்கல்களைப் புகாரளிக்கும். "
"உங்கள் மார்க்அப் நன்றாக வழங்கினால், கட்டளை வெளியிடும் `` விநியோக கோப்பு "
"பெயரைச் சரிபார்க்கிறது: தேர்ச்சி பெற்றவர்``."

#: ../source/guides/migrating-to-pypi-org.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Migrating to PyPI.org"
msgstr "Pypi.org க்கு இடம்பெயர்கிறது"

#: ../source/guides/migrating-to-pypi-org.rst:8
#: ../source/guides/multi-version-installs.rst:8
#: ../source/guides/supporting-multiple-python-versions.rst:9
#: ../source/guides/supporting-windows-using-appveyor.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Obsolete"
msgstr "வழக்கற்றுப்போன"

#: ../source/guides/migrating-to-pypi-org.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":term:`pypi.org` is the new, rewritten version of PyPI that has replaced the"
" legacy PyPI code base. It is the default version of PyPI that people are "
"expected to use. These are the tools and processes that people will need to "
"interact with ``PyPI.org``."
msgstr ""
": கால: `pypi.org` என்பது பைபியின் புதிய, மீண்டும் எழுதப்பட்ட பதிப்பாகும், "
"இது மரபு பைபி குறியீடு தளத்தை மாற்றியுள்ளது. பைபியின் இயல்புநிலை "
"பதிப்பாகும், மக்கள் பயன்படுத்துவார்கள் என்று எதிர்பார்க்கப்படுகிறது. மக்கள் "
"`` pypi.org`` உடன் தொடர்பு கொள்ள வேண்டிய கருவிகள் மற்றும் செயல்முறைகள் இவை."

#: ../source/guides/migrating-to-pypi-org.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Publishing releases"
msgstr "வெளியீட்டு வெளியீடுகள்"

#: ../source/guides/migrating-to-pypi-org.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pypi.org`` is the default upload platform as of September 2016."
msgstr ""
"`` pypi.org`` என்பது செப்டம்பர் 2016 நிலவரப்படி இயல்புநிலை பதிவேற்ற "
"தளமாகும்."

#: ../source/guides/migrating-to-pypi-org.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Uploads through ``pypi.python.org`` were *switched off* on **July 3, 2017**."
" As of April 13th, 2018, ``pypi.org`` is the URL for PyPI."
msgstr ""
"`` Pypi.python.org`` மூலம் பதிவேற்றங்கள் ** சூலை 3, 2017 அன்று*சுவிட்ச் "
"ஆஃப்***. ஏப்ரல் 13, 2018 நிலவரப்படி, `` pypi.org`` என்பது PYPI க்கான முகவரி "
"ஆகும்."

#: ../source/guides/migrating-to-pypi-org.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The recommended way to migrate to PyPI.org for uploading is to ensure that "
"you are using a new enough version of your upload tool."
msgstr ""
"பதிவேற்றுவதற்காக pypi.org க்கு இடம்பெயர பரிந்துரைக்கப்பட்ட வழி, உங்கள் "
"பதிவேற்ற கருவியின் புதிய பதிப்பைப் பயன்படுத்துகிறீர்கள் என்பதை உறுதி "
"செய்வதாகும்."

#: ../source/guides/migrating-to-pypi-org.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The default upload settings switched to ``pypi.org`` in the following "
"versions:"
msgstr ""
"இயல்புநிலை பதிவேற்ற அமைப்புகள் பின்வரும் பதிப்புகளில் `` pypi.org`` க்கு "
"மாற்றப்பட்டன:"

#. This string contains inline code. It mustn't be translated.
#: ../source/guides/migrating-to-pypi-org.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``twine`` 1.8.0"
msgstr "`` ட்வின்`` 1.8.0"

#. This string contains inline code. It mustn't be translated.
#: ../source/guides/migrating-to-pypi-org.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``setuptools`` 27.0.0"
msgstr "`` setuptools`` 27.0.0"

#: ../source/guides/migrating-to-pypi-org.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python 2.7.13 (``distutils`` update)"
msgstr "பைதான் 2.7.13 (`` தொலைதூரங்கள்` புதுப்பிப்பு)"

#: ../source/guides/migrating-to-pypi-org.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python 3.4.6 (``distutils`` update)"
msgstr "பைதான் 3.4.6 (`` தொலைதூரங்கள்` புதுப்பிப்பு)"

#: ../source/guides/migrating-to-pypi-org.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python 3.5.3 (``distutils`` update)"
msgstr "பைதான் 3.5.3 (`` distutils`` புதுப்பிப்பு)"

#: ../source/guides/migrating-to-pypi-org.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python 3.6.0 (``distutils`` update)"
msgstr "பைதான் 3.6.0 (`` தொலைதூரங்கள்` புதுப்பிப்பு)"

#: ../source/guides/migrating-to-pypi-org.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to ensuring you're on a new enough version of the tool for the "
"tool's default to have switched, you must also make sure that you have not "
"configured the tool to override its default upload URL. Typically this is "
"configured in a file located at :file:`$HOME/.pypirc`. If you see a file "
"like:"
msgstr ""
"கருவியின் இயல்புநிலை மாற்றுவதற்கான கருவியின் புதிய பதிப்பில் நீங்கள் "
"இருப்பதை உறுதி செய்வதோடு மட்டுமல்லாமல், அதன் இயல்புநிலை பதிவேற்ற முகவரி ஐ "
"மேலெழுத கருவியை நீங்கள் கட்டமைக்கவில்லை என்பதையும் உறுதிப்படுத்த வேண்டும். "
"பொதுவாக இது அமைந்துள்ள ஒரு கோப்பில் கட்டமைக்கப்பட்டுள்ளது: கோப்பு: `$ "
"home/.pypirc`. நீங்கள் ஒரு கோப்பைக் கண்டால்:"

#: ../source/guides/migrating-to-pypi-org.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Then simply delete the line starting with ``repository`` and you will use "
"your upload tool's default URL."
msgstr ""
"பின்னர் `` களஞ்சியம்`` உடன் தொடங்கும் வரியை நீக்கவும், உங்கள் பதிவேற்ற "
"கருவியின் இயல்புநிலை முகவரி ஐப் பயன்படுத்துவீர்கள்."

#: ../source/guides/migrating-to-pypi-org.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If for some reason you're unable to upgrade the version of your tool to a "
"version that defaults to using PyPI.org, then you may edit "
":file:`$HOME/.pypirc` and include the ``repository:`` line, but use the "
"value ``https://upload.pypi.org/legacy/`` instead:"
msgstr ""
"சில காரணங்களால் உங்கள் கருவியின் பதிப்பை pypi.org ஐப் பயன்படுத்துவதற்கு "
"இயல்புநிலையாக இருக்கும் பதிப்பிற்கு மேம்படுத்த முடியாவிட்டால், நீங்கள் "
"திருத்தலாம்: கோப்பு: `$ home/.pypirc` மற்றும்` `களஞ்சியம்:` `வரி சேர்க்கவும்"
" ."

#: ../source/guides/migrating-to-pypi-org.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"(``legacy`` in this URL refers to the fact that this is the new server "
"implementation's emulation of the legacy server implementation's upload "
"API.)"
msgstr ""
"(``legacy`` in this முகவரி refers பெறுநர் the fact that this is the புதிய "
"சேவையகம் implementation's போன்மம் of the legacy சேவையகம் implementation's "
"upload API.)"

#: ../source/guides/migrating-to-pypi-org.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Registering package names & metadata"
msgstr "தொகுப்பு பெயர்கள் மற்றும் மெட்டாடேட்டாவை பதிவு செய்தல்"

#: ../source/guides/migrating-to-pypi-org.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Explicit pre-registration of package names with the ``setup.py register`` "
"command prior to the first upload is no longer required, and is not "
"currently supported by the legacy upload API emulation on PyPI.org."
msgstr ""
"முதல் பதிவேற்றத்திற்கு முன்னர் `` setup.py பதிவு` கட்டளையுடன் தொகுப்பு "
"பெயர்களை வெளிப்படையாக பதிவு செய்வது இனி தேவையில்லை, மேலும் தற்போது pypi.org "
"இல் மரபு பதிவேற்ற பநிஇ ஈமுலேசன் மூலம் ஆதரிக்கப்படவில்லை."

#: ../source/guides/migrating-to-pypi-org.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As a result, attempting explicit registration after switching to using "
"PyPI.org for uploads will give the following error message::"
msgstr ""
"இதன் விளைவாக, பதிவேற்றங்களுக்கு pypi.org ஐப் பயன்படுத்துவதற்கு மாறிய பின் "
"வெளிப்படையான பதிவை முயற்சிப்பது பின்வரும் பிழை செய்தியைக் கொடுக்கும் ::"

#: ../source/guides/migrating-to-pypi-org.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The solution is to skip the registration step, and proceed directly to "
"uploading artifacts."
msgstr ""
"பதிவு படிநிலையைத் தவிர்ப்பதே தீர்வு, மற்றும் கலைப்பொருட்களைப் "
"பதிவேற்றுவதற்கு நேரடியாக தொடரவும்."

#: ../source/guides/migrating-to-pypi-org.rst:93
#: ../source/guides/using-testpypi.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using TestPyPI"
msgstr "TestPypi ஐப் பயன்படுத்துதல்"

#: ../source/guides/migrating-to-pypi-org.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Legacy TestPyPI (testpypi.python.org) is no longer available; use "
"`test.pypi.org <https://test.pypi.org>`_ instead. If you use TestPyPI, you "
"must update your :file:`$HOME/.pypirc` to handle TestPyPI's new location, by"
" replacing ``https://testpypi.python.org/pypi`` with "
"``https://test.pypi.org/legacy/``, for example:"
msgstr ""
"மரபு டெச்ட்பை (testpy.python.org) இனி கிடைக்காது; அதற்கு பதிலாக "
"`test.pypi.org <https://test.pypi.org>` _ ஐப் பயன்படுத்தவும். நீங்கள் "
"டெச்ட்பிஐயைப் பயன்படுத்தினால், உங்கள்: கோப்பு: `$ முகப்பு/.pypirc` "
"டெச்ட்பைப்பின் புதிய இருப்பிடத்தைக் கையாள,` `https: // "
"testpy.python.org/pypi`` ஐ` `https: // தேர்வு உடன் மாற்றுவதன் மூலம் "
"புதுப்பிக்க வேண்டும் .pypi.org/மரபு/``, எடுத்துக்காட்டாக:"

#: ../source/guides/migrating-to-pypi-org.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Registering new user accounts"
msgstr "புதிய பயனர் கணக்குகளை பதிவு செய்தல்"

#: ../source/guides/migrating-to-pypi-org.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to help mitigate spam attacks against PyPI, new user registration "
"through ``pypi.python.org`` was *switched off* on **February 20, 2018**. New"
" user registrations at ``pypi.org`` are open."
msgstr ""
"PYPI க்கு எதிரான ச்பேம் தாக்குதல்களைத் தணிக்க உதவுவதற்காக, `` "
"pypi.python.org`` மூலம் புதிய பயனர் பதிவு**பிப்ரவரி 20, 2018 அன்று "
"அணைக்கப்பட்டது***. `` Pypi.org`` இல் புதிய பயனர் பதிவுகள் திறந்திருக்கும்."

#: ../source/guides/migrating-to-pypi-org.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Browsing packages"
msgstr "தொகுப்புகள் உலாவுதல்"

#: ../source/guides/migrating-to-pypi-org.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While ``pypi.python.org`` is may still be used in links from other PyPA "
"documentation, etc, the default interface for browsing packages is "
"``pypi.org``. The domain pypi.python.org now redirects to pypi.org, and may "
"be disabled sometime in the future."
msgstr ""
"`` Pypi.python.org`` `மற்ற PYPA ஆவணங்கள் போன்றவற்றிலிருந்து இன்னும் "
"பயன்படுத்தப்படலாம் என்றாலும், தொகுப்புகளை உலாவுவதற்கான இயல்புநிலை இடைமுகம்` "
"`pypi.org``. Pypi.python.org டொமைன் இப்போது pypi.org க்கு திருப்பி "
"விடுகிறது, மேலும் எதிர்காலத்தில் முடக்கப்படலாம்."

#: ../source/guides/migrating-to-pypi-org.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Downloading packages"
msgstr "தொகுப்புகளைப் பதிவிறக்குகிறது"

#: ../source/guides/migrating-to-pypi-org.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pypi.org`` is the default host for downloading packages."
msgstr ""
"`` pypi.org`` என்பது தொகுப்புகளைப் பதிவிறக்குவதற்கான இயல்புநிலை புரவலன் "
"ஆகும்."

#: ../source/guides/migrating-to-pypi-org.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Managing published packages and releases"
msgstr "வெளியிடப்பட்ட தொகுப்புகள் மற்றும் வெளியீடுகளை நிர்வகித்தல்"

#: ../source/guides/migrating-to-pypi-org.rst:141
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``pypi.org`` provides a fully functional interface for logged in users to "
"manage their published packages and releases."
msgstr ""
"`` pypi.org`` பயனர்கள் தங்கள் வெளியிடப்பட்ட தொகுப்புகள் மற்றும் வெளியீடுகளை "
"நிர்வகிக்க உள்நுழைந்த ஒரு முழுமையான செயல்பாட்டு இடைமுகத்தை வழங்குகிறது."

#: ../source/guides/modernize-setup-py-project.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "How to modernize a ``setup.py`` based project?"
msgstr "`` Setup.py`` அடிப்படையிலான திட்டத்தை எவ்வாறு நவீனமயமாக்குவது?"

#: ../source/guides/modernize-setup-py-project.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Should ``pyproject.toml`` be added?"
msgstr "`` Pyproject.toml`` சேர்க்கப்பட வேண்டுமா?"

#: ../source/guides/modernize-setup-py-project.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :term:`pyproject.toml` file is strongly recommended. The presence of a "
":file:`pyproject.toml` file itself does not bring much. [#]_ What is "
"actually strongly recommended is the ``[build-system]`` table in "
":file:`pyproject.toml`."
msgstr ""
"ப: கால: `pyproject.toml` கோப்பு கடுமையாக பரிந்துரைக்கப்படுகிறது. A இன் "
"இருப்பு: கோப்பு: `pyproject.toml` கோப்பே அதிகம் கொண்டு வராது. ."

#: ../source/guides/modernize-setup-py-project.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that it has influence on the build isolation feature of pip, see below."
msgstr ""
"BIP இன் உருவாக்க தனிமைப்படுத்தும் அம்சத்தில் இது செல்வாக்கைக் கொண்டுள்ளது "
"என்பதை நினைவில் கொள்க, கீழே காண்க."

#: ../source/guides/modernize-setup-py-project.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"No, :file:`setup.py` can exist in a modern :ref:`setuptools` based project. "
"The :term:`setup.py` file is a valid configuration file for setuptools that "
"happens to be written in Python. However, the following commands are "
"deprecated and **MUST NOT** be run anymore, and their recommended "
"replacement commands should be used instead:"
msgstr ""
"இல்லை,: கோப்பு: `setup.py` ஒரு நவீனத்தில் இருக்க முடியும்: குறிப்பு:` "
"setuptools` அடிப்படையிலான திட்டம். தி: கால: `setup.py` கோப்பு என்பது "
"பைத்தானில் எழுதப்படும் செட்டுப்டூல்களுக்கான சரியான உள்ளமைவு கோப்பு. "
"இருப்பினும், பின்வரும் கட்டளைகள் நீக்கப்பட்டன, ** இனி இயக்கப்படக்கூடாது, "
"மேலும் அவற்றின் பரிந்துரைக்கப்பட்ட மாற்று கட்டளைகள் அதற்கு பதிலாக "
"பயன்படுத்தப்பட வேண்டும்:"

#: ../source/guides/modernize-setup-py-project.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m build``"
msgstr "`` பைதான் -எம் பில்ட்``"

#: ../source/guides/modernize-setup-py-project.rst:42
#: ../source/guides/modernize-setup-py-project.rst:66
#: ../source/guides/modernize-setup-py-project.rst:111
#: ../source/guides/modernize-setup-py-project.rst:129
#: ../source/guides/modernize-setup-py-project.rst:221
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For more details:"
msgstr "மேலும் விவரங்களுக்கு:"

#: ../source/guides/modernize-setup-py-project.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`setup-py-deprecated`"
msgstr ": ref: `setup-py- deprecated`"

#: ../source/guides/modernize-setup-py-project.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Where to start?"
msgstr "எங்கு தொடங்குவது?"

#: ../source/guides/modernize-setup-py-project.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :term:`project` must contain a :file:`pyproject.toml` file at the root "
"of its source tree that contains a ``[build-system]`` table like so:"
msgstr ""
"தி: கால: `திட்டம்` இருக்க வேண்டும் ஒரு: கோப்பு:` pyproject.toml` அதன் மூல "
"மரத்தின் மூலத்தில் `` [பில்ட்-சிச்டம்] `` அட்டவணை போன்றவற்றைக் கொண்டுள்ளது:"

#: ../source/guides/modernize-setup-py-project.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is the standardized method of letting :term:`build frontends <Build "
"Frontend>` know that :ref:`setuptools` is the :term:`build backend <Build "
"Backend>` for this project."
msgstr ""
"இது அனுமதிக்கும் தரப்படுத்தப்பட்ட முறையாகும்: கால: `முன்பக்கத்தை "
"உருவாக்குங்கள் <உருவாக்கம்>` இதை அறிந்து கொள்ளுங்கள்: குறிப்பு: "
"`செட்டுப்டூல்ச்` என்பது: கால:` இந்த திட்டத்திற்கு பின்தளத்தில் கட்ட "
"உருவாக்கு <பின்தளத்தில் உருவாக்கு>."

#: ../source/guides/modernize-setup-py-project.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that the presence of a :file:`pyproject.toml` file (even if empty) "
"triggers :ref:`pip` to change its default behavior to use *build isolation*."
msgstr ""
"A: FILE: `pyproject.toml` கோப்பு (காலியாக இருந்தாலும்) தூண்டுகிறது என்பதை "
"நினைவில் கொள்க: Ref:` pip` அதன் இயல்புநிலை நடத்தையை மாற்ற *தனிமைப்படுத்தலை "
"*."

#: ../source/guides/modernize-setup-py-project.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`distributing-packages`"
msgstr ": Ref: `விநியோகிக்கும்-பேக்கேச்கள்`"

#: ../source/guides/modernize-setup-py-project.rst:69
#: ../source/guides/modernize-setup-py-project.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`pyproject-build-system-table`"
msgstr ": ref: `பைப்ரோசெக்ட்-பில்ட்-சிச்டம்-டேபிள்`"

#: ../source/guides/modernize-setup-py-project.rst:70
#: ../source/guides/modernize-setup-py-project.rst:131
#: ../source/guides/modernize-setup-py-project.rst:247
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`pip:reference/build-system/pyproject-toml`"
msgstr ":doc:`pip:reference/build-system/pyproject-toml`"

#: ../source/guides/modernize-setup-py-project.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "How to handle additional build-time dependencies?"
msgstr "கூடுதல் உருவாக்க நேர சார்புகளை எவ்வாறு கையாள்வது?"

#: ../source/guides/modernize-setup-py-project.rst:76
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On top of setuptools itself, if :file:`setup.py` depends on other third-"
"party libraries (outside of Python's standard library), those must be listed"
" in the ``requires`` list of the ``[build-system]`` table, so that the build"
" frontend knows to install them when building the :term:`distributions "
"<Distribution Package>`."
msgstr ""
"செடிப்டூல்களின் மேல், என்றால்: கோப்பு: `setup.py` மற்ற மூன்றாம் தரப்பு "
"நூலகங்களை (பைத்தானின் நிலையான நூலகத்திற்கு வெளியே) சார்ந்துள்ளது ."

#: ../source/guides/modernize-setup-py-project.rst:82
#: ../source/guides/modernize-setup-py-project.rst:139
#: ../source/guides/modernize-setup-py-project.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For example, a :file:`setup.py` file such as this:"
msgstr "எடுத்துக்காட்டாக, ஒரு: கோப்பு: இது போன்ற `setup.py` கோப்பு:"

#: ../source/guides/modernize-setup-py-project.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"requires a :file:`pyproject.toml` file like this (:file:`setup.py` stays "
"unchanged):"
msgstr ""
"ஒரு: கோப்பு: `pyproject.toml` இது போன்ற கோப்பு (: கோப்பு:` setup.py` மாறாமல்"
" இருக்கும்):"

#: ../source/guides/modernize-setup-py-project.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What is the build isolation feature?"
msgstr "உருவாக்க தனிமைப்படுத்தல் நற்பொருத்தம் என்ன?"

#: ../source/guides/modernize-setup-py-project.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build frontends typically create an ephemeral virtual environment where they"
" install only the build dependencies (and their dependencies) that are "
"listed under ``build-system.requires`` and trigger the build in that "
"environment."
msgstr ""
"முன்பக்கங்களை உருவாக்குவது பொதுவாக ஒரு இடைக்கால மெய்நிகர் சூழலை "
"உருவாக்குகிறது, அங்கு அவை `` பில்ட்-சிச்டம்.நான் ``` இன் கீழ் "
"பட்டியலிடப்பட்டுள்ள உருவாக்க சார்புகளை (மற்றும் அவற்றின் சார்புகளை) மட்டுமே "
"நிறுவுகின்றன, மேலும் அந்த சூழலில் கட்டமைப்பைத் தூண்டுகின்றன."

#: ../source/guides/modernize-setup-py-project.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For some projects this isolation is unwanted and it can be deactivated as "
"follows:"
msgstr ""
"சில திட்டங்களுக்கு இந்த தனிமைப்படுத்தல் தேவையற்றது, அதை பின்வருமாறு "
"செயலிழக்கச் செய்யலாம்:"

#: ../source/guides/modernize-setup-py-project.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m build --no-isolation``"
msgstr "`` பைதான் -எம் பில்ட் -இல்லை -தனிமைப்படுத்தல்``"

#: ../source/guides/modernize-setup-py-project.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python -m pip install --no-build-isolation``"
msgstr "`` பைதான் -எம் பிஐபி நிறுவல்-இல்லை-பில்ட்-ஐசோலேசன்``"

#: ../source/guides/modernize-setup-py-project.rst:135
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "How to handle packaging metadata?"
msgstr "பேக்கேசிங் மெட்டாடேட்டாவை எவ்வாறு கையாள்வது?"

#: ../source/guides/modernize-setup-py-project.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All static metadata can optionally be moved to a ``[project]`` table in "
":file:`pyproject.toml`."
msgstr ""
"அனைத்து நிலையான மெட்டாடேட்டாவையும் விருப்பமாக `` [திட்டம்] `` அட்டவணை: "
"கோப்பு: `pyproject.toml` க்கு மாற்றலாம்."

#: ../source/guides/modernize-setup-py-project.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "can be entirely replaced by a :file:`pyproject.toml` file like this:"
msgstr "ஒரு: கோப்பு: `pyproject.toml` இது போன்ற கோப்பு:"

#: ../source/guides/modernize-setup-py-project.rst:164
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Read :ref:`pyproject-project-table` for the full specification of the "
"content allowed in the ``[project]`` table."
msgstr ""
"படிக்க: குறிப்பு: `` [திட்டம்] `` அட்டவணையில் அனுமதிக்கப்பட்ட உள்ளடக்கத்தின்"
" முழு விவரக்குறிப்புக்கு `pyproject-project-table`."

#: ../source/guides/modernize-setup-py-project.rst:169
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "How to handle dynamic metadata?"
msgstr "மாறும் மெட்டாடேட்டாவை எவ்வாறு கையாள்வது?"

#: ../source/guides/modernize-setup-py-project.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If some packaging metadata fields are not static they need to be listed as "
"``dynamic`` in this ``[project]`` table."
msgstr ""
"சில பேக்கேசிங் மேனிலை தரவு புலங்கள் நிலையானதாக இல்லாவிட்டால், இந்த `` "
"திட்டத்தில்] `` அட்டவணையில் அவை `` டைனமிக்`` என பட்டியலிடப்பட வேண்டும்."

#: ../source/guides/modernize-setup-py-project.rst:191
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "can be modernized as follows:"
msgstr "பின்வருமாறு நவீனமயமாக்கலாம்:"

#: ../source/guides/modernize-setup-py-project.rst:223
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`declaring-project-metadata-dynamic`"
msgstr ": குறிப்பு: `அறிவித்தல்-திட்ட-மெட்டாடேட்டா-டைனமிக்`"

#: ../source/guides/modernize-setup-py-project.rst:227
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What if something that can not be changed expects a ``setup.py`` file?"
msgstr ""
"மாற்ற முடியாத ஒன்று `` setup.py`` கோப்பை எதிர்பார்க்கிறது என்றால் என்ன "
"செய்வது?"

#: ../source/guides/modernize-setup-py-project.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, a process exists that can not be changed easily and it needs to"
" execute a command such as ``python setup.py --name``."
msgstr ""
"எடுத்துக்காட்டாக, எளிதாக மாற்ற முடியாத ஒரு செயல்முறை உள்ளது, மேலும் இது `` "
"பைதான் setup.py --name`` போன்ற கட்டளையை இயக்க வேண்டும்."

#: ../source/guides/modernize-setup-py-project.rst:232
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is perfectly fine to leave a :file:`setup.py` file in the project source "
"tree even after all its content has been moved to :file:`pyproject.toml`. "
"This file can be as minimalistic as this:"
msgstr ""
"ஒரு: கோப்பு: `setup.py` கோப்பை திட்ட மூல மரத்தில் அதன் அனைத்து "
"உள்ளடக்கங்களும் நகர்த்திய பின்னரும் விட்டுவிடுவது மிகவும் நல்லது: கோப்பு:` "
"pyproject.toml`. இந்த கோப்பு இதைப் போலவே மிகச்சிறியதாக இருக்கலாம்:"

#: ../source/guides/modernize-setup-py-project.rst:246
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`pyproject-toml-spec`"
msgstr ": ref: `pyproject-toml-spec`"

#: ../source/guides/modernize-setup-py-project.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`setuptools:build_meta`"
msgstr ": டாக்: `செட்ப்டூல்ச்: பில்ட்_மெட்டா`"

#: ../source/guides/multi-version-installs.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Multi-version installs"
msgstr "பல பதிப்பு நிறுவல்கள்"

#: ../source/guides/multi-version-installs.rst:11
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"easy_install allows simultaneous installation of different versions of the "
"same project into a single environment shared by multiple programs which "
"must ``require`` the appropriate version of the project at run time (using "
"``pkg_resources``)."
msgstr ""
"ஈசி_ச்டால் ஒரே திட்டத்தின் வெவ்வேறு பதிப்புகளை ஒரே நேரத்தில் பல நிரல்களால் "
"பகிரப்பட்ட ஒற்றை சூழலில் நிறுவ அனுமதிக்கிறது, இது திட்டத்தின் பொருத்தமான "
"பதிப்பை இயக்க நேரத்தில் (`` pkg_resources`` ஐப் பயன்படுத்த வேண்டும்)."

#: ../source/guides/multi-version-installs.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For many use cases, virtual environments address this need without the "
"complication of the ``require`` directive. However, the advantage of "
"parallel installations within the same environment is that it works for an "
"environment shared by multiple applications, such as the system Python in a "
"Linux distribution."
msgstr ""
"பல பயன்பாட்டு நிகழ்வுகளுக்கு, மெய்நிகர் சூழல்கள் இந்த தேவையை `` தேவை` "
"'கட்டளை இல்லாமல் நிவர்த்தி செய்கின்றன. இருப்பினும், ஒரே சூழலுக்குள் இணையான "
"நிறுவல்களின் நன்மை என்னவென்றால், இது லினக்ச் விநியோகத்தில் கணினி பைதான் "
"போன்ற பல பயன்பாடுகளால் பகிரப்பட்ட சூழலுக்கு வேலை செய்கிறது."

#: ../source/guides/multi-version-installs.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The major limitation of ``pkg_resources`` based parallel installation is "
"that as soon as you import ``pkg_resources`` it locks in the *default* "
"version of everything which is already available on sys.path. This can cause"
" problems, since ``setuptools`` created command line scripts use "
"``pkg_resources`` to find the entry point to execute. This means that, for "
"example, you can't use ``require`` tests invoked through ``nose`` or a WSGI "
"application invoked through ``gunicorn`` if your application needs a non-"
"default version of anything that is available on the standard ``sys.path`` -"
" the script wrapper for the main application will lock in the version that "
"is available by default, so the subsequent ``require`` call in your own code"
" fails with a spurious version conflict."
msgstr ""
"`` பி.கே. இது சிக்கல்களை ஏற்படுத்தக்கூடும், ஏனெனில் `` setuptools`` "
"உருவாக்கிய கட்டளை வரி ச்கிரிப்ட்கள் `` pkg_resources`` ஐப் "
"பயன்படுத்துகின்றன. இதன் பொருள், எடுத்துக்காட்டாக, `` மூக்கு`` அல்லது `` `` "
"குனிகார்ன்`` மூலம் பயன்படுத்தப்பட்ட `` தேவை` சோதனைகளை நீங்கள் பயன்படுத்த "
"முடியாது, உங்கள் விண்ணப்பத்திற்கு கிடைக்கக்கூடிய எதையும் தாக்குதல் அல்லாத "
"பதிப்பு தேவைப்பட்டால் நிலையான `` sys.bath`` - முதன்மையான பயன்பாட்டிற்கான "
"ச்கிரிப்ட் ரேப்பர் இயல்புநிலையாக கிடைக்கும் பதிப்பில் பூட்டப்படும், எனவே "
"அடுத்தடுத்த `` தேவை` உங்கள் சொந்த குறியீட்டில் அழைப்பு ஒரு மோசமான பதிப்பு "
"மோதலுடன் தோல்வியடைகிறது."

#: ../source/guides/multi-version-installs.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This can be worked around by setting all dependencies in "
"``__main__.__requires__`` before importing ``pkg_resources`` for the first "
"time, but that approach does mean that standard command line invocations of "
"the affected tools can't be used - it's necessary to write a custom wrapper "
"script or use ``python3 -c '<command>'`` to invoke the application's main "
"entry point directly."
msgstr ""
"முதல் முறையாக `` பி.கே. தனிப்பயன் ரேப்பர் ச்கிரிப்டை எழுத தேவை அல்லது "
"பயன்பாட்டின் முதன்மையான நுழைவு புள்ளியை நேரடியாக அழைக்க `` பைதான் 3 -c "
"'<compround>' `` பயன்படுத்த வேண்டும்."

#: ../source/guides/multi-version-installs.rst:41
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Refer to the `pkg_resources documentation "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html#workingset-"
"objects>`__ for more details."
msgstr ""
"மேலும் விவரங்களுக்கு `pkg_resources ஆவணங்கள் "
"<https://setuptools.readthedocs.io/en/latest/pkg_resources.html#owml#owml#workingset-"
"objects ஐப் பார்க்கவும்."

#: ../source/guides/packaging-binary-extensions.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Packaging binary extensions"
msgstr "பேக்கேசிங் பைனரி நீட்டிப்புகள்"

#: ../source/guides/packaging-binary-extensions.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2013-12-08"
msgstr "2013-12-08"

#: ../source/guides/packaging-binary-extensions.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"One of the features of the CPython reference interpreter is that, in "
"addition to allowing the execution of Python code, it also exposes a rich C "
"API for use by other software. One of the most common uses of this C API is "
"to create importable C extensions that allow things which aren't always easy"
" to achieve in pure Python code."
msgstr ""
"சிபிதான் குறிப்பு மொழிபெயர்ப்பாளரின் அம்சங்களில் ஒன்று, பைதான் குறியீட்டை "
"செயல்படுத்த அனுமதிப்பதைத் தவிர, மற்ற மென்பொருளால் பயன்படுத்த ஒரு பணக்கார சி "
"பநிஇ அம்பலப்படுத்துகிறது. இந்த சி ஏபிஐயின் மிகவும் பொதுவான பயன்பாடுகளில் "
"ஒன்று, தூய பைதான் குறியீட்டில் எப்போதும் எளிதாக அடையாத விசயங்களை "
"அனுமதிக்கும் இறக்குமதி செய்யக்கூடிய சி நீட்டிப்புகளை உருவாக்குவதாகும்."

#: ../source/guides/packaging-binary-extensions.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "An overview of binary extensions"
msgstr "பைனரி நீட்டிப்புகளின் கண்ணோட்டம்"

#: ../source/guides/packaging-binary-extensions.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Use cases"
msgstr "வழக்குகளைப் பயன்படுத்துங்கள்"

#: ../source/guides/packaging-binary-extensions.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The typical use cases for binary extensions break down into just three "
"conventional categories:"
msgstr ""
"பைனரி நீட்டிப்புகளுக்கான வழக்கமான பயன்பாட்டு வழக்குகள் மூன்று வழக்கமான "
"வகைகளாக உடைக்கப்படுகின்றன:"

#: ../source/guides/packaging-binary-extensions.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**accelerator modules**: these modules are completely self-contained, and "
"are created solely to run faster than the equivalent pure Python code runs "
"in CPython. Ideally, accelerator modules will always have a pure Python "
"equivalent to use as a fallback if the accelerated version isn't available "
"on a given system. The CPython standard library makes extensive use of "
"accelerator modules. *Example*: When importing ``datetime``, Python falls "
"back to the `datetime.py "
"<https://github.com/python/cpython/blob/main/Lib/datetime.py>`_ module if "
"the C implementation ( `_datetimemodule.c "
"<https://github.com/python/cpython/blob/main/Modules/_datetimemodule.c>`_) "
"is not available."
msgstr ""
". வெறுமனே, கொடுக்கப்பட்ட கணினியில் முடுக்கப்பட்ட பதிப்பு கிடைக்கவில்லை "
"என்றால், முடுக்கி தொகுதிகள் எப்போதுமே ஒரு தூய பைத்தானைக் கொண்டிருக்கும். "
"Cpython நிலையான நூலகம் முடுக்கி தொகுதிகளை விரிவாகப் பயன்படுத்துகிறது. . "
"செயல்படுத்தல் (`_datetimemodule.c "
"<https://github.com/python/cpython/blob/main/modules/_datetimemodule.c> _ _)"
" கிடைக்கவில்லை."

#: ../source/guides/packaging-binary-extensions.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**wrapper modules**: these modules are created to expose existing C "
"interfaces to Python code. They may either expose the underlying C interface"
" directly, or else expose a more \"Pythonic\" API that makes use of Python "
"language features to make the API easier to use. The CPython standard "
"library makes extensive use of wrapper modules. *Example*: `functools.py "
"<https://github.com/python/cpython/blob/main/Lib/functools.py>`_ is a Python"
" module wrapper for `_functoolsmodule.c "
"<https://github.com/python/cpython/blob/main/Modules/_functoolsmodule.c>`_."
msgstr ""
"** ரேப்பர் தொகுதிகள் **: இந்த தொகுதிகள் தற்போதுள்ள சி இடைமுகங்களை பைதான் "
"குறியீட்டிற்கு வெளிப்படுத்த உருவாக்கப்படுகின்றன. அவை அடிப்படை சி இடைமுகத்தை "
"நேரடியாக அம்பலப்படுத்தலாம், இல்லையெனில் பநிஇ பயன்படுத்த எளிதாக்குவதற்கு "
"பைதான் மொழி அம்சங்களைப் பயன்படுத்தும் அதிக \"பைத்தானிக்\" பநிஇ "
"அம்பலப்படுத்தலாம். Cpython நிலையான நூலகம் ரேப்பர் தொகுதிகளை விரிவாகப் "
"பயன்படுத்துகிறது. . "
"com/python/cpython/blob/main/தொகுதிகள்/_functoolsmodule.c> `_."

#: ../source/guides/packaging-binary-extensions.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**low-level system access**: these modules are created to access lower level"
" features of the CPython runtime, the operating system, or the underlying "
"hardware. Through platform specific code, extension modules may achieve "
"things that aren't possible in pure Python code. A number of CPython "
"standard library modules are written in C in order to access interpreter "
"internals that aren't exposed at the language level. *Example*: ``sys``, "
"which comes from `sysmodule.c "
"<https://github.com/python/cpython/blob/main/Python/sysmodule.c>`_."
msgstr ""
"** குறைந்த-நிலை கணினி அணுகல் **: இந்த தொகுதிகள் CPython இயக்க நேரம், இயக்க "
"முறைமை அல்லது அடிப்படை வன்பொருளின் கீழ் நிலை அம்சங்களை அணுக "
"உருவாக்கப்படுகின்றன. இயங்குதள குறிப்பிட்ட குறியீடு மூலம், நீட்டிப்பு "
"தொகுதிகள் தூய பைதான் குறியீட்டில் சாத்தியமில்லாத விசயங்களை அடையக்கூடும். "
"மொழி மட்டத்தில் வெளிப்படுத்தப்படாத மொழிபெயர்ப்பாளர் உட்புறங்களை அணுகுவதற்காக"
" பல CPYTHON நிலையான நூலக தொகுதிகள் C இல் எழுதப்பட்டுள்ளன. ."

#: ../source/guides/packaging-binary-extensions.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"One particularly notable feature of C extensions is that, when they don't "
"need to call back into the interpreter runtime, they can release CPython's "
"global interpreter lock around long-running operations (regardless of "
"whether those operations are CPU or IO bound)."
msgstr ""
"சி நீட்டிப்புகளின் குறிப்பாக குறிப்பிடத்தக்க நற்பொருத்தம் என்னவென்றால், "
"அவர்கள் மொழிபெயர்ப்பாளர் இயக்க நேரத்திற்கு திரும்ப அழைக்கத் தேவையில்லை, "
"அவர்கள் சிபிதானின் உலகளாவிய மொழிபெயர்ப்பாளர் பூட்டை நீண்டகால செயல்பாடுகளைச் "
"சுற்றி வெளியிடலாம் (அந்த செயல்பாடுகள் சிபியு அல்லது IO பிணைப்பு என்பதைப் "
"பொருட்படுத்தாமல்)."

#: ../source/guides/packaging-binary-extensions.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Not all extension modules will fit neatly into the above categories. The "
"extension modules included with NumPy, for example, span all three use cases"
" - they move inner loops to C for speed reasons, wrap external libraries "
"written in C, FORTRAN and other languages, and use low level system "
"interfaces for both CPython and the underlying operation system to support "
"concurrent execution of vectorised operations and to tightly control the "
"exact memory layout of created objects."
msgstr ""
"எல்லா நீட்டிப்பு தொகுதிகளும் மேலே உள்ள வகைகளுக்கு அழகாக பொருந்தாது. NUMPY "
"உடன் சேர்க்கப்பட்ட நீட்டிப்பு தொகுதிகள், எடுத்துக்காட்டாக, மூன்று பயன்பாட்டு"
" நிகழ்வுகளையும் பரப்புகின்றன - அவை வேக காரணங்களுக்காக உள் சுழல்களை C க்கு "
"நகர்த்துகின்றன, C, Fortran மற்றும் பிற மொழிகளில் எழுதப்பட்ட வெளிப்புற "
"நூலகங்களை போர்த்துகின்றன, மேலும் CPyThon மற்றும் அடிப்படை இரண்டிற்கும் "
"குறைந்த அளவிலான கணினி இடைமுகங்களைப் பயன்படுத்துகின்றன திசையன் செய்யப்பட்ட "
"செயல்பாடுகளை ஒரே நேரத்தில் செயல்படுத்துவதற்கும், உருவாக்கப்பட்ட பொருட்களின் "
"சரியான நினைவக அமைப்பை இறுக்கமாகக் கட்டுப்படுத்துவதற்கும் செயல்பாட்டு "
"அமைப்பு."

#: ../source/guides/packaging-binary-extensions.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Disadvantages"
msgstr "குறைபாடுகள்"

#: ../source/guides/packaging-binary-extensions.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The main disadvantage of using binary extensions is the fact that it makes "
"subsequent distribution of the software more difficult. One of the "
"advantages of using Python is that it is largely cross platform, and the "
"languages used to write extension modules (typically C or C++, but really "
"any language that can bind to the CPython C API) typically require that "
"custom binaries be created for different platforms."
msgstr ""
"பைனரி நீட்டிப்புகளைப் பயன்படுத்துவதன் முக்கிய குறைபாடு என்னவென்றால், இது "
"மென்பொருளின் அடுத்தடுத்த விநியோகத்தை மிகவும் கடினமாக்குகிறது. பைத்தானைப் "
"பயன்படுத்துவதன் நன்மைகளில் ஒன்று, இது பெரும்பாலும் குறுக்கு தளம், மற்றும் "
"நீட்டிப்பு தொகுதிகளை எழுதப் பயன்படுத்தப்படும் மொழிகள் (பொதுவாக சி அல்லது சி "
"++, ஆனால் உண்மையில் சிபிதான் சி பநிஇ உடன் பிணைக்கக்கூடிய எந்தவொரு மொழியும் "
"பொதுவாக தனிப்பயன் பைனரிகளை உருவாக்க வேண்டும் வெவ்வேறு தளங்கள்."

#: ../source/guides/packaging-binary-extensions.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This means that binary extensions:"
msgstr "This means that இருமம் extensions:"

#: ../source/guides/packaging-binary-extensions.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"require that end users be able to either build them from source, or else "
"that someone publish pre-built binaries for common platforms"
msgstr ""
"இறுதி பயனர்கள் அவற்றை மூலத்திலிருந்து உருவாக்க முடியும், இல்லையெனில் யாராவது"
" பொதுவான தளங்களுக்கு முன்பே கட்டப்பட்ட பைனரிகளை வெளியிடுகிறார்கள்"

#: ../source/guides/packaging-binary-extensions.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"may not be compatible with different builds of the CPython reference "
"interpreter"
msgstr "Cpython குறிப்பு மொழிபெயர்ப்பாளரின் வெவ்வேறு கட்டடங்களுடன் பொருந்தாது"

#: ../source/guides/packaging-binary-extensions.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"often will not work correctly with alternative interpreters such as PyPy, "
"IronPython or Jython"
msgstr ""
"பைபி, அயர்ன் பிதான் அல்லது சைத்தான் போன்ற மாற்று மொழிபெயர்ப்பாளர்களுடன் "
"பெரும்பாலும் சரியாக வேலை செய்யாது"

#: ../source/guides/packaging-binary-extensions.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"if handcoded, make maintenance more difficult by requiring that maintainers "
"be familiar not only with Python, but also with the language used to create "
"the binary extension, as well as with the details of the CPython C API."
msgstr ""
"ஏண்ட்கோட் செய்யப்பட்டால், பராமரிப்பாளர்கள் பைத்தானுடன் மட்டுமல்லாமல், பைனரி "
"நீட்டிப்பை உருவாக்கப் பயன்படுத்தப்படும் மொழியுடனும், சிபிதான் சி பநிஇ "
"விவரங்களுடனும் தெரிந்திருக்க வேண்டும் என்று தேவைப்படுவதன் மூலம் பராமரிப்பை "
"மிகவும் கடினமாக்குங்கள்."

#: ../source/guides/packaging-binary-extensions.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"if a pure Python fallback implementation is provided, make maintenance more "
"difficult by requiring that changes be implemented in two places, and "
"introducing additional complexity in the test suite to ensure both versions "
"are always executed."
msgstr ""
"ஒரு தூய பைதான் குறைவடையும் செயல்படுத்தல் வழங்கப்பட்டால், இரண்டு இடங்களில் "
"மாற்றங்கள் செயல்படுத்தப்பட வேண்டும் என்று தேவைப்படுவதன் மூலம் பராமரிப்பை "
"மிகவும் கடினமாக்குங்கள், மேலும் இரண்டு பதிப்புகளும் எப்போதும் "
"செயல்படுத்தப்படுவதை உறுதிசெய்ய சோதனை தொகுப்பில் கூடுதல் சிக்கலை "
"அறிமுகப்படுத்துகின்றன."

#: ../source/guides/packaging-binary-extensions.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Another disadvantage of relying on binary extensions is that alternative "
"import mechanisms (such as the ability to import modules directly from "
"zipfiles) often won't work for extension modules (as the dynamic loading "
"mechanisms on most platforms can only load libraries from disk)."
msgstr ""
"பைனரி நீட்டிப்புகளை நம்புவதன் மற்றொரு தீமை என்னவென்றால், மாற்று இறக்குமதி "
"வழிமுறைகள் (சிப்ஃபைல்களிலிருந்து நேரடியாக தொகுதிகளை இறக்குமதி செய்யும் திறன்"
" போன்றவை) பெரும்பாலும் நீட்டிப்பு தொகுதிகளுக்கு வேலை செய்யாது (பெரும்பாலான "
"தளங்களில் மாறும் ஏற்றுதல் வழிமுறைகள் வட்டில் இருந்து நூலகங்களை மட்டுமே ஏற்ற "
"முடியும்)."

#: ../source/guides/packaging-binary-extensions.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Alternatives to handcoded accelerator modules"
msgstr "ஏண்ட்கோட் செய்யப்பட்ட முடுக்கி தொகுதிகளுக்கு மாற்று வழிகள்"

#: ../source/guides/packaging-binary-extensions.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When extension modules are just being used to make code run faster (after "
"profiling has identified the code where the speed increase is worth "
"additional maintenance effort), a number of other alternatives should also "
"be considered:"
msgstr ""
"குறியீட்டை வேகமாக இயக்க நீட்டிப்பு தொகுதிகள் பயன்படுத்தப்படும்போது "
"(விவரக்குறிப்பு கூடுதல் பராமரிப்பு முயற்சிக்கு மதிப்புள்ள குறியீட்டை "
"விவரக்குறிப்பு அடையாளம் கண்டுள்ள பிறகு), பல மாற்றுகளும் கருத்தில் கொள்ளப்பட "
"வேண்டும்:"

#: ../source/guides/packaging-binary-extensions.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"look for existing optimised alternatives. The CPython standard library "
"includes a number of optimised data structures and algorithms (especially in"
" the builtins and the ``collections`` and ``itertools`` modules). The Python"
" Package Index also offers additional alternatives. Sometimes, the "
"appropriate choice of standard library or third party module can avoid the "
"need to create your own accelerator module."
msgstr ""
"இருக்கும் உகந்த மாற்றுகளைத் தேடுங்கள். CPython நிலையான நூலகத்தில் பல உகந்த "
"தரவு கட்டமைப்புகள் மற்றும் வழிமுறைகள் (குறிப்பாக பில்டின்ச் மற்றும் `` "
"சேகரிப்புகள்` மற்றும் `` itertools`` தொகுதிகள்) உள்ளன. பைதான் தொகுப்பு "
"குறியீடு கூடுதல் மாற்றுகளையும் வழங்குகிறது. சில நேரங்களில், நிலையான நூலகம் "
"அல்லது மூன்றாம் தரப்பு தொகுதியின் பொருத்தமான தேர்வு உங்கள் சொந்த முடுக்கி "
"தொகுதியை உருவாக்க வேண்டிய அவசியத்தைத் தவிர்க்கலாம்."

#: ../source/guides/packaging-binary-extensions.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"for long running applications, the JIT compiled `PyPy interpreter "
"<https://www.pypy.org/>`__ may offer a suitable alternative to the standard "
"CPython runtime. The main barrier to adopting PyPy is typically reliance on "
"other binary extension modules - while PyPy does emulate the CPython C API, "
"modules that rely on that cause problems for the PyPy JIT, and the emulation"
" layer can often expose latent defects in extension modules that CPython "
"currently tolerates (frequently around reference counting errors - an object"
" having one live reference instead of two often won't break anything, but no"
" references instead of one is a major problem)."
msgstr ""
"க்கு long running applications, the JIT compiled `PyPy interpreter "
"<https://www.pypy.org/>`__ சி-வைகாசி offer a suitable alternative பெறுநர் "
"the தரநிலை CPython runtime. The main barrier பெறுநர் adopting PyPy is "
"typically reliance on மற்றொன்று இருமம் extension தொகுதிகள் - while PyPy does"
" emulate the CPython C பநிஇ, தொகுதிகள் that rely on that cause problems க்கு"
" the PyPy JIT, and the போன்மம் layer can often expose latent defects in "
"extension தொகுதிகள் that CPython currently tolerates (frequently around "
"குறிப்பு counting errors - an பொருள் having one live குறிப்பு instead of two"
" often won't இடைவேளை anything, but இல்லை குறிப்புகள் instead of one is a "
"major problem)."

#: ../source/guides/packaging-binary-extensions.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Cython <https://cython.org/>`__ is a mature static compiler that can "
"compile most Python code to C extension modules. The initial compilation "
"provides some speed increases (by bypassing the CPython interpreter layer), "
"and Cython's optional static typing features can offer additional "
"opportunities for speed increases. Using Cython still carries the "
"`disadvantages`_ associated with using binary extensions, but has the "
"benefit of having a reduced barrier to entry for Python programmers "
"(relative to other languages like C or C++)."
msgstr ""
"`சித்தான் <https://cython.org/> ____ என்பது ஒரு முதிர்ந்த நிலையான தொகுப்பி, "
"இது சி நீட்டிப்பு தொகுதிகளில் பெரும்பாலான பைதான் குறியீட்டை தொகுக்க "
"முடியும். ஆரம்ப தொகுப்பு சில வேக அதிகரிப்புகளை வழங்குகிறது (சிபிதான் "
"மொழிபெயர்ப்பாளர் அடுக்கைத் தவிர்ப்பதன் மூலம்), மற்றும் சைதனின் விருப்ப "
"நிலையான தட்டச்சு நற்பொருத்தங்கள் வேக அதிகரிப்புக்கு கூடுதல் வாய்ப்புகளை "
"வழங்கும். சைதனைப் பயன்படுத்துவது பைனரி நீட்டிப்புகளைப் பயன்படுத்துவதோடு "
"தொடர்புடைய `தீமைகள்`_ ஐக் கொண்டுள்ளது, ஆனால் பைதான் புரோகிராமர்களுக்கான "
"நுழைவதற்கு குறைக்கப்பட்ட தடையைக் கொண்டிருப்பதன் நன்மையைக் கொண்டுள்ளது (சி "
"அல்லது சி ++ போன்ற பிற மொழிகளுடன் ஒப்பிடும்போது)."

#: ../source/guides/packaging-binary-extensions.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Numba <http://numba.pydata.org/>`__ is a newer tool, created by members of "
"the scientific Python community, that aims to leverage LLVM to allow "
"selective compilation of pieces of a Python application to native machine "
"code at runtime. It requires that LLVM be available on the system where the "
"code is running, but can provide significant speed increases, especially for"
" operations that are amenable to vectorisation."
msgstr ""
"`Numba <http://numba.pydata.org/>` __ என்பது ஒரு புதிய கருவியாகும், இது "
"விஞ்ஞான பைதான் சமூகத்தின் உறுப்பினர்களால் உருவாக்கப்பட்டது, இது ஒரு பைதான் "
"பயன்பாட்டின் துண்டுகளை தேர்ந்தெடுக்கப்பட்ட தொகுப்பை சொந்த இயந்திரக் "
"குறியீட்டிற்கு அனுமதிக்க எல்.எல்.வி.எம் இயக்க நேரம். குறியீடு இயங்கும் "
"கணினியில் எல்.எல்.வி.எம் கிடைக்க வேண்டும், ஆனால் குறிப்பிடத்தக்க வேக "
"அதிகரிப்புகளை வழங்க முடியும், குறிப்பாக திசையன்மயமாக்கலுக்கு ஏற்ற "
"செயல்பாடுகளுக்கு."

#: ../source/guides/packaging-binary-extensions.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Alternatives to handcoded wrapper modules"
msgstr "ஏண்ட்கோட் செய்யப்பட்ட ரேப்பர் தொகுதிகளுக்கு மாற்று வழிகள்"

#: ../source/guides/packaging-binary-extensions.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The C ABI (Application Binary Interface) is a common standard for sharing "
"functionality between multiple applications. One of the strengths of the "
"CPython C API (Application Programming Interface) is allowing Python users "
"to tap into that functionality. However, wrapping modules by hand is quite "
"tedious, so a number of other alternative approaches should be considered."
msgstr ""
"சி பநிஇ (பயன்பாட்டு பைனரி இடைமுகம்) பல பயன்பாடுகளுக்கு இடையில் செயல்பாட்டைப்"
" பகிர்வதற்கான பொதுவான தரமாகும். Cpython C பநிஇ (பயன்பாட்டு நிரலாக்க "
"இடைமுகம்) இன் பலங்களில் ஒன்று பைத்தான் பயனர்களை அந்த செயல்பாட்டைத் தட்ட "
"அனுமதிக்கிறது. இருப்பினும், தொகுதிகளை கையால் மடக்குவது மிகவும் கடினமானது, "
"எனவே பல மாற்று அணுகுமுறைகள் கருத்தில் கொள்ளப்பட வேண்டும்."

#: ../source/guides/packaging-binary-extensions.rst:156
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The approaches described below don't simplify the distribution case at all, "
"but they *can* significantly reduce the maintenance burden of keeping "
"wrapper modules up to date."
msgstr ""
"கீழே விவரிக்கப்பட்டுள்ள அணுகுமுறைகள் விநியோக வழக்கை எளிதாக்குவதில்லை, ஆனால் "
"அவை போர்வுற்ற தொகுதிகளை புதுப்பித்த நிலையில் வைத்திருப்பதற்கான பராமரிப்பு "
"சுமையை கணிசமாகக் குறைக்க முடியும்."

#: ../source/guides/packaging-binary-extensions.rst:160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to being useful for the creation of accelerator modules, `Cython"
" <https://cython.org/>`__ is also widely used for creating wrapper modules "
"for C or C++ APIs. It involves wrapping the interfaces by hand, which gives "
"a wide range of freedom in designing and optimising the wrapper code, but "
"may not be a good choice for wrapping very large APIs quickly. See the `list"
" of third-party tools <https://github.com/cython/cython/wiki/AutoPxd>`_ for "
"automatic wrapping with Cython. It also supports performance-oriented Python"
" implementations that provide a CPython-like C-API, such as PyPy and Pyston."
msgstr ""
"முடுக்கி தொகுதிகள் உருவாக்க பயனுள்ளதாக இருப்பதோடு மட்டுமல்லாமல், சி அல்லது "
"சி ++ ஏபிஐகளுக்கான ரேப்பர் தொகுதிகள் உருவாக்க சைதான் <https://cython.org/> "
"__ __ பரவலாகப் பயன்படுத்தப்படுகிறது. இது இடைமுகங்களை கையால் போர்த்துவதை "
"உள்ளடக்கியது, இது ரேப்பர் குறியீட்டை வடிவமைத்து மேம்படுத்துவதில் பரந்த "
"அளவிலான சுதந்திரத்தை அளிக்கிறது, ஆனால் மிகப் பெரிய ஏபிஐக்களை விரைவாக "
"மடக்குவதற்கு நல்ல தேர்வாக இருக்காது. மூன்றாம் தரப்பு கருவிகளின் பட்டியலைப் "
"பார்க்கவும் <https://github.com/cython/cython/wiki/autopxd> `_ சைதனுடன் "
"தானியங்கி மடக்குதல். பைபி மற்றும் பிச்டன் போன்ற சிபிதான் போன்ற சி-ஏபிஐ "
"வழங்கும் செயல்திறன் சார்ந்த பைதான் செயலாக்கங்களையும் இது ஆதரிக்கிறது."

#: ../source/guides/packaging-binary-extensions.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`pybind11 <pybind11:index>` is a pure C++11 library that provides a "
"clean C++ interface to the CPython (and PyPy) C API. It does not require a "
"pre-processing step; it is written entirely in templated C++. Helpers are "
"included for Setuptools or CMake builds. It was based on `Boost.Python "
"<https://www.boost.org/doc/libs/1_76_0/libs/python/doc/html/index.html>`__, "
"but doesn't require the Boost libraries or BJam."
msgstr ""
". இதற்கு முன் செயலாக்க படி தேவையில்லை; இது முற்றிலும் வார்ப்புரு சி ++ இல் "
"எழுதப்பட்டுள்ளது. செட்டுப்டூல்கள் அல்லது செமேக் கட்டமைப்புகளுக்கு "
"உதவியாளர்கள் சேர்க்கப்பட்டுள்ளனர். இது `boost.python "
"<https://www.boost.org/doc/libs/1_76_0/libs/python/doc/html/index.html> __, "
"ஆனால் பூச்ட் நூலகங்கள் அல்லது பிசாம் தேவையில்லை ."

#: ../source/guides/packaging-binary-extensions.rst:178
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`cffi <cffi:index>` is a project created by some of the PyPy developers"
" to make it straightforward for developers that already know both Python and"
" C to expose their C modules to Python applications. It also makes it "
"relatively straightforward to wrap a C module based on its header files, "
"even if you don't know C yourself."
msgstr ""
". சி தொகுதியை அதன் தலைப்பு கோப்புகளின் அடிப்படையில் மடிக்க இது ஒப்பீட்டளவில்"
" நேரடியானதாக அமைகிறது."

#: ../source/guides/packaging-binary-extensions.rst:184
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"One of the key advantages of ``cffi`` is that it is compatible with the PyPy"
" JIT, allowing CFFI wrapper modules to participate fully in PyPy's tracing "
"JIT optimisations."
msgstr ""
"`` Cffi`` இன் முக்கிய நன்மைகளில் ஒன்று, இது பைபி JIT உடன் இணக்கமானது, இது "
"CFFI ரேப்பர் தொகுதிகள் பைபியின் தடமறியும் JIT மேம்படுத்தல்களில் முழுமையாக "
"பங்கேற்க அனுமதிக்கிறது."

#: ../source/guides/packaging-binary-extensions.rst:188
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`SWIG <http://www.swig.org/>`__ is a wrapper interface generator that allows"
" a variety of programming languages, including Python, to interface with C "
"and C++ code."
msgstr ""
"`ச்விக் <http://www.swig.org/> ____ என்பது ஒரு ரேப்பர் இடைமுக செனரேட்டர் "
"ஆகும், இது பைதான் உள்ளிட்ட பல்வேறு நிரலாக்க மொழிகளை சி மற்றும் சி ++ "
"குறியீட்டுடன் இடைமுகப்படுத்த அனுமதிக்கிறது."

#: ../source/guides/packaging-binary-extensions.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The standard library's ``ctypes`` module, while useful for getting access to"
" C level interfaces when header information isn't available, suffers from "
"the fact that it operates solely at the C ABI level, and thus has no "
"automatic consistency checking between the interface actually being exported"
" by the library and the one declared in the Python code. By contrast, the "
"above alternatives are all able to operate at the C *API* level, using C "
"header files to ensure consistency between the interface exported by the "
"library being wrapped and the one expected by the Python wrapper module. "
"While ``cffi`` *can* operate directly at the C ABI level, it suffers from "
"the same interface inconsistency problems as ``ctypes`` when it is used that"
" way."
msgstr ""
"நிலையான நூலகத்தின் `` ctypes`` தொகுதி, தலைப்பு செய்தி கிடைக்காதபோது சி நிலை "
"இடைமுகங்களை அணுகுவதற்கு பயனுள்ளதாக இருக்கும்போது, ​​அது சி பநிஇ மட்டத்தில் "
"மட்டுமே இயங்குகிறது என்பதன் மூலம் பாதிக்கப்படுகிறது, இதனால் எந்த தானியங்கி "
"நிலைத்தன்மையும் இல்லை இடைமுகம் உண்மையில் நூலகத்தால் ஏற்றுமதி செய்யப்படுகிறது"
" மற்றும் பைதான் குறியீட்டில் அறிவிக்கப்பட்ட ஒன்று. இதற்கு நேர்மாறாக, மேலே "
"உள்ள மாற்றுகள் அனைத்தும் சி * பநிஇ * மட்டத்தில் செயல்பட முடியும், சி தலைப்பு"
" கோப்புகளைப் பயன்படுத்தி நூலகத்தால் ஏற்றுமதி செய்யப்படும் இடைமுகத்திற்கும் "
"பைதான் ரேப்பர் தொகுதியால் எதிர்பார்க்கப்படுவதற்கும் இடையிலான நிலைத்தன்மையை "
"உறுதிசெய்கிறது. `` Cffi`` * * சி பநிஇ மட்டத்தில் நேரடியாக செயல்பட முடியும் "
"என்றாலும், அது அந்த வழியில் பயன்படுத்தப்படும்போது அதே இடைமுக முரண்பாடு "
"சிக்கல்களால் `` ctypes`` போன்றவற்றால் பாதிக்கப்படுகிறது."

#: ../source/guides/packaging-binary-extensions.rst:206
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Alternatives for low level system access"
msgstr "குறைந்த அளவிலான கணினி அணுகலுக்கான மாற்று வழிகள்"

#: ../source/guides/packaging-binary-extensions.rst:208
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For applications that need low level system access (regardless of the "
"reason), a binary extension module often *is* the best way to go about it. "
"This is particularly true for low level access to the CPython runtime "
"itself, since some operations (like releasing the Global Interpreter Lock) "
"are simply invalid when the interpreter is running code, even if a module "
"like ``ctypes`` or ``cffi`` is used to obtain access to the relevant C API "
"interfaces."
msgstr ""
"குறைந்த அளவிலான கணினி அணுகல் தேவைப்படும் பயன்பாடுகளுக்கு (காரணத்தைப் "
"பொருட்படுத்தாமல்), ஒரு பைனரி நீட்டிப்பு தொகுதி பெரும்பாலும் * அதைப் பற்றிச் "
"செல்ல சிறந்த வழியாகும். சிபிதான் இயக்க நேரத்திற்கான குறைந்த அளவிலான "
"அணுகலுக்கு இது குறிப்பாக உண்மை, ஏனெனில் சில செயல்பாடுகள் (உலகளாவிய "
"மொழிபெயர்ப்பாளர் பூட்டை வெளியிடுவது போன்றவை) மொழிபெயர்ப்பாளர் குறியீட்டை "
"இயக்கும்போது வெறுமனே செல்லாது, `` ctypes`` அல்லது `` cffi` போன்ற ஒரு தொகுதி "
"கூட இருந்தாலும் கூட தொடர்புடைய சி பநிஇ இடைமுகங்களுக்கான அணுகலைப் பெற "
"`பயன்படுத்தப்படுகிறது."

#: ../source/guides/packaging-binary-extensions.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For cases where the extension module is manipulating the underlying "
"operating system or hardware (rather than the CPython runtime), it may "
"sometimes be better to just write an ordinary C library (or a library in "
"another systems programming language like C++ or Rust that can export a C "
"compatible ABI), and then use one of the wrapping techniques described above"
" to make the interface available as an importable Python module."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:225
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Implementing binary extensions"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:227
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The CPython :doc:`Extending and Embedding <python:extending/index>` guide "
"includes an introduction to writing a :doc:`custom extension module in C "
"<python:extending/extending>`."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:231
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"FIXME: Elaborate that all this is one of the reasons why you probably "
"*don't* want to handcode your extension modules :)"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:236
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Extension module lifecycle"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:238
#: ../source/guides/packaging-binary-extensions.rst:244
#: ../source/guides/packaging-binary-extensions.rst:250
#: ../source/guides/packaging-binary-extensions.rst:256
#: ../source/guides/packaging-binary-extensions.rst:376
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "FIXME: This section needs to be fleshed out."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:242
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Implications of shared static state and subinterpreters"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Implications of the GIL"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:254
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Memory allocation APIs"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:262
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "ABI Compatibility"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:264
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The CPython C API does not guarantee ABI stability between minor releases "
"(3.2, 3.3, 3.4, etc.). This means that, typically, if you build an extension"
" module against one version of Python, it is only guaranteed to work with "
"the same minor version of Python and not with any other minor versions."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:270
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python 3.2 introduced the Limited API, with is a well-defined subset of "
"Python's C API. The symbols needed for the Limited API form the \"Stable "
"ABI\" which is guaranteed to be compatible across all Python 3.x versions. "
"Wheels containing extensions built against the stable ABI use the ``abi3`` "
"ABI tag, to reflect that they're compatible with all Python 3.x versions."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:277
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"CPython's :doc:`C API stability<python:c-api/stable>` page provides detailed"
" information about the API / ABI stability guarantees, how to use the "
"Limited API and the exact contents of the \"Limited API\"."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:283
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Building binary extensions"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:285
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "FIXME: Cover the build-backends available for building extensions."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:288
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Building extensions for multiple platforms"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:290
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you plan to distribute your extension, you should provide :term:`wheels "
"<Wheel>` for all the platforms you intend to support. These are usually "
"built on continuous integration (CI) systems. There are tools to help you "
"build highly redistributable binaries from CI; these include "
":ref:`cibuildwheel` and :ref:`multibuild`."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:296
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For most extensions, you will need to build wheels for all the platforms you"
" intend to support. This means that the number of wheels you need to build "
"is the product of::"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:302
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Using CPython's :ref:`Stable ABI <cpython-stable-abi>` can help "
"significantly reduce the number of wheels you need to provide, since a "
"single wheel on a platform can be used with all Python minor versions; "
"eliminating one dimension of the matrix. It also removes the need to "
"generate new wheels for each new minor version of Python."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:309
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Binary extensions for Windows"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:311
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Before it is possible to build a binary extension, it is necessary to ensure"
" that you have a suitable compiler available. On Windows, Visual C is used "
"to build the official CPython interpreter, and should be used to build "
"compatible binary extensions.  To set up a build environment for binary "
"extensions, install `Visual Studio Community Edition "
"<https://visualstudio.microsoft.com/downloads/>`__ - any recent version is "
"fine."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:318
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"One caveat: if you use Visual Studio 2019 or later, your extension will "
"depend on an \"extra\" file, ``VCRUNTIME140_1.dll``, in addition to the "
"``VCRUNTIME140.dll`` that all previous versions back to 2015 depend on. This"
" will add an extra requirement to using your extension on versions of "
"CPython that do not include this extra file. To avoid this, you can add the "
"compile-time argument ``/d2FH4-``. Recent versions of Python may include "
"this file."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:326
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Building for Python prior to 3.5 is discouraged, because older versions of "
"Visual Studio are no longer available from Microsoft. If you do need to "
"build for older versions, you can set ``DISTUTILS_USE_SDK=1`` and "
"``MSSdk=1`` to force a the currently activated version of MSVC to be found, "
"and you should exercise care when designing your extension not to "
"malloc/free memory across different libraries, avoid relying on changed data"
" structures, and so on. Tools for generating extension modules usually avoid"
" these things for you."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:337
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Binary extensions for Linux"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:339
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Linux binaries must use a sufficiently old glibc to be compatible with older"
" distributions. The `manylinux <https://github.com/pypa/manylinux>`_ Docker "
"images provide a build environment with a glibc old enough to support most "
"current Linux distributions on common architectures."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:345
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Binary extensions for macOS"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:347
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Binary compatibility on macOS is determined by the target minimum deployment"
" system, e.g. *10.9*, which is often specified with the "
"``MACOSX_DEPLOYMENT_TARGET`` environmental variable when building binaries "
"on macOS. When building with setuptools / distutils, the deployment target "
"is specified with the flag ``--plat-name``, e.g. ``macosx-10.9-x86_64``. For"
" common deployment targets for macOS Python distributions, see the "
"`MacPython Spinning Wheels wiki "
"<https://github.com/MacPython/wiki/wiki/Spinning-wheels>`_."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:357
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Publishing binary extensions"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:359
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Publishing binary extensions through PyPI uses the same upload mechanisms as"
" publishing pure Python packages. You build a wheel file for your extension "
"using the build-backend and upload it to PyPI using :doc:`twine "
"<twine:index>`."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:365
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Avoid binary-only releases"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:367
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is strongly recommended that you publish your binary extensions as well "
"as the source code that was used to build them. This allows users to build "
"the extension from source if they need to. Notably, this is required for "
"certain Linux distributions that build from source within their own build "
"systems for the distro package repositories."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:374
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Weak linking"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:379
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Additional resources"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:381
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Cross-platform development and distribution of extension modules is a "
"complex topic, so this guide focuses primarily on providing pointers to "
"various tools that automate dealing with the underlying technical "
"challenges. The additional resources in this section are instead intended "
"for developers looking to understand more about the underlying binary "
"interfaces that those systems rely on at runtime."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:388
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Cross-platform wheel generation with scikit-build"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:390
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The `scikit-build <https://scikit-build.readthedocs.io/en/latest/>`_ package"
" helps abstract cross-platform build operations and provides additional "
"capabilities when creating binary extension packages. Additional "
"documentation is also available on the `C runtime, compiler, and build "
"system generator <https://scikit-"
"build.readthedocs.io/en/latest/generators.html>`_ for Python binary "
"extension modules."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:398
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Introduction to C/C++ extension modules"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:400
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For a more in depth explanation of how extension modules are used by CPython"
" on a Debian system, see the following articles:"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:403
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`What are (c)python extension modules? "
"<https://thomasnyberg.com/what_are_extension_modules.html>`_"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:404
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Releasing the gil <https://thomasnyberg.com/releasing_the_gil.html>`_"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:405
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Writing cpython extension modules using C++ "
"<https://thomasnyberg.com/cpp_extension_modules.html>`_"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:408
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Additional considerations for binary wheels"
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:410
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The `pypackaging-native <https://pypackaging-native.github.io/>`_ website "
"has additional coverage of packaging Python packages with native code. It "
"aims to provide an overview of the most important packaging issues for such "
"projects, with in-depth explanations and references."
msgstr ""

#: ../source/guides/packaging-binary-extensions.rst:415
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Examples of topics covered are non-Python compiled dependencies (\"native "
"dependencies\"), the importance of the ABI (Application Binary Interface) of"
" native code, dependency on SIMD code and cross compilation."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Packaging namespace packages"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Namespace packages allow you to split the sub-packages and modules within a "
"single :term:`package <Import Package>` across multiple, separate "
":term:`distribution packages <Distribution Package>` (referred to as "
"**distributions** in this document to avoid ambiguity). For example, if you "
"have the following package structure:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "And you use this package in your code like so::"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Then you can break these sub-packages into two separate distributions:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Each sub-package can now be separately installed, used, and versioned."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Namespace packages can be useful for a large collection of loosely-related "
"packages (such as a large corpus of client libraries for multiple products "
"from a single company). However, namespace packages come with several "
"caveats and are not appropriate in all cases. A simple alternative is to use"
" a prefix on all of your distributions such as ``import "
"mynamespace_subpackage_a`` (you could even use ``import "
"mynamespace_subpackage_a as subpackage_a`` to keep the import object short)."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating a namespace package"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are currently two different approaches to creating namespace packages,"
" from which the latter is discouraged:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Use `native namespace packages`_. This type of namespace package is defined "
"in :pep:`420` and is available in Python 3.3 and later. This is recommended "
"if packages in your namespace only ever need to support Python 3 and "
"installation via ``pip``."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Use `legacy namespace packages`_. This comprises `pkgutil-style namespace "
"packages`_ and `pkg_resources-style namespace packages`_."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Native namespace packages"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python 3.3 added **implicit** namespace packages from :pep:`420`. All that "
"is required to create a native namespace package is that you just omit "
":file:`__init__.py` from the namespace package directory. An example file "
"structure (following :ref:`src-layout <setuptools:src-layout>`):"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is extremely important that every distribution that uses the namespace "
"package omits the :file:`__init__.py` or uses a pkgutil-style "
":file:`__init__.py`. If any distribution does not, it will cause the "
"namespace logic to fail and the other sub-packages will not be importable."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``src-layout`` directory structure allows automatic discovery of "
"packages by most :term:`build backends <Build Backend>`. See :ref:`src-"
"layout-vs-flat-layout` for more information. If however you want to manage "
"exclusions or inclusions of packages yourself, this is possible to be "
"configured in the top-level :file:`pyproject.toml`:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The same can be accomplished with a :file:`setup.cfg`:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Or :file:`setup.py`:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`setuptools` will search the directory structure for implicit namespace"
" packages by default."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A complete working example of two native namespace packages can be found in "
"the `native namespace package example project`_."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Because native and pkgutil-style namespace packages are largely compatible, "
"you can use native namespace packages in the distributions that only support"
" Python 3 and pkgutil-style namespace packages in the distributions that "
"need to support Python 2 and 3."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:158
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Legacy namespace packages"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These two methods, that were used to create namespace packages prior to "
":pep:`420`, are now considered to be obsolete and should not be used unless "
"you need compatibility with packages already using this method. Also, "
":doc:`pkg_resources <setuptools:pkg_resources>` has been deprecated."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:165
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To migrate an existing package, all packages sharing the namespace must be "
"migrated simultaneously."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:167
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While native namespace packages and pkgutil-style namespace packages are "
"largely compatible, pkg_resources-style namespace packages are not "
"compatible with the other methods. It's inadvisable to use different methods"
" in different distributions that provide packages to the same namespace."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pkgutil-style namespace packages"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:176
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python 2.3 introduced the :doc:`pkgutil <python:library/pkgutil>` module and"
" the :py:func:`python:pkgutil.extend_path` function. This can be used to "
"declare namespace packages that need to be compatible with both Python 2.3+ "
"and Python 3. This is the recommended approach for the highest level of "
"compatibility."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:181
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To create a pkgutil-style namespace package, you need to provide an "
":file:`__init__.py` file for the namespace package:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:195
#: ../source/guides/packaging-namespace-packages.rst:242
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :file:`__init__.py` file for the namespace package needs to contain the "
"following:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:202
#: ../source/guides/packaging-namespace-packages.rst:249
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Every** distribution that uses the namespace package must include such an "
":file:`__init__.py`. If any distribution does not, it will cause the "
"namespace logic to fail and the other sub-packages will not be importable.  "
"Any additional code in :file:`__init__.py` will be inaccessible."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:207
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A complete working example of two pkgutil-style namespace packages can be "
"found in the `pkgutil namespace example project`_."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:217
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pkg_resources-style namespace packages"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:219
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Setuptools <setuptools:index>` provides the "
"`pkg_resources.declare_namespace`_ function and the ``namespace_packages`` "
"argument to :func:`~setuptools.setup`. Together these can be used to declare"
" namespace packages. While this approach is no longer recommended, it is "
"widely present in most existing namespace packages. If you are creating a "
"new distribution within an existing namespace package that uses this method "
"then it's recommended to continue using this as the different methods are "
"not cross-compatible and it's not advisable to try to migrate an existing "
"package."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:228
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To create a pkg_resources-style namespace package, you need to provide an "
":file:`__init__.py` file for the namespace package:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:254
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some older recommendations advise the following in the namespace package "
":file:`__init__.py`:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:264
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The idea behind this was that in the rare case that setuptools isn't "
"available packages would fall-back to the pkgutil-style packages. This isn't"
" advisable because pkgutil and pkg_resources-style namespace packages are "
"not cross-compatible. If the presence of setuptools is a concern then the "
"package should just explicitly depend on setuptools via "
"``install_requires``."
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Finally, every distribution must provide the ``namespace_packages`` argument"
" to :func:`~setuptools.setup` in :file:`setup.py`. For example:"
msgstr ""

#: ../source/guides/packaging-namespace-packages.rst:285
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A complete working example of two pkg_resources-style namespace packages can"
" be found in the `pkg_resources namespace example project`_."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Publishing package distribution releases using GitHub Actions CI/CD "
"workflows"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`GitHub Actions CI/CD`_ allows you to run a series of commands whenever an "
"event occurs on the GitHub platform. One popular choice is having a workflow"
" that's triggered by a ``push`` event. This guide shows you how to publish a"
" Python distribution whenever a tagged commit is pushed. It will use the "
"`pypa/gh-action-pypi-publish GitHub Action`_ for publishing. It also uses "
"GitHub's `upload-artifact`_ and `download-artifact`_ actions for temporarily"
" storing and downloading the source packages."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide *assumes* that you already have a project that you know how to "
"build distributions for and *it lives on GitHub*.  This guide also avoids "
"details of building platform specific projects. If you have binary "
"components, check out :ref:`cibuildwheel`'s GitHub Action examples."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Configuring trusted publishing"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide relies on PyPI's `trusted publishing`_ implementation to connect "
"to `GitHub Actions CI/CD`_. This is recommended for security reasons, since "
"the generated tokens are created for each of your projects individually and "
"expire automatically. Otherwise, you'll need to generate an `API token`_ for"
" both PyPI and TestPyPI. In case of publishing to third-party indexes like "
":doc:`devpi <devpi:index>`, you may need to provide a username/password "
"combination."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Since this guide will demonstrate uploading to both PyPI and TestPyPI, we'll"
" need two trusted publishers configured. The following steps will lead you "
"through creating the \"pending\" publishers for your new :term:`PyPI project"
" <Project>`. However it is also possible to add `trusted publishing`_ to any"
" pre-existing project, if you are its owner."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you followed earlier versions of this guide, you have created the secrets"
" ``PYPI_API_TOKEN`` and ``TEST_PYPI_API_TOKEN`` for direct PyPI and TestPyPI"
" access. These are obsolete now and you should remove them from your GitHub "
"repository and revoke them in your PyPI and TestPyPI account settings in "
"case you are replacing your old setup with the new one."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Let's begin! 🚀"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Go to https://pypi.org/manage/account/publishing/."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Fill in the name you wish to publish your new :term:`PyPI project <Project>`"
" under (the ``name`` value in your ``setup.cfg`` or ``pyproject.toml``), the"
" GitHub repository owner's name (org or user), and repository name, and the "
"name of the release workflow file under the ``.github/`` folder, see "
":ref:`workflow-definition`. Finally, add the name of the GitHub Environment "
"(``pypi``) we're going set up under your repository. Register the trusted "
"publisher."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now, go to https://test.pypi.org/manage/account/publishing/ and repeat the "
"second step, but this time, enter ``testpypi`` as the name of the GitHub "
"Environment."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Your \"pending\" publishers are now ready for their first use and will "
"create your projects automatically once you use them for the first time."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:72
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you don't have a TestPyPI account, you'll need to create it. It's not the"
" same as a regular PyPI account."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For security reasons, you must require `manual approval "
"<https://docs.github.com/en/actions/deployment/targeting-different-"
"environments/using-environments-for-deployment#deployment-protection-"
"rules>`_ on each run for the ``pypi`` environment."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating a workflow definition"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"GitHub CI/CD workflows are declared in YAML files stored in the "
"``.github/workflows/`` directory of your repository."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:90
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Let's create a ``.github/workflows/publish-to-test-pypi.yml`` file."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Start it with a meaningful name and define the event that should make GitHub"
" run this workflow:"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Checking out the project and building distributions"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"We will have to define two jobs to publish to PyPI and TestPyPI "
"respectively, and an additional job to build the distribution packages."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"First, we'll define the job for building the dist packages of your project "
"and storing them for later use:"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This will download your repository into the CI runner and then install and "
"activate the newest available Python 3 release."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"And now we can build the dists from source and store them. In this example, "
"we'll use the ``build`` package. So add this to the steps list:"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Defining a workflow job environment"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now, let's add initial setup for our job that will publish to PyPI. It's a "
"process that will execute commands that we'll define later. In this guide, "
"we'll use the latest stable Ubuntu LTS version provided by GitHub Actions. "
"This also defines a GitHub Environment for the job to run in its context and"
" a URL to be displayed in GitHub's UI nicely. Additionally, it allows "
"acquiring an OpenID Connect token that the ``pypi-publish`` actions needs to"
" implement secretless trusted publishing to PyPI."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:144
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This will also ensure that the PyPI publishing workflow is only triggered if"
" the current commit is tagged."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Publishing the distribution to PyPI"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Finally, add the following steps at the end:"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This step uses the `pypa/gh-action-pypi-publish`_ GitHub Action: after the "
"stored distribution package has been downloaded by the `download-artifact`_ "
"action, it uploads the contents of the ``dist/`` folder into PyPI "
"unconditionally."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Signing the distribution packages"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:165
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following job signs the distribution packages with `Sigstore`_, the same"
" artifact signing system `used to sign CPython "
"<https://www.python.org/download/sigstore/>`_."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:168
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Firstly, it uses the `sigstore/gh-action-sigstore-python GitHub Action`_ to "
"sign the distribution packages. In the next step, an empty GitHub Release "
"from the current tag is created using the ``gh`` CLI. Note this step can be "
"further customised. See the `gh release documentation "
"<https://cli.github.com/manual/gh_release>`_ as a reference."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:176
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You may need to manage your ``GITHUB_TOKEN`` permissions to enable creating "
"the GitHub Release. See the `GitHub documentation "
"<https://docs.github.com/repositories/managing-your-repositorys-settings-"
"and-features/enabling-features-for-your-repository/managing-github-actions-"
"settings-for-a-repository#configuring-the-default-github_token-"
"permissions>`_ for instructions. Specifically, the token needs the "
"``contents: write`` permission."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:182
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Finally, the signed distributions are uploaded to the GitHub Release."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is a replacement for GPG signatures, for which support has been "
"`removed from PyPI <https://blog.pypi.org/posts/2023-05-23-removing-pgp/>`_."
" However, this job is not mandatory for uploading to PyPI and can be "
"omitted."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Separate workflow for publishing to TestPyPI"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:200
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now, repeat these steps and create another job for publishing to the "
"TestPyPI package index under the ``jobs`` section:"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:210
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Requiring manual approvals in the ``testpypi`` GitHub Environment is "
"typically unnecessary as it's designed to run on each commit to the main "
"branch and is often used to indicate a healthy release publishing pipeline."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:214
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The whole CI/CD workflow"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This paragraph showcases the whole workflow after following the above guide."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:224
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "That's all, folks!"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:226
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now, whenever you push a tagged commit to your Git repository remote on "
"GitHub, this workflow will publish it to PyPI. And it'll publish any push to"
" TestPyPI which is useful for providing test builds to your alpha users as "
"well as making sure that your release pipeline remains healthy!"
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:234
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your repository has frequent commit activity and every push is uploaded "
"to TestPyPI as described, the project might exceed the `PyPI project size "
"limit <https://pypi.org/help/#project-size-limit>`_. The limit could be "
"increased, but a better solution may constitute to use a PyPI-compatible "
"server like :ref:`pypiserver` in the CI for testing purposes."
msgstr ""

#: ../source/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows.rst:242
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is recommended to keep the integrated GitHub Actions at their latest "
"versions, updating them frequently."
msgstr ""

#: ../source/guides/section-build-and-publish.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Building and Publishing"
msgstr ""

#: ../source/guides/section-hosting.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Hosting"
msgstr ""

#: ../source/guides/section-install.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installation"
msgstr ""

#: ../source/guides/single-sourcing-package-version.rst:-1
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "0; url=../../discussions/single-source-version/"
msgstr ""

#: ../source/guides/single-sourcing-package-version.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Redirecting stale single-source package version link..."
msgstr ""

#: ../source/guides/single-sourcing-package-version.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the page doesn't automatically refresh, see :ref:`single-source-version`."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Supporting multiple Python versions"
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2014-12-24"
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to the work required to create a Python package, it is often "
"necessary that the package must be made available on different versions of "
"Python.  Different Python versions may contain different (or renamed) "
"standard library packages, and the changes between Python versions 2.x and "
"3.x include changes in the language syntax."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Performed manually, all the testing required to ensure that the package "
"works correctly on all the target Python versions (and OSs!) could be very "
"time-consuming. Fortunately, several tools are available for dealing with "
"this, and these will briefly be discussed here."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Automated testing and continuous integration"
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Several hosted services for automated testing are available. These services "
"will typically monitor your source code repository (e.g. at `GitHub "
"<https://github.com>`_ or `Bitbucket <https://bitbucket.org>`_) and run your"
" project's test suite every time a new commit is made."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These services also offer facilities to run your project's test suite on "
"*multiple versions of Python*, giving rapid feedback about whether the code "
"will work, without the developer having to perform such tests themselves."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wikipedia has an extensive `comparison "
"<https://en.wikipedia.org/wiki/Comparison_of_continuous_integration_software>`_"
" of many continuous-integration systems. There are two hosted services which"
" when used in conjunction provide automated testing across Linux, Mac and "
"Windows:"
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Travis CI <https://travis-ci.org>`_ provides both a Linux and a macOS "
"environment. The Linux environment is Ubuntu 12.04 LTS Server Edition 64 bit"
" while the macOS is 10.9.2 at the time of writing."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Appveyor <https://www.appveyor.com/>`_ provides a Windows environment "
"(Windows Server 2012)."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Both `Travis CI`_ and Appveyor_ require a `YAML "
"<https://yaml.org>`_-formatted file as specification for the instructions "
"for testing. If any tests fail, the output log for that specific "
"configuration can be inspected."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:84
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For Python projects that are intended to be deployed on both Python 2 and 3 "
"with a single-source strategy, there are a number of options."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Tools for single-source Python packages"
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:90
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`six <https://pypi.org/project/six/>`_ is a tool developed by Benjamin "
"Peterson for wrapping over the differences between Python 2 and Python 3. "
"The six_ package has enjoyed widespread use and may be regarded as a "
"reliable way to write a single-source Python module that can be use in both "
"Python 2 and 3. The six_ module can be used from as early as Python 2.5. A "
"tool called `modernize <https://pypi.org/project/modernize>`_, developed by "
"Armin Ronacher, can be used to automatically apply the code modifications "
"provided by six_."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Similar to six_, `python-future <http://python-future.org/overview.html>`_ "
"is a package that provides a compatibility layer between Python 2 and Python"
" 3 source code; however, unlike six_, this package aims to provide "
"interoperability between Python 2 and Python 3 with a language syntax that "
"matches one of the two Python versions: one may use"
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "a Python 2 (by syntax) module in a Python 3 project."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "a Python 3 (by syntax) module in a *Python 2* project."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Because of the bi-directionality, python-future_ offers a pathway to "
"converting a Python 2 package to Python 3 syntax module-by-module. However, "
"in contrast to six_, python-future_ is supported only from Python 2.6. "
"Similar to modernize_ for six_, python-future_ comes with two scripts called"
" ``futurize`` and ``pasteurize`` that can be applied to either a Python 2 "
"module or a Python 3 module respectively."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Use of six_ or python-future_ adds an additional runtime dependency to your "
"package: with python-future_, the ``futurize`` script can be called with the"
" ``--stage1`` option to apply only the changes that Python 2.6+ already "
"provides for forward-compatibility to Python 3. Any remaining compatibility "
"problems would require manual changes."
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What's in which Python?"
msgstr ""

#: ../source/guides/supporting-multiple-python-versions.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Ned Batchelder provides a list of changes in each Python release for `Python"
" 2 <https://nedbatchelder.com/blog/201109/whats_in_which_python.html>`__, "
"`Python 3.0-3.3 "
"<https://nedbatchelder.com/blog/201310/whats_in_which_python_3.html>`__ and "
"`Python 3.4-3.6 "
"<https://nedbatchelder.com/blog/201803/whats_in_which_python_3436.html>`__. "
"These lists may be used to check whether any changes between Python versions"
" may affect your package."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Supporting Windows using Appveyor"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "2015-12-03"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section covers how to use the free `Appveyor`_ continuous integration "
"service to provide Windows support for your project. This includes testing "
"the code on Windows, and building Windows-targeted binaries for projects "
"that use C extensions."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Many projects are developed on Unix by default, and providing Windows "
"support can be a challenge, because setting up a suitable Windows test "
"environment is non-trivial, and may require buying software licenses."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The Appveyor service is a continuous integration service, much like the "
"better-known `Travis`_ service that is commonly used for testing by projects"
" hosted on `GitHub`_. However, unlike Travis, the build workers on Appveyor "
"are Windows hosts and have the necessary compilers installed to build Python"
" extensions."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Windows users typically do not have access to a C compiler, and therefore "
"are reliant on projects that use C extensions distributing binary wheels on "
"PyPI in order for the distribution to be installable via ``python -m pip "
"install <dist>``. By using Appveyor as a build service (even if not using it"
" for testing) it is possible for projects without a dedicated Windows "
"environment to provide Windows-targeted binaries."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Setting up"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to use Appveyor to build Windows wheels for your project, you must "
"have an account on the service. Instructions on setting up an account are "
"given in `the Appveyor documentation <https://www.appveyor.com/docs/>`__. "
"The free tier of account is perfectly adequate for open source projects."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Appveyor provides integration with `GitHub`_ and `Bitbucket`_, so as long as"
" your project is hosted on one of those two services, setting up Appveyor "
"integration is straightforward."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Once you have set up your Appveyor account and added your project, Appveyor "
"will automatically build your project each time a commit occurs. This "
"behaviour will be familiar to users of Travis."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Adding Appveyor support to your project"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to define how Appveyor should build your project, you need to add "
"an :file:`appveyor.yml` file to your project. The full details of what can "
"be included in the file are covered in the Appveyor documentation. This "
"guide will provide the details necessary to set up wheel builds."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Appveyor includes by default all of the compiler toolchains needed to build "
"extensions for Python. For Python 2.7, 3.5+ and 32-bit versions of 3.3 and "
"3.4, the tools work out of the box. But for 64-bit versions of Python 3.3 "
"and 3.4, there is a small amount of additional configuration needed to let "
"distutils know where to find the 64-bit compilers. (From 3.5 onwards, the "
"version of Visual Studio used includes 64-bit compilers with no additional "
"setup)."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "appveyor.yml"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This file can be downloaded from `here "
"<https://raw.githubusercontent.com/pypa/python-packaging-user-"
"guide/master/source/guides/appveyor-sample/appveyor.yml>`__."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:76
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :file:`appveyor.yml` file must be located in the root directory of your "
"project. It is in ``YAML`` format, and consists of a number of sections."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``environment`` section is the key to defining the Python versions for "
"which your wheels will be created. Appveyor comes with Python 2.6, 2.7, 3.3,"
" 3.4 and 3.5 installed, in both 32-bit and 64-bit builds. The example file "
"builds for all of these environments except Python 2.6. Installing for "
"Python 2.6 is more complex, as it does not come with pip included. We don't "
"support 2.6 in this document (as Windows users still using Python 2 are "
"generally able to move to Python 2.7 without too much difficulty)."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``install`` section uses pip to install any additional software that the"
" project may require. The only requirement for building wheels is the "
"``wheel`` project, but projects may wish to customise this code in certain "
"circumstances (for example, to install additional build packages such as "
"``Cython``, or test tools such as ``tox``)."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``build`` section simply switches off builds - there is no build step "
"needed for Python, unlike languages like ``C#``."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The main sections that will need to be tailored to your project are "
"``test_script`` and ``after_test``."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``test_script`` section is where you will run your project's tests. The "
"supplied file runs your test suite using ``setup.py test``. If you are only "
"interested in building wheels, and not in running your tests on Windows, you"
" can replace this section with a dummy command such as ``echo Skipped "
"Tests``. You may wish to use another test tool, such as ``nose`` or "
":file:`py.test`.  Or you may wish to use a test driver like ``tox`` - "
"however if you are using ``tox`` there are some additional configuration "
"changes you will need to consider, which are described below."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``after_test`` runs once your tests have completed, and so is where the "
"wheels should be built. Assuming your project uses the recommended tools "
"(specifically, ``setuptools``) then the ``setup.py bdist_wheel`` command "
"will build your wheels."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that wheels will only be built if your tests succeed. If you expect "
"your tests to fail on Windows, you can skip them as described above."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Support script"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :file:`appveyor.yml` file relies on a single support script, which sets "
"up the environment to use the SDK compiler for 64-bit builds on Python 3.3 "
"and 3.4.  For projects which do not need a compiler, or which don't support "
"3.3 or 3.4 on 64-bit Windows, only the :file:`appveyor.yml` file is needed."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`build.cmd <https://raw.githubusercontent.com/pypa/python-packaging-user-"
"guide/master/source/guides/appveyor-sample/build.cmd>`__ is a Windows batch "
"script that runs a single command in an environment with the appropriate "
"compiler for the selected Python version. All you need to do is to set the "
"single environment variable ``DISTUTILS_USE_SDK`` to a value of ``1`` and "
"the script does the rest. It sets up the SDK needed for 64-bit builds of "
"Python 3.3 or 3.4, so don't set the environment variable for any other "
"builds."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can simply download the batch file and include it in your project "
"unchanged."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Access to the built wheels"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When your build completes, the built wheels will be available from the "
"Appveyor control panel for your project. They can be found by going to the "
"build status page for each build in turn. At the top of the build output "
"there is a series of links, one of which is \"Artifacts\". That page will "
"include a list of links to the wheels for that Python version / "
"architecture. You can download those wheels and upload them to PyPI as part "
"of your release process."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:149
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Testing with tox"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Many projects use the :doc:`Tox <tox:index>` tool to run their tests. It "
"ensures that tests are run in an isolated environment using the exact files "
"that will be distributed by the project."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:155
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to use ``tox`` on Appveyor there are a couple of additional "
"considerations (in actual fact, these issues are not specific to Appveyor, "
"and may well affect other CI systems)."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"By default, ``tox`` only passes a chosen subset of environment variables to "
"the test processes. Because ``distutils`` uses environment variables to "
"control the compiler, this \"test isolation\" feature will cause the tests "
"to use the wrong compiler by default."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:164
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To force ``tox`` to pass the necessary environment variables to the "
"subprocess, you need to set the ``tox`` configuration option ``passenv`` to "
"list the additional environment variables to be passed to the subprocess. "
"For the SDK compilers, you need"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:169
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``DISTUTILS_USE_SDK``"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:170
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``MSSdk``"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``INCLUDE``"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:172
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``LIB``"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``passenv`` option can be set in your :file:`tox.ini`, or if you prefer "
"to avoid adding Windows-specific settings to your general project files, it "
"can be set by setting the ``TOX_TESTENV_PASSENV`` environment variable. The "
"supplied :file:`build.cmd` script does this by default whenever "
"``DISTUTILS_USE_SDK`` is set."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:180
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When used interactively, ``tox`` allows you to run your tests against "
"multiple environments (often, this means multiple Python versions). This "
"feature is not as useful in a CI environment like Travis or Appveyor, where "
"all tests are run in isolated environments for each configuration. As a "
"result, projects often supply an argument ``-e ENVNAME`` to ``tox`` to "
"specify which environment to use (there are default environments for most "
"versions of Python)."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:187
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, this does *not* work well with a Windows CI system like Appveyor, "
"where there are (for example) two installations of Python 3.4 (32-bit and "
"64-bit) available, but only one ``py34`` environment in ``tox``."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:191
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to run tests using ``tox``, therefore, projects should probably use"
" the default ``py`` environment in ``tox``, which uses the Python "
"interpreter that was used to run ``tox``. This will ensure that when "
"Appveyor runs the tests, they will be run with the configured interpreter."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to support running under the ``py`` environment, it is possible "
"that projects with complex ``tox`` configurations might need to modify their"
" :file:`tox.ini` file. Doing so is, however, outside the scope of this "
"document."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:202
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Automatically uploading wheels"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is possible to request Appveyor to automatically upload wheels. There is "
"a ``deployment`` step available in :file:`appveyor.yml` that can be used to "
"(for example) copy the built artifacts to a FTP site, or an Amazon S3 "
"instance. Documentation on how to do this is included in the Appveyor "
"guides."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:209
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Alternatively, it would be possible to add a ``twine upload`` step to the "
"build.  The supplied :file:`appveyor.yml` does not do this, as it is not "
"clear that uploading new wheels after every commit is desirable (although "
"some projects may wish to do this)."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:215
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "External dependencies"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:217
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The supplied scripts will successfully build any distribution that does not "
"rely on 3rd party external libraries for the build."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is possible to add steps to the :file:`appveyor.yml` configuration "
"(typically in the \"install\" section) to download and/or build external "
"libraries needed by the distribution. And if needed, it is possible to add "
"extra configuration for the build to supply the location of these libraries "
"to the compiler. However, this level of configuration is beyond the scope of"
" this document."
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Support scripts"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:231
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For reference, the SDK setup support script is listed here:"
msgstr ""

#: ../source/guides/supporting-windows-using-appveyor.rst:233
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``appveyor-sample/build.cmd``"
msgstr ""

#: ../source/guides/tool-recommendations.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Tool recommendations"
msgstr ""

#: ../source/guides/tool-recommendations.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The Python packaging landscape consists of many different tools. For many "
"tasks, the :term:`Python Packaging Authority <Python Packaging Authority "
"(PyPA)>` (PyPA, the working group which encompasses many packaging tools and"
" maintains this guide) purposefully does not make a blanket recommendation; "
"for example, the reason there are many build backends is that the landscape "
"was opened up in order to enable the development of new backends serving "
"certain users' needs better than the previously unique backend, setuptools. "
"This guide does point to some tools that are widely recognized, and also "
"makes some recommendations of tools that you should *not* use because they "
"are deprecated or insecure."
msgstr ""

#: ../source/guides/tool-recommendations.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Virtual environments"
msgstr ""

#: ../source/guides/tool-recommendations.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The standard tools to create and use virtual environments manually are "
":ref:`virtualenv` (PyPA project) and :doc:`venv <python:library/venv>` (part"
" of the Python standard library, though missing some features of "
"virtualenv)."
msgstr ""

#: ../source/guides/tool-recommendations.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing packages"
msgstr ""

#: ../source/guides/tool-recommendations.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`Pip` is the standard tool to install packages from :term:`PyPI <Python"
" Package Index (PyPI)>`. You may want to read pip's recommendations for "
":doc:`secure installs <pip:topics/secure-installs>`. Pip is available by "
"default in most Python installations through the standard library package "
":doc:`ensurepip <python:library/ensurepip>`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Alternatively, consider :ref:`pipx` for the specific use case of installing "
"Python applications that are distributed through PyPI and run from the "
"command line. Pipx is a wrapper around pip and venv that installs each "
"application into a dedicated virtual environment. This avoids conflicts "
"between the dependencies of different applications, and also with system-"
"wide applications making use of the same Python interpreter (especially on "
"Linux)."
msgstr ""

#: ../source/guides/tool-recommendations.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For scientific software specifically, consider :ref:`Conda` or :ref:`Spack`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Write a \"pip vs. Conda\" comparison, here or in a new discussion."
msgstr ""

#: ../source/guides/tool-recommendations.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Do **not** use ``easy_install`` (part of :ref:`setuptools`), which is "
"deprecated in favor of pip (see :ref:`pip vs easy_install` for details). "
"Likewise, do **not** use ``python setup.py install`` or ``python setup.py "
"develop``, which are also deprecated (see :ref:`setup-py-deprecated` for "
"background and :ref:`modernize-setup-py-project` for migration advice)."
msgstr ""

#: ../source/guides/tool-recommendations.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Lock files"
msgstr ""

#: ../source/guides/tool-recommendations.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`pip-tools` and :ref:`Pipenv` are two recognized tools to create lock "
"files, which contain the exact versions of all packages installed into an "
"environment, for reproducibility purposes."
msgstr ""

#: ../source/guides/tool-recommendations.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Build backends"
msgstr ""

#: ../source/guides/tool-recommendations.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Please, remember: this document does not seek to steer the reader towards a "
"particular tool, only to enumerate common tools. Different use cases often "
"need specialized workflows."
msgstr ""

#: ../source/guides/tool-recommendations.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Popular :term:`build backends <build backend>` for pure-Python packages "
"include, in alphabetical order:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Flit-core <flit:pyproject_toml>` -- developed with but separate from "
":ref:`Flit`. A minimal and opinionated build backend. It does not support "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Hatchling_ -- developed with but separate from :ref:`Hatch`. Supports "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"PDM-backend_ -- developed with but separate from :ref:`PDM`. Supports "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Poetry-core_ -- developed with but separate from :ref:`Poetry`. Supports "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:84
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Unlike other backends on this list, Poetry-core does not support the "
"standard :ref:`[project] table <writing-pyproject-toml>` (it uses a "
"different format, in the ``[tool.poetry]`` table)."
msgstr ""

#: ../source/guides/tool-recommendations.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`setuptools`, which used to be the only build backend. Supports "
"plugins."
msgstr ""

#: ../source/guides/tool-recommendations.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you use setuptools, please be aware that some features that predate "
"standardisation efforts are now deprecated and only *temporarily kept* for "
"compatibility."
msgstr ""

#: ../source/guides/tool-recommendations.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In particular, do **not** use direct ``python setup.py`` invocations. On the"
" other hand, configuring setuptools with a :file:`setup.py` file is still "
"fully supported, although it is recommended to use the modern "
":ref:`[project] table in pyproject.toml <writing-pyproject-toml>` (or "
":file:`setup.cfg`) whenever possible and keep :file:`setup.py` only if "
"programmatic configuration is needed. See :ref:`setup-py-deprecated`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Other examples of deprecated features you should **not** use include the "
"``setup_requires`` argument to ``setup()`` (use the :ref:`[build-system] "
"table <pyproject-guide-build-system-table>` in :file:`pyproject.toml` "
"instead), and the ``easy_install`` command (cf. :ref:`pip vs easy_install`)."
msgstr ""

#: ../source/guides/tool-recommendations.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Do **not** use :ref:`distutils`, which is deprecated, and has been removed "
"from the standard library in Python 3.12, although it still remains "
"available from setuptools."
msgstr ""

#: ../source/guides/tool-recommendations.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For packages with :term:`extension modules <extension module>`, it is best "
"to use a build system with dedicated support for the language the extension "
"is written in, for example:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`setuptools` -- natively supports C and C++ (with third-party plugins "
"for Go and Rust),"
msgstr ""

#: ../source/guides/tool-recommendations.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`meson-python` -- C, C++, Fortran, Rust, and other languages supported "
"by Meson,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`scikit-build-core` -- C, C++, Fortran, and other languages supported "
"by CMake,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`maturin` -- Rust, via Cargo."
msgstr ""

#: ../source/guides/tool-recommendations.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Building distributions"
msgstr ""

#: ../source/guides/tool-recommendations.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The standard tool to build :term:`source distributions <source distribution "
"(or \"sdist\")>` and :term:`wheels <wheel>` for uploading to PyPI is "
":ref:`build`.  It will invoke whichever build backend you :ref:`declared "
"<pyproject-guide-build-system-table>` in :file:`pyproject.toml`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Do **not** use ``python setup.py sdist`` and ``python setup.py bdist_wheel``"
" for this task. All direct invocations of :file:`setup.py` are "
":ref:`deprecated <setup-py-deprecated>`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you have :term:`extension modules <extension module>` and want to "
"distribute wheels for multiple platforms, use :ref:`cibuildwheel` as part of"
" your CI setup to build distributable wheels."
msgstr ""

#: ../source/guides/tool-recommendations.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Uploading to PyPI"
msgstr ""

#: ../source/guides/tool-recommendations.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For projects hosted on or published via supported CI/CD platforms, it is "
"recommended to use the :ref:`Trusted Publishing <trusted-publishing>`, which"
" allows the package to be securely uploaded to PyPI from a CI/CD workflow "
"without a manually configured API token."
msgstr ""

#: ../source/guides/tool-recommendations.rst:147
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As of November 2024, PyPI supports the following platforms as Trusted "
"Publishing providers:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "GitHub Actions (on ``https://github.com``)"
msgstr ""

#: ../source/guides/tool-recommendations.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "GitLab CI/CD (on ``https://gitlab.com``)"
msgstr ""

#: ../source/guides/tool-recommendations.rst:152
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "ActiveState"
msgstr ""

#: ../source/guides/tool-recommendations.rst:153
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Google Cloud"
msgstr ""

#: ../source/guides/tool-recommendations.rst:155
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The other available method is to upload the package manually using "
":ref:`twine`."
msgstr ""

#: ../source/guides/tool-recommendations.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Never** use ``python setup.py upload`` for this task. In addition to being"
" :ref:`deprecated <setup-py-deprecated>`, it is insecure."
msgstr ""

#: ../source/guides/tool-recommendations.rst:164
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Workflow tools"
msgstr ""

#: ../source/guides/tool-recommendations.rst:166
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These tools are environment managers that automatically manage virtual "
"environments for a project. They also act as \"task runners\", allowing you "
"to define and invoke tasks such as running tests, compiling documentation, "
"regenerating some files, etc. Some of them provide shortcuts for building "
"distributions and uploading to PyPI, and some support lock files for "
"applications. They often call the tools mentioned above under the hood. In "
"alphabetical order:"
msgstr ""

#: ../source/guides/tool-recommendations.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`Flit`,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:175
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`Hatch`,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:176
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`nox <nox:index>`,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`PDM`,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:178
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`Pipenv`,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:179
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`Poetry`,"
msgstr ""

#: ../source/guides/tool-recommendations.rst:180
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`tox <tox:index>`."
msgstr ""

#: ../source/guides/using-manifest-in.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Including files in source distributions with ``MANIFEST.in``"
msgstr ""

#: ../source/guides/using-manifest-in.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The information on this page has moved to "
":doc:`setuptools:userguide/miscellaneous` in the setuptools documentation."
msgstr ""

#: ../source/guides/using-testpypi.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``TestPyPI`` is a separate instance of the :term:`Python Package Index "
"(PyPI)` that allows you to try out the distribution tools and process "
"without worrying about affecting the real index. TestPyPI is hosted at "
"`test.pypi.org <https://test.pypi.org>`_"
msgstr ""

#: ../source/guides/using-testpypi.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Registering your account"
msgstr ""

#: ../source/guides/using-testpypi.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Because TestPyPI has a separate database from the live PyPI, you'll need a "
"separate user account specifically for TestPyPI. Go to "
"https://test.pypi.org/account/register/ to register your account."
msgstr ""

#: ../source/guides/using-testpypi.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The database for TestPyPI may be periodically pruned, so it is not unusual "
"for user accounts to be deleted."
msgstr ""

#: ../source/guides/using-testpypi.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using TestPyPI with Twine"
msgstr ""

#: ../source/guides/using-testpypi.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can upload your distributions to TestPyPI using :ref:`twine` by "
"specifying the ``--repository`` flag:"
msgstr ""

#: ../source/guides/using-testpypi.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can see if your package has successfully uploaded by navigating to the "
"URL ``https://test.pypi.org/project/<sampleproject>`` where "
"``sampleproject`` is the name of your project that you uploaded. It may take"
" a minute or two for your project to appear on the site."
msgstr ""

#: ../source/guides/using-testpypi.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using TestPyPI with pip"
msgstr ""

#: ../source/guides/using-testpypi.rst:41
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can tell :ref:`pip` to download packages from TestPyPI instead of PyPI "
"by specifying the ``--index-url`` flag:"
msgstr ""

#: ../source/guides/using-testpypi.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you want to allow pip to also download packages from PyPI, you can "
"specify ``--extra-index-url`` to point to PyPI. This is useful when the "
"package you're testing has dependencies:"
msgstr ""

#: ../source/guides/using-testpypi.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Setting up TestPyPI in :file:`.pypirc`"
msgstr ""

#: ../source/guides/using-testpypi.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you want to avoid being prompted for your username and password every "
"time, you can configure TestPyPI in your :file:`$HOME/.pypirc`:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Writing your ``pyproject.toml``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``pyproject.toml`` is a configuration file used by packaging tools, as well "
"as other tools such as linters, type checkers, etc. There are three possible"
" TOML tables in this file."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:11
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[build-system]`` table is **strongly recommended**. It allows you to "
"declare which :term:`build backend` you use and which other dependencies are"
" needed to build your project."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[project]`` table is the format that most build backends use to "
"specify your project's basic metadata, such as the dependencies, your name, "
"etc."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[tool]`` table has tool-specific subtables, e.g., ``[tool.hatch]``, "
"``[tool.black]``, ``[tool.mypy]``. We only touch upon this table here "
"because its contents are defined by each tool. Consult the particular tool's"
" documentation to know what it can contain."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[build-system]`` table should always be present, regardless of which "
"build backend you use (``[build-system]`` *defines* the build tool you use)."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On the other hand, the ``[project]`` table is understood by *most* build "
"backends, but some build backends use a different format."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A notable exception is Poetry_, which before version 2.0 (released January "
"5, 2025) did not use the ``[project]`` table, it used the ``[tool.poetry]`` "
"table instead. With version 2.0, it supports both. Also, the setuptools_ "
"build backend supports both the ``[project]`` table, and the older format in"
" ``setup.cfg`` or ``setup.py``."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For new projects, use the ``[project]`` table, and keep ``setup.py`` only if"
" some programmatic configuration is needed (such as building C extensions), "
"but the ``setup.cfg`` and ``setup.py`` formats are still valid. See "
":ref:`setup-py-deprecated`."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Declaring the build backend"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[build-system]`` table contains a ``build-backend`` key, which "
"specifies the build backend to be used. It also contains a ``requires`` key,"
" which is a list of dependencies needed to build the project -- this is "
"typically just the build backend package, but it may also contain additional"
" dependencies. You can also constrain the versions, e.g., ``requires = "
"[\"setuptools >= 61.0\"]``."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Usually, you'll just copy what your build backend's documentation suggests "
"(after :ref:`choosing your build backend <choosing-build-backend>`). Here "
"are the values for some common build backends:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Static vs. dynamic metadata"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The rest of this guide is devoted to the ``[project]`` table."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:98
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Most of the time, you will directly write the value of a ``[project]`` "
"field. For example: ``requires-python = \">= 3.8\"``, or ``version = "
"\"1.0\"``."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, in some cases, it is useful to let your build backend compute the "
"metadata for you. For example: many build backends can read the version from"
" a ``__version__`` attribute in your code, a Git tag, or similar. In such "
"cases, you should mark the field as dynamic using, e.g.,"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When a field is dynamic, it is the build backend's responsibility to fill "
"it.  Consult your build backend's documentation to learn how it does it."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Basic information"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:124
#: ../source/specifications/pyproject-toml.rst:120
#: ../source/specifications/pyproject-toml.rst:143
#: ../source/specifications/pyproject-toml.rst:153
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``name``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Put the name of your project on PyPI. This field is required and is the only"
" field that cannot be marked as dynamic."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The project name must consist of ASCII letters, digits, underscores "
"\"``_``\", hyphens \"``-``\" and periods \"``.``\". It must not start or end"
" with an underscore, hyphen or period."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Comparison of project names is case insensitive and treats arbitrarily long "
"runs of underscores, hyphens, and/or periods as equal.  For example, if you "
"register a project named ``cool-stuff``, users will be able to download it "
"or declare a dependency on it using any of the following spellings: ``Cool-"
"Stuff``, ``cool.stuff``, ``COOL_STUFF``, ``CoOl__-.-__sTuFF``."
msgstr ""

#. This string is a literal. It mustn't be translated.
#: ../source/guides/writing-pyproject-toml.rst:146
#: ../source/specifications/pyproject-toml.rst:125
#: ../source/specifications/pyproject-toml.rst:149
#: ../source/specifications/pyproject-toml.rst:165
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``version``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Put the version of your project."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:155
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some more complicated version specifiers like ``2020.0.0a1`` (for an alpha "
"release) are possible; see the :ref:`specification <version-specifiers>` for"
" full details."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This field is required, although it is often marked as dynamic using"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:166
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This allows use cases such as filling the version from a ``__version__`` "
"attribute or a Git tag. Consult the :ref:`single-source-version` discussion "
"for more details."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:172
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dependencies and requirements"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:175
#: ../source/specifications/pyproject-toml.rst:420
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``dependencies``/``optional-dependencies``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "If your project has dependencies, list them like this:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:189
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See :ref:`Dependency specifiers <dependency-specifiers>` for the full syntax"
" you can use to constrain versions."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You may want to make some of your dependencies optional, if they are only "
"needed for a specific feature of your package. In that case, put them in "
"``optional-dependencies``."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:205
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each of the keys defines a \"packaging extra\". In the example above, one "
"could use, e.g., ``pip install your-project-name[gui]`` to install your "
"project with GUI support, adding the PyQt5 dependency."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:214
#: ../source/specifications/pyproject-toml.rst:146
#: ../source/specifications/pyproject-toml.rst:228
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``requires-python``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This lets you declare the minimum version of Python that you support "
"[#requires-python-upper-bounds]_."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:228
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating executable scripts"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To install a command as part of your package, declare it in the "
"``[project.scripts]`` table."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:238
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In this example, after installing your project, a ``spam-cli`` command will "
"be available. Executing this command will do the equivalent of ``import sys;"
" from spam import main_cli; sys.exit(main_cli())``."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:242
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On Windows, scripts packaged this way need a terminal, so if you launch them"
" from within a graphical application, they will make a terminal pop up. To "
"prevent this from happening, use the ``[project.gui-scripts]`` table instead"
" of ``[project.scripts]``."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:252
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In that case, launching your script from the command line will give back "
"control immediately, leaving the script to run in the background."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:255
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The difference between ``[project.scripts]`` and ``[project.gui-scripts]`` "
"is only relevant on Windows."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:261
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "About your project"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:264
#: ../source/specifications/pyproject-toml.rst:310
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``authors``/``maintainers``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:266
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Both of these fields contain lists of people identified by a name and/or an "
"email address."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:286
#: ../source/specifications/pyproject-toml.rst:135
#: ../source/specifications/pyproject-toml.rst:178
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``description``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:288
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This should be a one-line description of your project, to show as the "
"\"headline\" of your project page on PyPI (`example <pypi-pip_>`_), and "
"other places such as lists of search results (`example <pypi-search-"
"pip_>`_)."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:299
#: ../source/specifications/pyproject-toml.rst:145
#: ../source/specifications/pyproject-toml.rst:189
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``readme``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:301
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is a longer description of your project, to display on your project "
"page on PyPI. Typically, your project will have a ``README.md`` or "
"``README.rst`` file and you just put its file name here."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:310
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The README's format is auto-detected from the extension:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:312
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``README.md`` → `GitHub-flavored Markdown <gfm_>`_,"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:313
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``README.rst`` → `reStructuredText <rest_>`_ (without Sphinx extensions)."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:315
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "You can also specify the format explicitly, like this:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:326
#: ../source/specifications/pyproject-toml.rst:140
#: ../source/specifications/pyproject-toml.rst:238
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``license``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:328
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is a valid :term:`SPDX license expression <License Expression>` "
"consisting of one or more :term:`license identifiers <License Identifier>`. "
"The full license list is available at the `SPDX license list page "
"<spdxlicenselist_>`_. The supported list version is 3.17 or any later "
"compatible one."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:341
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As a general rule, it is a good idea to use a standard, well-known license, "
"both to avoid confusion and because some organizations avoid software whose "
"license is unapproved."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:345
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your project is licensed with a license that doesn't have an existing "
"SPDX identifier, you can create a custom one in format "
"``LicenseRef-[idstring]``. The custom identifiers must follow the SPDX "
"specification, `clause 10.1 <spdxcustomids_>`_ of the version 2.2 or any "
"later compatible one."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:357
#: ../source/specifications/pyproject-toml.rst:141
#: ../source/specifications/pyproject-toml.rst:251
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``license-files``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:359
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is a list of license files and files containing other legal information"
" you want to distribute with your package."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:367
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The glob patterns must follow the specification:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:369
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Alphanumeric characters, underscores (``_``), hyphens (``-``) and dots "
"(``.``) will be matched verbatim."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:371
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Special characters: ``*``, ``?``, ``**`` and character ranges: [] are "
"supported."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:372
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Path delimiters must be the forward slash character (``/``)."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:373
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Patterns are relative to the directory containing :file:`pyproject.toml`, "
"and thus may not start with a slash character."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:375
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Parent directory indicators (``..``) must not be used."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:376
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Each glob must match at least one file."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:378
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Literal paths are valid globs. Any characters or character sequences not "
"covered by this specification are invalid."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:384
#: ../source/specifications/pyproject-toml.rst:139
#: ../source/specifications/pyproject-toml.rst:352
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``keywords``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:386
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This will help PyPI's search box to suggest your project when people search "
"for these keywords."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:398
#: ../source/specifications/pyproject-toml.rst:133
#: ../source/specifications/pyproject-toml.rst:362
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``classifiers``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:400
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A list of PyPI classifiers that apply to your project. Check the `full list "
"of possibilities <classifier-list_>`_."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:424
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Although the list of classifiers is often used to declare what Python "
"versions a project supports, this information is only used for searching and"
" browsing projects on PyPI, not for installing projects. To actually "
"restrict what Python versions a project can be installed on, use the "
":ref:`requires-python` argument."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:429
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To prevent a package from being uploaded to PyPI, use the special ``Private "
":: Do Not Upload`` classifier. PyPI will always reject packages with "
"classifiers beginning with ``Private ::``."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:436
#: ../source/specifications/pyproject-toml.rst:148
#: ../source/specifications/pyproject-toml.rst:378
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``urls``"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:438
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A list of URLs associated with your project, displayed on the left sidebar "
"of your PyPI project page."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:443
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See :ref:`well-known-labels` for a listing of labels that PyPI and other "
"packaging tools are specifically aware of, and `PyPI's project metadata docs"
" <https://docs.pypi.org/project_metadata/#project-urls>`_ for PyPI-specific "
"URL processing."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:457
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that if the label contains spaces, it needs to be quoted, e.g., "
"``Website = \"https://example.com\"`` but ``\"Official Website\" = "
"\"https://example.com\"``."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:461
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Users are advised to use :ref:`well-known-labels` for their project URLs "
"where appropriate, since consumers of metadata (like package indices) can "
"specialize their presentation."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:465
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example in the following metadata, neither ``MyHomepage`` nor "
"``\"Download Link\"`` is a well-known label, so they will be rendered "
"verbatim:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:475
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Whereas in this metadata ``HomePage`` and ``DOWNLOAD`` both have well-known "
"equivalents (``homepage`` and ``download``), and can be presented with those"
" semantics in mind (the project's home page and its external download "
"location, respectively)."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:487
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Advanced plugins"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:489
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some packages can be extended through plugins. Examples include Pytest_ and "
"Pygments_. To create such a plugin, you need to declare it in a subtable of "
"``[project.entry-points]`` like this:"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:498
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See the :ref:`Plugin guide <plugin-entry-points>` for more information."
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:503
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A full example"
msgstr ""

#: ../source/guides/writing-pyproject-toml.rst:566
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Think twice before applying an upper bound like ``requires-python = \"<= "
"3.10\"`` here. `This blog post <requires-python-blog-post_>`_ contains some "
"information regarding possible problems."
msgstr ""

#: ../source/index.rst:-1
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The Python Packaging User Guide (PyPUG) is a collection of tutorials and "
"guides for packaging Python software."
msgstr ""

#: ../source/index.rst:-1
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "python, packaging, guide, tutorial"
msgstr ""

#: ../source/index.rst:3 ../source/key_projects.rst:247
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python Packaging User Guide"
msgstr ""

#: ../source/index.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Welcome to the *Python Packaging User Guide*, a collection of tutorials and "
"references to help you distribute and install Python packages with modern "
"tools."
msgstr ""

#: ../source/index.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This guide is maintained on `GitHub`_ by the :doc:`Python Packaging "
"Authority <pypa:index>`. We happily accept :doc:`contributions and feedback "
"<contribute>`. 😊"
msgstr ""

#: ../source/index.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Overview and Flow"
msgstr ""

#: ../source/index.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Building your understanding of Python packaging is a journey. Patience and "
"continuous improvement are key to success. The overview and flow sections "
"provide a starting point for understanding the Python packaging ecosystem."
msgstr ""

#: ../source/index.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :doc:`overview` explains Python packaging and its use when preparing and"
" distributing projects. This section helps you build understanding about "
"selecting the tools and processes that are most suitable for your use case. "
"It includes what packaging is, the problems that it solves, and key "
"considerations."
msgstr ""

#: ../source/index.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To get an overview of the workflow used to publish your code, see "
":doc:`packaging flow <flow>`."
msgstr ""

#: ../source/index.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tutorials walk through the steps needed to complete a project for the first "
"time. Tutorials aim to help you succeed and provide a starting point for "
"future exploration. The :doc:`tutorials/index` section includes:"
msgstr ""

#: ../source/index.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :doc:`tutorial on installing packages <tutorials/installing-packages>`"
msgstr ""

#: ../source/index.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :doc:`tutorial on managing application dependencies <tutorials/managing-"
"dependencies>` in a version controlled project"
msgstr ""

#: ../source/index.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :doc:`tutorial on packaging and distributing <tutorials/packaging-"
"projects>` your project"
msgstr ""

#: ../source/index.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Guides provide steps to perform a specific task. Guides are more focused on "
"users who are already familiar with Python packaging and are looking for "
"specific information."
msgstr ""

#: ../source/index.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :doc:`guides/index` section provides \"how to\" instructions in three "
"major areas: package installation; building and distributing packages; "
"miscellaneous topics."
msgstr ""

#: ../source/index.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Explanations and Discussions"
msgstr ""

#: ../source/index.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :doc:`discussions/index` section for in-depth explanations and "
"discussion about topics, such as:"
msgstr ""

#: ../source/index.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`discussions/deploying-python-applications`"
msgstr ""

#: ../source/index.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`discussions/pip-vs-easy-install`"
msgstr ""

#: ../source/index.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Reference"
msgstr ""

#: ../source/index.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :doc:`specifications/index` section for packaging interoperability "
"specifications."
msgstr ""

#: ../source/index.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The list of :doc:`other projects <key_projects>` maintained by members of "
"the Python Packaging Authority."
msgstr ""

#: ../source/index.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The :doc:`glossary` for definitions of terms used in Python packaging."
msgstr ""

#: ../source/key_projects.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project Summaries"
msgstr ""

#: ../source/key_projects.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Summaries and links for the most relevant projects in the space of Python "
"installation and packaging."
msgstr ""

#: ../source/key_projects.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "PyPA Projects"
msgstr ""

#: ../source/key_projects.rst:19
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "bandersnatch"
msgstr ""

#: ../source/key_projects.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://bandersnatch.readthedocs.io>`__ | `Issues "
"<https://github.com/pypa/bandersnatch/issues>`__ | `GitHub "
"<https://github.com/pypa/bandersnatch>`__ | `PyPI "
"<https://pypi.org/project/bandersnatch>`__"
msgstr ""

#: ../source/key_projects.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``bandersnatch`` is a PyPI mirroring client designed to efficiently create a"
" complete mirror of the contents of PyPI. Organizations thus save bandwidth "
"and latency on package downloads (especially in the context of automated "
"tests) and to prevent heavily loading PyPI's Content Delivery Network (CDN)."
" Files can be served from a local directory or `AWS S3`_."
msgstr ""

#: ../source/key_projects.rst:37
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "build"
msgstr ""

#: ../source/key_projects.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":any:`Docs <build:index>` | `Issues "
"<https://github.com/pypa/build/issues>`__ | `GitHub "
"<https://github.com/pypa/build>`__ | `PyPI "
"<https://pypi.org/project/build>`__"
msgstr ""

#: ../source/key_projects.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``build`` is a :pep:`517` compatible Python package builder. It provides a "
"CLI to build packages, as well as a Python API."
msgstr ""

#: ../source/key_projects.rst:51
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cibuildwheel"
msgstr ""

#: ../source/key_projects.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://cibuildwheel.readthedocs.io/>`__ | `Issues "
"<https://github.com/pypa/cibuildwheel/issues>`__ | `GitHub "
"<https://github.com/pypa/cibuildwheel>`__ | `PyPI "
"<https://pypi.org/project/cibuildwheel>`__ | `Discussions "
"<https://github.com/pypa/cibuildwheel/discussions>`__ | `Discord "
"#cibuildwheel <https://discord.com/invite/pypa>`__"
msgstr ""

#: ../source/key_projects.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``cibuildwheel`` is a Python package that builds :term:`wheels <Wheel>` for "
"all common platforms and Python versions on most CI systems. Also see "
":ref:`multibuild`."
msgstr ""

#: ../source/key_projects.rst:66
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "distlib"
msgstr ""

#: ../source/key_projects.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Docs <distlib:index>` | `Issues "
"<https://github.com/pypa/distlib/issues>`__ | `GitHub "
"<https://github.com/pypa/distlib>`__ | `PyPI "
"<https://pypi.org/project/distlib>`__"
msgstr ""

#: ../source/key_projects.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``distlib`` is a library which implements low-level functions that relate to"
" packaging and distribution of Python software.  ``distlib`` implements "
"several relevant PEPs (Python Enhancement Proposal standards) and is useful "
"for developers of third-party packaging tools to make and upload binary and "
"source :term:`distributions <Distribution Package>`, achieve "
"interoperability, resolve dependencies, manage package resources, and do "
"other similar functions."
msgstr ""

#: ../source/key_projects.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Unlike the stricter :ref:`packaging` project (below), which specifically "
"implements modern Python packaging interoperability standards, ``distlib`` "
"also attempts to provide reasonable fallback behaviours when asked to handle"
" legacy packages and metadata that predate the modern interoperability "
"standards and fall into the subset of packages that are incompatible with "
"those standards."
msgstr ""

#: ../source/key_projects.rst:93
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "distutils"
msgstr ""

#: ../source/key_projects.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The original Python packaging system, added to the standard library in "
"Python 2.0 and removed in 3.12."
msgstr ""

#: ../source/key_projects.rst:98
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Due to the challenges of maintaining a packaging system where feature "
"updates are tightly coupled to language runtime updates, direct usage of "
":ref:`distutils` has been actively discouraged, with :ref:`Setuptools` being"
" the preferred replacement. :ref:`Setuptools` not only provides features "
"that plain :ref:`distutils` doesn't offer (such as dependency declarations "
"and entry point declarations), it also provides a consistent build interface"
" and feature set across all supported Python versions."
msgstr ""

#: ../source/key_projects.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Consequently, :ref:`distutils` was deprecated in Python 3.10 by :pep:`632` "
"and has been :doc:`removed <python:whatsnew/3.12>` from the standard library"
" in Python 3.12.  Setuptools bundles the standalone copy of distutils, and "
"it is injected even on Python < 3.12 if you import setuptools first or use "
"pip."
msgstr ""

#: ../source/key_projects.rst:116
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "flit"
msgstr ""

#: ../source/key_projects.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://flit.readthedocs.io/en/latest/>`__ | `Issues "
"<https://github.com/pypa/flit/issues>`__ | `PyPI "
"<https://pypi.org/project/flit>`__"
msgstr ""

#: ../source/key_projects.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Flit provides a simple way to create and upload pure Python packages and "
"modules to PyPI.  It focuses on `making the easy things easy <flit-"
"rationale_>`_ for packaging.  Flit can generate a configuration file to "
"quickly set up a simple project, build source distributions and wheels, and "
"upload them to PyPI."
msgstr ""

#: ../source/key_projects.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Flit uses ``pyproject.toml`` to configure a project. Flit does not rely on "
"tools such as :ref:`setuptools` to build distributions, or :ref:`twine` to "
"upload them to PyPI. Flit requires Python 3, but you can use it to "
"distribute modules for Python 2, so long as they can be imported on Python "
"3."
msgstr ""

#: ../source/key_projects.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The flit package is lifted by `Matthias Bussonnier "
"<https://github.com/Carreau>`__ since October 2023 on the `tidelift platform"
" <https://tidelift.com/lifter/search/pypi/flit>`__, and funds sent to the "
"PSF and earmarked for PyPA usage."
msgstr ""

#: ../source/key_projects.rst:142
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "hatch"
msgstr ""

#: ../source/key_projects.rst:144
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://hatch.pypa.io/latest/>`__ | `GitHub "
"<https://github.com/pypa/hatch>`__ | `PyPI "
"<https://pypi.org/project/hatch>`__"
msgstr ""

#: ../source/key_projects.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Hatch is a unified command-line tool meant to conveniently manage "
"dependencies and environment isolation for Python developers. Python package"
" developers use Hatch and its :term:`build backend <Build Backend>` "
"Hatchling to configure, version, specify dependencies for, and publish "
"packages to PyPI. Its plugin system allows for easily extending "
"functionality."
msgstr ""

#: ../source/key_projects.rst:157
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "packaging"
msgstr ""

#: ../source/key_projects.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Docs <packaging:index>` | `Issues "
"<https://github.com/pypa/packaging/issues>`__ | `GitHub "
"<https://github.com/pypa/packaging>`__ | `PyPI "
"<https://pypi.org/project/packaging>`__"
msgstr ""

#: ../source/key_projects.rst:164
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Core utilities for Python packaging used by :ref:`pip` and "
":ref:`setuptools`."
msgstr ""

#: ../source/key_projects.rst:166
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The core utilities in the packaging library handle version handling, "
"specifiers, markers, requirements, tags, and similar attributes and tasks "
"for Python packages. Most Python users rely on this library without needing "
"to explicitly call it; developers of the other Python packaging, "
"distribution, and installation tools listed here often use its functionality"
" to parse, discover, and otherwise handle dependency attributes."
msgstr ""

#: ../source/key_projects.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This project specifically focuses on implementing the modern Python "
"packaging interoperability standards defined at :ref:`packaging-"
"specifications`, and will report errors for sufficiently old legacy packages"
" that are incompatible with those standards. In contrast, the :ref:`distlib`"
" project is a more permissive library that attempts to provide a plausible "
"reading of ambiguous metadata in cases where :ref:`packaging` will instead "
"report on error."
msgstr ""

#: ../source/key_projects.rst:186
#: ../source/specifications/platform-compatibility-tags.rst:142
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pip"
msgstr ""

#: ../source/key_projects.rst:188
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://pip.pypa.io/>`__ | `Issues "
"<https://github.com/pypa/pip/issues>`__ | `GitHub "
"<https://github.com/pypa/pip>`__ | `PyPI <https://pypi.org/project/pip/>`__"
msgstr ""

#: ../source/key_projects.rst:193
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The most popular tool for installing Python packages, and the one included "
"with modern versions of Python."
msgstr ""

#: ../source/key_projects.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It provides the essential core features for finding, downloading, and "
"installing packages from PyPI and other Python package indexes, and can be "
"incorporated into a wide range of development workflows via its command-line"
" interface (CLI)."
msgstr ""

#: ../source/key_projects.rst:204
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pipenv"
msgstr ""

#: ../source/key_projects.rst:206
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Docs <pipenv:index>` | `Source <https://github.com/pypa/pipenv>`__ | "
"`Issues <https://github.com/pypa/pipenv/issues>`__ | `PyPI "
"<https://pypi.org/project/pipenv>`__"
msgstr ""

#: ../source/key_projects.rst:211
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pipenv is a project that aims to bring the best of all packaging worlds to "
"the Python world. It harnesses :ref:`Pipfile`, :ref:`pip`, and "
":ref:`virtualenv` into one single toolchain. It can autoimport "
"``requirements.txt`` and also check for CVEs in `Pipfile`_ using `safety "
"<https://pyup.io/safety>`_."
msgstr ""

#: ../source/key_projects.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pipenv aims to help users manage environments, dependencies, and imported "
"packages on the command line. It also works well on Windows (which other "
"tools often underserve), makes and checks file hashes, to ensure compliance "
"with hash-locked dependency specifiers, and eases uninstallation of packages"
" and dependencies."
msgstr ""

#: ../source/key_projects.rst:225
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pipfile"
msgstr ""

#: ../source/key_projects.rst:227
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Source <https://github.com/pypa/pipfile>`__"
msgstr ""

#: ../source/key_projects.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":file:`Pipfile` and its sister :file:`Pipfile.lock` are a higher-level "
"application-centric alternative to :ref:`pip`'s lower-level "
":file:`requirements.txt` file."
msgstr ""

#: ../source/key_projects.rst:236
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pipx"
msgstr ""

#: ../source/key_projects.rst:238
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://pipx.pypa.io/>`__ | `GitHub <https://github.com/pypa/pipx>`__"
" | `PyPI <https://pypi.org/project/pipx/>`__"
msgstr ""

#: ../source/key_projects.rst:242
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pipx is a tool to install and run Python command-line applications without "
"causing dependency conflicts with other packages installed on the system."
msgstr ""

#: ../source/key_projects.rst:249
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Docs <index>` | `Issues "
"<https://github.com/pypa/packaging.python.org/issues>`__ | `GitHub "
"<https://github.com/pypa/packaging.python.org>`__"
msgstr ""

#: ../source/key_projects.rst:253
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This guide!"
msgstr ""

#: ../source/key_projects.rst:258
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "readme_renderer"
msgstr ""

#: ../source/key_projects.rst:260
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`GitHub and docs <https://github.com/pypa/readme_renderer/>`__ | `PyPI "
"<https://pypi.org/project/readme-renderer/>`__"
msgstr ""

#: ../source/key_projects.rst:263
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``readme_renderer`` is a library that package developers use to render their"
" user documentation (README) files into HTML from markup languages such as "
"Markdown or reStructuredText. Developers call it on its own or via "
":ref:`twine`, as part of their release management process, to check that "
"their package descriptions will properly display on PyPI."
msgstr ""

#: ../source/key_projects.rst:274
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Setuptools"
msgstr ""

#: ../source/key_projects.rst:276
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://setuptools.readthedocs.io/en/latest/>`__ | `Issues "
"<https://github.com/pypa/setuptools/issues>`__ | `GitHub "
"<https://github.com/pypa/setuptools>`__ | `PyPI "
"<https://pypi.org/project/setuptools>`__"
msgstr ""

#: ../source/key_projects.rst:281
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Setuptools (which includes ``easy_install``) is a collection of enhancements"
" to the Python distutils that allow you to more easily build and distribute "
"Python :term:`distributions <Distribution Package>`, especially ones that "
"have dependencies on other packages."
msgstr ""

#: ../source/key_projects.rst:289
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "trove-classifiers"
msgstr ""

#: ../source/key_projects.rst:291
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Issues <https://github.com/pypa/trove-classifiers/issues>`__ | `GitHub "
"<https://github.com/pypa/trove-classifiers>`__ | `PyPI "
"<https://pypi.org/project/trove-classifiers/>`__"
msgstr ""

#: ../source/key_projects.rst:295
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"trove-classifiers is the canonical source for `classifiers on PyPI "
"<https://pypi.org/classifiers/>`_, which project maintainers use to "
":ref:`systematically describe their projects <core-metadata-classifier>` so "
"that users can better find projects that match their needs on the PyPI."
msgstr ""

#: ../source/key_projects.rst:300
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The trove-classifiers package contains a list of valid classifiers and "
"deprecated classifiers (which are paired with the classifiers that replace "
"them).  Use this package to validate classifiers used in packages intended "
"for uploading to PyPI. As this list of classifiers is published as code, you"
" can install and import it, giving you a more convenient workflow compared "
"to referring to the `list published on PyPI "
"<https://pypi.org/classifiers/>`_. The `issue tracker "
"<https://github.com/pypa/trove-classifiers/issues>`_ for the project hosts "
"discussions on proposed classifiers and requests for new classifiers."
msgstr ""

#: ../source/key_projects.rst:314
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "twine"
msgstr ""

#: ../source/key_projects.rst:316
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://twine.readthedocs.io/en/latest/>`__ | `Issues "
"<https://github.com/pypa/twine/issues>`__ | `GitHub "
"<https://github.com/pypa/twine>`__ | `PyPI "
"<https://pypi.org/project/twine>`__"
msgstr ""

#: ../source/key_projects.rst:321
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Twine is the primary tool developers use to upload packages to the Python "
"Package Index or other Python package indexes. It is a command-line program "
"that passes program files and metadata to a web API. Developers use it "
"because it's the official PyPI upload tool, it's fast and secure, it's "
"maintained, and it reliably works."
msgstr ""

#: ../source/key_projects.rst:331 ../source/overview.rst:401
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "virtualenv"
msgstr ""

#: ../source/key_projects.rst:333
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://virtualenv.pypa.io/en/stable/index.html>`__ | `Issues "
"<https://github.com/pypa/virtualenv/issues>`__ | `GitHub "
"<https://github.com/pypa/virtualenv>`__ | `PyPI "
"<https://pypi.org/project/virtualenv/>`__"
msgstr ""

#: ../source/key_projects.rst:338
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"virtualenv is a tool for creating isolated Python :term:`Virtual "
"Environments <Virtual Environment>`, like :ref:`venv`. Unlike :ref:`venv`, "
"virtualenv can create virtual environments for other versions of Python, "
"which it locates using the PATH environment variable. It also provides "
"convenient features for configuring, maintaining, duplicating, and "
"troubleshooting virtual environments. For more information, see the section "
"on :ref:`Creating and using Virtual Environments`."
msgstr ""

#: ../source/key_projects.rst:350
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Warehouse"
msgstr ""

#: ../source/key_projects.rst:352
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://warehouse.pypa.io/>`__ | `Issues "
"<https://github.com/pypa/warehouse/issues>`__ | `GitHub "
"<https://github.com/pypa/warehouse>`__"
msgstr ""

#: ../source/key_projects.rst:356
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The current codebase powering the :term:`Python Package Index (PyPI)`. It is"
" hosted at `pypi.org <https://pypi.org/>`_. The default source for "
":ref:`pip` downloads."
msgstr ""

#: ../source/key_projects.rst:364
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "wheel"
msgstr ""

#: ../source/key_projects.rst:366
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://wheel.readthedocs.io/en/latest/>`__ | `Issues "
"<https://github.com/pypa/wheel/issues>`__ | `GitHub "
"<https://github.com/pypa/wheel>`__ | `PyPI "
"<https://pypi.org/project/wheel>`__"
msgstr ""

#: ../source/key_projects.rst:371
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Primarily, the wheel project offers the ``bdist_wheel`` :ref:`setuptools` "
"extension for creating :term:`wheel distributions <Wheel>`.  Additionally, "
"it offers its own command line utility for creating and installing wheels."
msgstr ""

#: ../source/key_projects.rst:375
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See also `auditwheel <https://github.com/pypa/auditwheel>`__, a tool that "
"package developers use to check and fix Python packages they are making in "
"the binary wheel format. It provides functionality to discover dependencies,"
" check metadata for compliance, and repair the wheel and metadata to "
"properly link and include external shared libraries in a package."
msgstr ""

#: ../source/key_projects.rst:384
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Non-PyPA Projects"
msgstr ""

#: ../source/key_projects.rst:389
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "buildout"
msgstr ""

#: ../source/key_projects.rst:391
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <http://www.buildout.org/en/latest/>`__ | `Issues "
"<https://bugs.launchpad.net/zc.buildout>`__ | `PyPI "
"<https://pypi.org/project/zc.buildout>`__ | `GitHub "
"<https://github.com/buildout/buildout/>`__"
msgstr ""

#: ../source/key_projects.rst:396
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Buildout is a Python-based build system for creating, assembling and "
"deploying applications from multiple parts, some of which may be non-Python-"
"based.  It lets you create a buildout configuration and reproduce the same "
"software later."
msgstr ""

#: ../source/key_projects.rst:403
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "conda"
msgstr ""

#: ../source/key_projects.rst:405
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":doc:`Docs <conda:index>`"
msgstr ""

#: ../source/key_projects.rst:407
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Conda is a package, dependency, and environment management system for any "
"language — Python, R, Ruby, C/C++, Fortran, and more. It is written in "
"Python and widely used in the Python scientific computing community, due to "
"its support for non-Python compiled libraries and extensions. It is used as "
"the basis of the `Anaconda <https://docs.anaconda.com/anaconda/>`__ Python "
"distribution from Anaconda, Inc. It was originally aimed at the scientific "
"community, but can also be used on its own, or with the :doc:`miniconda "
"<conda:miniconda>`, `miniforge <https://github.com/conda-forge/miniforge>`_ "
"or `pixi <https://pixi.sh/>`_ systems. It is available for Windows, Mac and "
"Linux systems."
msgstr ""

#: ../source/key_projects.rst:416
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Conda is a completely separate tool from :ref:`pip`, virtualenv and wheel, "
"but provides many of their combined features, such as package management, "
"virtual environment management and deployment of binary extensions and other"
" binary code."
msgstr ""

#: ../source/key_projects.rst:420
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Conda does not install packages from PyPI -- it can only manage packages "
"built specifically for conda, which can be made available on a \"conda "
"channel\", such as those hosted on `anaconda.org <https://anaconda.org>`__, "
"or a local (e.g. intranet) package server. In addition to the \"default\" "
"channels managed by `Anaconda, Inc. <https://www.anaconda.com/>`__, there "
"are a wide variety of packages from the community supported `conda-forge "
"project <https://conda-forge.org/>`__"
msgstr ""

#: ../source/key_projects.rst:426
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that :ref:`pip` can be installed into, and work side-by-side with conda"
" for managing :term:`distributions <Distribution Package>` from PyPI. It is "
"also possible to build conda packages from Python source packages using "
"tools such as `conda skeleton <https://docs.conda.io/projects/conda-"
"build/en/latest/user-guide/tutorials/build-pkgs-skeleton.html>`__: a tool to"
" automatically make conda packages from Python packages available on PyPI."
msgstr ""

#: ../source/key_projects.rst:435
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "devpi"
msgstr ""

#: ../source/key_projects.rst:437
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <http://doc.devpi.net/latest/>`__ | :gh:`Issues <devpi/devpi/issues>` "
"| `PyPI <https://pypi.org/project/devpi>`__"
msgstr ""

#: ../source/key_projects.rst:441
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"devpi features a powerful PyPI-compatible server and PyPI proxy cache with a"
" complementary command line tool to drive packaging, testing and release "
"activities with Python. devpi also provides a browsable and searchable web "
"interface. devpi supports mirroring PyPI, multiple :term:`package indexes "
"<Package Index>` with inheritance, syncing between these indexes, index "
"replication and fail-over, and package upload."
msgstr ""

#: ../source/key_projects.rst:452
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "dumb-pypi"
msgstr ""

#: ../source/key_projects.rst:454
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`GitHub <https://github.com/chriskuehl/dumb-pypi>`__ | `PyPI "
"<https://pypi.org/project/dumb-pypi>`__"
msgstr ""

#: ../source/key_projects.rst:457
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"dumb-pypi is a simple :term:`package index <Package Index>` static file site"
" generator, which then must be hosted by a static file webserver to become "
"the package index. It supports serving the hash, core-metadata, and yank-"
"status."
msgstr ""

#: ../source/key_projects.rst:464
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "enscons"
msgstr ""

#: ../source/key_projects.rst:466
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":gh:`Source <dholth/enscons>` | :gh:`Issues <dholth/enscons/issues>` | `PyPI"
" <https://pypi.org/project/enscons>`__"
msgstr ""

#: ../source/key_projects.rst:470
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Enscons is a Python packaging tool based on `SCons`_. It builds "
":ref:`pip`-compatible source distributions and wheels without using "
"distutils or setuptools, including distributions with C extensions. Enscons "
"has a different architecture and philosophy than :ref:`distutils`. Rather "
"than adding build features to a Python packaging system, enscons adds Python"
" packaging to a general purpose build system. Enscons helps you to build "
"sdists that can be automatically built by :ref:`pip`, and wheels that are "
"independent of enscons."
msgstr ""

#: ../source/key_projects.rst:485
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Flask-Pypi-Proxy"
msgstr ""

#: ../source/key_projects.rst:487
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://flask-pypi-proxy.readthedocs.io>`__ | :gh:`GitHub "
"<tzulberti/Flask-PyPi-Proxy>` | `PyPI <https://pypi.org/project/Flask-Pypi-"
"Proxy/>`__"
msgstr ""

#: ../source/key_projects.rst:491 ../source/key_projects.rst:685
#: ../source/key_projects.rst:744
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Not maintained, project archived"
msgstr ""

#: ../source/key_projects.rst:493
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Flask-Pypi-Proxy is a :term:`package index <Package Index>` as a cached "
"proxy for PyPI."
msgstr ""

#: ../source/key_projects.rst:499
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Hashdist"
msgstr ""

#: ../source/key_projects.rst:501
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://hashdist.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/hashdist/hashdist/>`__"
msgstr ""

#: ../source/key_projects.rst:504
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Hashdist is a library for building non-root software distributions. Hashdist"
" is trying to be “the Debian of choice for cases where Debian technology "
"doesn’t work”. The best way for Pythonistas to think about Hashdist may be a"
" more powerful hybrid of :ref:`virtualenv` and :ref:`buildout`. It is aimed "
"at solving the problem of installing scientific software, and making package"
" distribution stateless, cached, and branchable. It is used by some "
"researchers but has been lacking in maintenance since 2016."
msgstr ""

#: ../source/key_projects.rst:516
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Maturin"
msgstr ""

#: ../source/key_projects.rst:518
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://www.maturin.rs>`__ | `GitHub "
"<https://github.com/PyO3/maturin>`__"
msgstr ""

#: ../source/key_projects.rst:521
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Maturin is a build backend for Rust extension modules, also written in Rust."
" It supports building wheels for python 3.7+ on Windows, Linux, macOS and "
"FreeBSD, can upload them to PyPI and has basic PyPy and GraalPy support."
msgstr ""

#: ../source/key_projects.rst:529
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "meson-python"
msgstr ""

#: ../source/key_projects.rst:531
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://meson-python.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/mesonbuild/meson-python>`__"
msgstr ""

#: ../source/key_projects.rst:534
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``meson-python`` is a build backend that uses the Meson_ build system. It "
"enables Python package authors to use Meson_ as the build system for their "
"package. It supports a wide variety of languages, including C, and is able "
"to fill the needs of most complex build configurations."
msgstr ""

#: ../source/key_projects.rst:544
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "multibuild"
msgstr ""

#: ../source/key_projects.rst:546
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`GitHub <https://github.com/multi-build/multibuild>`__"
msgstr ""

#: ../source/key_projects.rst:548
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Multibuild is a set of CI scripts for building and testing Python "
":term:`wheels <Wheel>` for Linux, macOS, and (less flexibly) Windows. Also "
"see :ref:`cibuildwheel`."
msgstr ""

#: ../source/key_projects.rst:554
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "nginx_pypi_cache"
msgstr ""

#: ../source/key_projects.rst:556
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":gh:`GitHub <hauntsaninja/nginx_pypi_cache>`"
msgstr ""

#: ../source/key_projects.rst:558
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"nginx_pypi_cache is a :term:`package index <Package Index>` caching proxy "
"using `nginx <https://nginx.org/en/>`_."
msgstr ""

#: ../source/key_projects.rst:564
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pdm"
msgstr ""

#: ../source/key_projects.rst:566
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://pdm.fming.dev/>`__ | `GitHub <https://github.com/pdm-"
"project/pdm/>`__ | `PyPI <https://pypi.org/project/pdm>`__"
msgstr ""

#: ../source/key_projects.rst:570
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"PDM is a modern Python package manager. It uses :term:`pyproject.toml` to "
"store project metadata as defined in :pep:`621`."
msgstr ""

#: ../source/key_projects.rst:578
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://pex.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/pantsbuild/pex/>`__ | `PyPI "
"<https://pypi.org/project/pex>`__"
msgstr ""

#: ../source/key_projects.rst:582
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pex is a tool for generating :file:`.pex` (Python EXecutable) files, "
"standalone Python environments in the spirit of :ref:`virtualenv`. PEX files"
" are :doc:`zipapps <python:library/zipapp>` that make deployment of Python "
"applications as simple as ``cp``. A single PEX file can support multiple "
"target platforms and can be created from standard :ref:`pip`-resolvable "
"requirements, a lockfile generated with ``pex3 lock ...`` or even another "
"PEX. PEX files can optionally have tools embedded that support turning the "
"PEX file into a standard venv, graphing dependencies and more."
msgstr ""

#: ../source/key_projects.rst:594
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pip-tools"
msgstr ""

#: ../source/key_projects.rst:596
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://pip-tools.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/jazzband/pip-tools/>`__ | `PyPI "
"<https://pypi.org/project/pip-tools/>`__"
msgstr ""

#: ../source/key_projects.rst:600
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip-tools is a suite of tools meant for Python system administrators and "
"release managers who particularly want to keep their builds deterministic "
"yet stay up to date with new versions of their dependencies. Users can "
"specify particular release of their dependencies via hash, conveniently make"
" a properly formatted list of requirements from information in other parts "
"of their program, update all dependencies (a feature :ref:`pip` currently "
"does not provide), and create layers of constraints for the program to obey."
msgstr ""

#: ../source/key_projects.rst:612
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pip2pi"
msgstr ""

#: ../source/key_projects.rst:614
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":gh:`GitHub <wolever/pip2pi>` | `PyPI <https://pypi.org/project/pip2pi/>`__"
msgstr ""

#: ../source/key_projects.rst:617
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip2pi is a :term:`package index <Package Index>` server where specific "
"packages are manually synchronised."
msgstr ""

#: ../source/key_projects.rst:623
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "piwheels"
msgstr ""

#: ../source/key_projects.rst:625
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Website <https://www.piwheels.org/>`__ | :doc:`Docs <piwheels:index>` | "
"`GitHub <https://github.com/piwheels/piwheels/>`__"
msgstr ""

#: ../source/key_projects.rst:629
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"piwheels is a website, and software underpinning it, that fetches source "
"code distribution packages from PyPI and compiles them into binary wheels "
"that are optimized for installation onto Raspberry Pi computers. Raspberry "
"Pi OS pre-configures pip to use piwheels.org as an additional index to PyPI."
msgstr ""

#: ../source/key_projects.rst:638
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "poetry"
msgstr ""

#: ../source/key_projects.rst:640
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://python-poetry.org/>`__ | `GitHub <https://github.com/python-"
"poetry/poetry>`__ | `PyPI <https://pypi.org/project/poetry/>`__"
msgstr ""

#: ../source/key_projects.rst:644
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"poetry is a command-line tool to handle dependency installation and "
"isolation as well as building and packaging of Python packages. It uses "
"``pyproject.toml`` and, instead of depending on the resolver functionality "
"within :ref:`pip`, provides its own dependency resolver. It attempts to "
"speed users' experience of installation and dependency resolution by locally"
" caching metadata about dependencies."
msgstr ""

#: ../source/key_projects.rst:654
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "proxpi"
msgstr ""

#: ../source/key_projects.rst:656
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":gh:`GitHub <EpicWink/proxpi>` | `PyPI <https://pypi.org/project/proxpi/>`__"
msgstr ""

#: ../source/key_projects.rst:659
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"proxpi is a simple :term:`package index <Package Index>` which proxies PyPI "
"and other indexes with caching."
msgstr ""

#: ../source/key_projects.rst:665
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pulp-python"
msgstr ""

#: ../source/key_projects.rst:667
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://docs.pulpproject.org/pulp_python/>`__ | :gh:`GitHub "
"<pulp/pulp_python>` | `PyPI <https://pypi.org/project/pulp-python/>`__"
msgstr ""

#: ../source/key_projects.rst:671
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pulp-python is the Python :term:`package index <Package Index>` plugin for "
"`Pulp <https://pulpproject.org/>`_. Pulp-python supports mirrors backed by "
"local or `AWS S3`_, package upload, and proxying to multiple package "
"indexes."
msgstr ""

#: ../source/key_projects.rst:679
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "PyPI Cloud"
msgstr ""

#: ../source/key_projects.rst:681
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://pypicloud.readthedocs.io/>`__ | :gh:`GitHub "
"<stevearc/pypicloud>` | `PyPI <https://pypi.org/project/pypicloud/>`__"
msgstr ""

#: ../source/key_projects.rst:687
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"PyPI Cloud is a :term:`package index <Package Index>` server, backed by `AWS"
" S3`_ or another cloud storage service, or local files. PyPI Cloud supports "
"redirect/cached proxying for PyPI, as well as authentication and "
"authorisation."
msgstr ""

#: ../source/key_projects.rst:695
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pypiprivate"
msgstr ""

#: ../source/key_projects.rst:697
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":gh:`GitHub <helpshift/pypiprivate>` | `PyPI "
"<https://pypi.org/project/pypiprivate/>`__"
msgstr ""

#: ../source/key_projects.rst:700
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pypiprivate serves a local (or `AWS S3`_-hosted) directory of packages as a "
":term:`package index <Package Index>`."
msgstr ""

#: ../source/key_projects.rst:706
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pypiserver"
msgstr ""

#: ../source/key_projects.rst:708
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`GitHub <https://github.com/pypiserver/pypiserver>`__ | `PyPI "
"<https://pypi.org/project/pypiserver/>`__"
msgstr ""

#: ../source/key_projects.rst:711
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pypiserver is a minimalist application that serves as a private Python "
":term:`package index <Package Index>` (from a local directory) within "
"organizations, implementing a simple API and browser interface. You can "
"upload private packages using standard upload tools, and users can download "
"and install them with :ref:`pip`, without publishing them publicly. "
"Organizations who use pypiserver usually download packages both from "
"pypiserver and from PyPI."
msgstr ""

#: ../source/key_projects.rst:722
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "PyScaffold"
msgstr ""

#: ../source/key_projects.rst:724
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://pyscaffold.org>`__ | `GitHub "
"<https://github.com/pyscaffold/pyscaffold>`__ | `PyPI "
"<https://pypi.org/project/pyscaffold/>`__"
msgstr ""

#: ../source/key_projects.rst:728
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"PyScaffold is a project generator for bootstrapping Python packages, ready "
"to be shared on PyPI and installable via :ref:`pip`. It relies on a set of "
"sane default configurations for established tools (such as "
":ref:`setuptools`, pytest_ and Sphinx_) to provide a productive environment "
"so developers can start coding right away. PyScaffold can also be used with "
"existing projects to make packaging easier."
msgstr ""

#: ../source/key_projects.rst:739
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pywharf"
msgstr ""

#: ../source/key_projects.rst:741
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":gh:`GitHub <pywharf/pywharf>` | `PyPI <https://pypi.org/project/pywharf>`__"
msgstr ""

#: ../source/key_projects.rst:746
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pywharf is a :term:`package index <Package Index>` server, serving files "
"locally or from `GitHub <https://github.com/>`_."
msgstr ""

#: ../source/key_projects.rst:752
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "scikit-build"
msgstr ""

#: ../source/key_projects.rst:754
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://scikit-build.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/scikit-build/scikit-build/>`__ | `PyPI "
"<https://pypi.org/project/scikit-build>`__"
msgstr ""

#: ../source/key_projects.rst:758
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Scikit-build is a :ref:`setuptools` wrapper for CPython that builds "
"C/C++/Fortran/Cython extensions It uses `cmake "
"<https://pypi.org/project/cmake>`__ (available on PyPI) to provide better "
"support for additional compilers, build systems, cross compilation, and "
"locating dependencies and their associated build requirements. To speed up "
"and parallelize the build of large projects, the user can install `ninja "
"<https://pypi.org/project/ninja>`__ (also available on PyPI)."
msgstr ""

#: ../source/key_projects.rst:769
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "scikit-build-core"
msgstr ""

#: ../source/key_projects.rst:771
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://scikit-build-core.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/scikit-build/scikit-build-core/>`__ | `PyPI "
"<https://pypi.org/project/scikit-build-core>`__"
msgstr ""

#: ../source/key_projects.rst:775
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Scikit-build-core is a build backend for CPython C/C++/Fortran/Cython "
"extensions.  It enables users to write extensions with `cmake "
"<https://pypi.org/project/cmake>`__ (available on PyPI) to provide better "
"support for additional compilers, build systems, cross compilation, and "
"locating dependencies and their associated build requirements. CMake/Ninja "
"are automatically downloaded from PyPI if not available on the system."
msgstr ""

#: ../source/key_projects.rst:785
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "shiv"
msgstr ""

#: ../source/key_projects.rst:787
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://shiv.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/linkedin/shiv>`__ | `PyPI "
"<https://pypi.org/project/shiv/>`__"
msgstr ""

#: ../source/key_projects.rst:791
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"shiv is a command line utility for building fully self contained Python "
"zipapps as outlined in :pep:`441`, but with all their dependencies included."
" Its primary goal is making distributing Python applications and command "
"line tools fast & easy."
msgstr ""

#: ../source/key_projects.rst:799
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "simpleindex"
msgstr ""

#: ../source/key_projects.rst:801
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":gh:`GitHub <uranusjr/simpleindex>` | `PyPI "
"<https://pypi.org/project/simpleindex/>`__"
msgstr ""

#: ../source/key_projects.rst:804
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"simpleindex is a :term:`package index <Package Index>` which routes URLs to "
"multiple package indexes (including PyPI), serves local (or cloud-hosted, "
"for example `AWS S3`_, with a custom plugin) directories of packages, and "
"supports custom plugins."
msgstr ""

#: ../source/key_projects.rst:814
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Docs <spack:index>` | `GitHub <https://github.com/spack/spack>`__ | "
"`Paper <https://www.computer.org/csdl/proceedings-"
"article/sc/2015/2807623/12OmNBf94Xq>`__ | `Slides "
"<https://tgamblin.github.io/files/Gamblin-Spack-SC15-Talk.pdf>`__"
msgstr ""

#: ../source/key_projects.rst:819
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A flexible package manager designed to support multiple versions, "
"configurations, platforms, and compilers.  Spack is like Homebrew, but "
"packages are written in Python and parameterized to allow easy swapping of "
"compilers, library versions, build options, etc. Arbitrarily many versions "
"of packages can coexist on the same system. Spack was designed for rapidly "
"building high performance scientific applications on clusters and "
"supercomputers."
msgstr ""

#: ../source/key_projects.rst:827
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Spack is not in PyPI (yet), but it requires no installation and can be used "
"immediately after cloning from GitHub."
msgstr ""

#: ../source/key_projects.rst:833
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "zest.releaser"
msgstr ""

#: ../source/key_projects.rst:835
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://zestreleaser.readthedocs.io/en/latest/>`__ | `GitHub "
"<https://github.com/zestsoftware/zest.releaser/>`__ | `PyPI "
"<https://pypi.org/project/zest.releaser/>`__"
msgstr ""

#: ../source/key_projects.rst:839
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``zest.releaser`` is a Python package release tool providing an abstraction "
"layer on top of :ref:`twine`. Python developers use ``zest.releaser`` to "
"automate incrementing package version numbers, updating changelogs, tagging "
"releases in source control, and uploading new packages to PyPI."
msgstr ""

#: ../source/key_projects.rst:846
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Standard Library Projects"
msgstr ""

#: ../source/key_projects.rst:851
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "ensurepip"
msgstr ""

#: ../source/key_projects.rst:853
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://docs.python.org/3/library/ensurepip.html>`__ | `Issues "
"<https://bugs.python.org/>`__"
msgstr ""

#: ../source/key_projects.rst:856
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A package in the Python Standard Library that provides support for "
"bootstrapping :ref:`pip` into an existing Python installation or virtual "
"environment.  In most cases, end users won't use this module, but rather it "
"will be used during the build of the Python distribution."
msgstr ""

#: ../source/key_projects.rst:864
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "http.server"
msgstr ""

#: ../source/key_projects.rst:866
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Docs <python:library/http.server>` | :gh:`Issues "
"<python/cpython/issues>`"
msgstr ""

#: ../source/key_projects.rst:869
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A package and command-line interface which can host a directory as a "
"website, for example as a :term:`package index <Package Index>` (see "
":ref:`Hosting your Own Simple Repository`)."
msgstr ""

#: ../source/key_projects.rst:876
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "venv"
msgstr ""

#: ../source/key_projects.rst:878
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Docs <https://docs.python.org/3/library/venv.html>`__ | `Issues "
"<https://github.com/python/cpython/issues>`__"
msgstr ""

#: ../source/key_projects.rst:881
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A package in the Python Standard Library (starting with Python 3.3) for "
"creating :term:`Virtual Environments <Virtual Environment>`.  For more "
"information, see the section on :ref:`Creating and using Virtual "
"Environments`."
msgstr ""

#: ../source/news.rst:2
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "News"
msgstr ""

#: ../source/news.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document is not currently updated. Previously, the document highlighted"
" changes in Python packaging."
msgstr ""

#: ../source/news.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "September 2019"
msgstr ""

#: ../source/news.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a guide about publishing dists via GitHub Actions. (:pr:`647`)"
msgstr ""

#: ../source/news.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "August 2019"
msgstr ""

#: ../source/news.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated to use :file:`python3 -m` when installing pipx. (:pr:`631`)"
msgstr ""

#: ../source/news.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "July 2019"
msgstr ""

#: ../source/news.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Marked all PEP numbers with the :pep: role. (:pr:`629`)"
msgstr ""

#: ../source/news.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Upgraded Sphinx version and removed pypa.io intersphinx. (:pr:`625`)"
msgstr ""

#: ../source/news.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Mentioned :file:`find_namespace_packages`. (:pr:`622`)"
msgstr ""

#: ../source/news.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated directory layout examples for consistency. (:pr:`611`)"
msgstr ""

#: ../source/news.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Bandersnatch link to GitHub. (:pr:`623`)"
msgstr ""

#: ../source/news.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "June 2019"
msgstr ""

#: ../source/news.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Fixed some typos. (:pr:`620`)"
msgstr ""

#: ../source/news.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "May 2019"
msgstr ""

#: ../source/news.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added :file:`python_requires` usage to packaging tutorial. (:pr:`613`)"
msgstr ""

#: ../source/news.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a MANIFEST.in guide page. (:pr:`609`)"
msgstr ""

#: ../source/news.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "April 2019"
msgstr ""

#: ../source/news.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added a mention for :file:`shiv` in the key projects section. (:pr:`608`)"
msgstr ""

#: ../source/news.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Reduced emphasis on virtualenv. (:pr:`606`)"
msgstr ""

#: ../source/news.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "March 2019"
msgstr ""

#: ../source/news.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Moved single-sourcing guide version option to Python 3. (:pr:`605`)"
msgstr ""

#: ../source/news.rst:41
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Covered RTD details for contributing. (:pr:`600`)"
msgstr ""

#: ../source/news.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "February 2019"
msgstr ""

#: ../source/news.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Elaborate upon the differences between the tutorial and the real packaging "
"process. (:pr:`602`)"
msgstr ""

#: ../source/news.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added instructions to install Python CLI applications. (:pr:`594`)"
msgstr ""

#: ../source/news.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "January 2019"
msgstr ""

#: ../source/news.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added :file:`--no-deps` to the packaging tutorial. (:pr:`593`)"
msgstr ""

#: ../source/news.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Sphinx and Nox. (:pr:`591`)"
msgstr ""

#: ../source/news.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Referenced Twine from Python3. (:pr:`581`)"
msgstr ""

#: ../source/news.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "December 2018"
msgstr ""

#: ../source/news.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "No programmers in the office!"
msgstr ""

#: ../source/news.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "November 2018"
msgstr ""

#: ../source/news.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Removed landing page link to PyPI migration guide. (:pr:`575`)"
msgstr ""

#: ../source/news.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Changed bumpversion to bump2version. (:pr:`572`)"
msgstr ""

#: ../source/news.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added single-sourcing package version example. (:pr:`573`)"
msgstr ""

#: ../source/news.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a guide for creating documentation. (:pr:`568`)"
msgstr ""

#: ../source/news.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "October 2018"
msgstr ""

#: ../source/news.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Nox package name. (:pr:`566`)"
msgstr ""

#: ../source/news.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Mentioned Sphinx extensions in guides. (:pr:`562`)"
msgstr ""

#: ../source/news.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "September 2018"
msgstr ""

#: ../source/news.rst:72
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a section on checking RST markup. (:pr:`554`)"
msgstr ""

#: ../source/news.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated user installs page. (:pr:`558`)"
msgstr ""

#: ../source/news.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Google BigQuery urls. (:pr:`556`)"
msgstr ""

#: ../source/news.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Replaced tar command with working command. (:pr:`552`)"
msgstr ""

#: ../source/news.rst:76
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Changed to double quotes in the pip install SomeProject==1.4. (:pr:`550`)"
msgstr ""

#: ../source/news.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "August 2018"
msgstr ""

#: ../source/news.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Removed the recommendation to store passwords in cleartext. (:pr:`546`)"
msgstr ""

#: ../source/news.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Moved the Overview to a task based lead in along with the others. "
"(:pr:`540`)"
msgstr ""

#: ../source/news.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Python version supported by virtualenv. (:pr:`538`)"
msgstr ""

#: ../source/news.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added outline/rough draft of new Overview page. (:pr:`519`)"
msgstr ""

#: ../source/news.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "July 2018"
msgstr ""

#: ../source/news.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Improved binary extension docs. (:pr:`531`)"
msgstr ""

#: ../source/news.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added scikit-build to key projects. (:pr:`530`)"
msgstr ""

#: ../source/news.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "June 2018"
msgstr ""

#: ../source/news.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Fixed categories of interop PEP for pypa.io. (:pr:`527`)"
msgstr ""

#: ../source/news.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Markdown descriptions explanation. (:pr:`522`)"
msgstr ""

#: ../source/news.rst:98
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "May 2018"
msgstr ""

#: ../source/news.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Noted issues with Provides-Dist and Obsoletes-Dist. (:pr:`513`)"
msgstr ""

#: ../source/news.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Removed outdated warning about Python version mixing with Pipenv. "
"(:pr:`501`)"
msgstr ""

#: ../source/news.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Simplified packaging tutorial. (:pr:`498`)"
msgstr ""

#: ../source/news.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Windows users instructions for clarity. (:pr:`493`)"
msgstr ""

#: ../source/news.rst:104
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated the license section description for completeness. (:pr:`492`)"
msgstr ""

#: ../source/news.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added specification-style document to contributing section. (:pr:`489`)"
msgstr ""

#: ../source/news.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added documentation types to contributing guide. (:pr:`485`)"
msgstr ""

#: ../source/news.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "April 2018"
msgstr ""

#: ../source/news.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added README guide. (:pr:`461`)"
msgstr ""

#: ../source/news.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated instructions and status for PyPI launch. (:pr:`475`)"
msgstr ""

#: ../source/news.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added instructions for Warehouse. (:pr:`471`)"
msgstr ""

#: ../source/news.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Removed GPG references from publishing tutorial. (:pr:`466`)"
msgstr ""

#: ../source/news.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added 'What’s in which Python 3.4–3.6?'. (:pr:`468`)"
msgstr ""

#: ../source/news.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a guide for phasing out Python versions. (:pr:`459`)"
msgstr ""

#: ../source/news.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Made default Description-Content-Type variant GFM. (:pr:`462`)"
msgstr ""

#: ../source/news.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "March 2018"
msgstr ""

#: ../source/news.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated \"installing scientific packages\". (:pr:`455`)"
msgstr ""

#: ../source/news.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added :file:`long_description_content_type` to follow PEP 556. (:pr:`457`)"
msgstr ""

#: ../source/news.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Clarified a long description classifier on pypi.org. (:pr:`456`)"
msgstr ""

#: ../source/news.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Core Metadata spec to follow PEP 556. (:pr:`412`)"
msgstr ""

#: ../source/news.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "February 2018"
msgstr ""

#: ../source/news.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added python3-venv and python3-pip to Debian installation instructions. "
"(:pr:`445`)"
msgstr ""

#: ../source/news.rst:131
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated PyPI migration info. (:pr:`439`)"
msgstr ""

#: ../source/news.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added a warning about managing multiple versions with pipenv. (:pr:`430`)"
msgstr ""

#: ../source/news.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added example of multiple emails to Core Metadata. (:pr:`429`)"
msgstr ""

#: ../source/news.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added explanation of \"legacy\" in test.pypi.org/legacy. (:pr:`426`)"
msgstr ""

#: ../source/news.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "January 2018"
msgstr ""

#: ../source/news.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a link to PyPI's list of classifiers. (:pr:`425`)"
msgstr ""

#: ../source/news.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated README.rst explanation. (:pr:`419`)"
msgstr ""

#: ../source/news.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "December 2017"
msgstr ""

#: ../source/news.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Replaced :file:`~` with :file:`$HOME` in guides and tutorials.  (:pr:`418`)"
msgstr ""

#: ../source/news.rst:146
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Noted which fields can be used with environment markers. (:pr:`416`)"
msgstr ""

#: ../source/news.rst:147
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated Requires-Python section. (:pr:`414`)"
msgstr ""

#: ../source/news.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added news page. (:pr:`404`)"
msgstr ""

#: ../source/news.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "November 2017"
msgstr ""

#: ../source/news.rst:153
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Introduced a new dependency management tutorial based on Pipenv. (:pr:`402`)"
msgstr ""

#: ../source/news.rst:154
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Updated the *Single Sourcing Package Version* tutorial to reflect pip's "
"current strategy. (:pr:`400`)"
msgstr ""

#: ../source/news.rst:156
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added documentation about the ``py_modules`` argument to ``setup``. "
"(:pr:`398`)"
msgstr ""

#: ../source/news.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Simplified the wording for the :file:`manifest.in` section. (:pr:`395`)"
msgstr ""

#: ../source/news.rst:160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "October 2017"
msgstr ""

#: ../source/news.rst:162
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added a specification for the :file:`entry_points.txt` file. (:pr:`398`)"
msgstr ""

#: ../source/news.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Created a new guide for managing packages using ``pip`` and ``virtualenv``. "
"(:pr:`385`)"
msgstr ""

#: ../source/news.rst:164
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Split the specifications page into multiple pages. (:pr:`386`)"
msgstr ""

#: ../source/news.rst:167
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "September 2017"
msgstr ""

#: ../source/news.rst:169
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Encouraged using ``readme_renderer`` to validate :file:`README.rst`. "
"(:pr:`379`)"
msgstr ""

#: ../source/news.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Recommended using the ``--user-base`` option. (:pr:`374`)"
msgstr ""

#: ../source/news.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "August 2017"
msgstr ""

#: ../source/news.rst:176
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added a new, experimental tutorial on installing packages using ``Pipenv``. "
"(:pr:`369`)"
msgstr ""

#: ../source/news.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a new guide on how to use ``TestPyPI``. (:pr:`366`)"
msgstr ""

#: ../source/news.rst:178
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added :file:`pypi.org` as a term. (:pr:`365`)"
msgstr ""

#: ../source/news.rst:181
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "July 2017"
msgstr ""

#: ../source/news.rst:183
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added ``flit`` to the key projects list. (:pr:`358`)"
msgstr ""

#: ../source/news.rst:184
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added ``enscons`` to the list of key projects. (:pr:`357`)"
msgstr ""

#: ../source/news.rst:185
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Updated this guide's ``readme`` with instructions on how to build the guide "
"locally. (:pr:`356`)"
msgstr ""

#: ../source/news.rst:186
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Made the new ``TestPyPI`` URL more visible, adding note to homepage about "
"pypi.org. (:pr:`354`)"
msgstr ""

#: ../source/news.rst:187
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added a note about the removal of the explicit registration API. (:pr:`347`)"
msgstr ""

#: ../source/news.rst:190
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "June 2017"
msgstr ""

#: ../source/news.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a document on migrating uploads to :file:`PyPI.org`. (:pr:`339`)"
msgstr ""

#: ../source/news.rst:193
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added documentation for ``python_requires``. (:pr:`338`)"
msgstr ""

#: ../source/news.rst:194
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added a note about PyPI migration in the *Tool Recommendations* tutorial. "
"(:pr:`335`)"
msgstr ""

#: ../source/news.rst:195
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added a note that :file:`manifest.in` does not affect wheels. (:pr:`332`)"
msgstr ""

#: ../source/news.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a license section to the distributing guide. (:pr:`331`)"
msgstr ""

#: ../source/news.rst:197
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Expanded the section on the ``name`` argument. (:pr:`329`)"
msgstr ""

#: ../source/news.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Adjusted the landing page. (:pr:`327`, :pr:`326`, :pr:`324`)"
msgstr ""

#: ../source/news.rst:199
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Updated to Sphinx 1.6.2. (:pr:`323`)"
msgstr ""

#: ../source/news.rst:200
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Switched to the PyPA theme. (:pr:`305`)"
msgstr ""

#: ../source/news.rst:201
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Re-organized the documentation into the new structure. (:pr:`318`)"
msgstr ""

#: ../source/news.rst:204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "May 2017"
msgstr ""

#: ../source/news.rst:206
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added documentation for the ``Description-Content-Type`` field. (:pr:`258`)"
msgstr ""

#: ../source/news.rst:207
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added contributor and style guide. (:pr:`307`)"
msgstr ""

#: ../source/news.rst:208
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Documented ``pip`` and ``easy_install``'s differences for per-project "
"indexes. (:pr:`233`)"
msgstr ""

#: ../source/news.rst:211
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "April 2017"
msgstr ""

#: ../source/news.rst:213
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added travis configuration for testing pull requests. (:pr:`300`)"
msgstr ""

#: ../source/news.rst:214
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Mentioned the requirement of the ``wheel`` package for creating wheels "
"(:pr:`299`)"
msgstr ""

#: ../source/news.rst:215
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Removed the ``twine register`` reference in the *Distributing Packages* "
"tutorial. (:pr:`271`)"
msgstr ""

#: ../source/news.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a topic on plugin discovery. (:pr:`294`, :pr:`296`)"
msgstr ""

#: ../source/news.rst:217
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added a topic on namespace packages. (:pr:`290`)"
msgstr ""

#: ../source/news.rst:218
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added documentation explaining prominently how to install ``pip`` in "
"``/usr/local``. (:pr:`230`)"
msgstr ""

#: ../source/news.rst:219
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Updated development mode documentation to mention that order of local "
"packages matters. (:pr:`208`)"
msgstr ""

#: ../source/news.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Convert readthedocs link for their ``.org`` -> ``.io`` migration for hosted "
"projects (:pr:`239`)"
msgstr ""

#: ../source/news.rst:221
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Swapped order of :file:`setup.py` arguments for the upload command, as order"
" is significant. (:pr:`260`)"
msgstr ""

#: ../source/news.rst:223
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Explained how to install from unsupported sources using a helper "
"application. (:pr:`289`)"
msgstr ""

#: ../source/news.rst:227
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "March 2017"
msgstr ""

#: ../source/news.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Covered ``manylinux1`` in *Platform Wheels*. (:pr:`283`)"
msgstr ""

#: ../source/news.rst:232
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "February 2017"
msgstr ""

#: ../source/news.rst:234
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added :pep:`518`. (:pr:`281`)"
msgstr ""

#: ../source/overview.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Overview of Python Packaging"
msgstr ""

#: ../source/overview.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As a general-purpose programming language, Python is designed to be used in "
"many ways. You can build web sites or industrial robots or a game for your "
"friends to play, and much more, all using the same core technology."
msgstr ""

#: ../source/overview.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python's flexibility is why the first step in every Python project must be "
"to think about the project's audience and the corresponding environment "
"where the project will run. It might seem strange to think about packaging "
"before writing code, but this process does wonders for avoiding future "
"headaches."
msgstr ""

#: ../source/overview.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This overview provides a general-purpose decision tree for reasoning about "
"Python's plethora of packaging options. Read on to choose the best "
"technology for your next project."
msgstr ""

#: ../source/overview.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Thinking about deployment"
msgstr ""

#: ../source/overview.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Packages exist to be installed (or *deployed*), so before you package "
"anything, you'll want to have some answers to the deployment questions "
"below:"
msgstr ""

#: ../source/overview.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Who are your software's users? Will your software be installed by other "
"developers doing software development, operations people in a datacenter, or"
" a less software-savvy group?"
msgstr ""

#: ../source/overview.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Is your software intended to run on servers, desktops, mobile clients "
"(phones, tablets, etc.), or embedded in dedicated devices?"
msgstr ""

#: ../source/overview.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Is your software installed individually, or in large deployment batches?"
msgstr ""

#: ../source/overview.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Packaging is all about target environment and deployment experience. There "
"are many answers to the questions above and each combination of "
"circumstances has its own solutions. With this information, the following "
"overview will guide you to the packaging technologies best suited to your "
"project."
msgstr ""

#: ../source/overview.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Packaging Python libraries and tools"
msgstr ""

#: ../source/overview.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You may have heard about PyPI, ``setup.py``, and ``wheel`` files. These are "
"just a few of the tools Python's ecosystem provides for distributing Python "
"code to developers, which you can read about in :doc:`guides/distributing-"
"packages-using-setuptools`."
msgstr ""

#: ../source/overview.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following approaches to packaging are meant for libraries and tools used"
" by technical audience in a development setting. If you're looking for ways "
"to package Python for a non-technical audience and/or a production setting, "
"skip ahead to :ref:`packaging-applications`."
msgstr ""

#: ../source/overview.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python modules"
msgstr ""

#: ../source/overview.rst:58
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A Python file, provided it only relies on the standard library, can be "
"redistributed and reused. You will also need to ensure it's written for the "
"right version of Python, and only relies on the standard library."
msgstr ""

#: ../source/overview.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is great for sharing simple scripts and snippets between people who "
"both have compatible Python versions (such as via email, StackOverflow, or "
"GitHub gists). There are even some entire Python libraries that offer this "
"as an option, such as :doc:`bottle.py<bottle:tutorial>` and :doc:`boltons "
"<boltons:architecture>`."
msgstr ""

#: ../source/overview.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, this pattern won't scale for projects that consist of multiple "
"files, need additional libraries, or need a specific version of Python, "
"hence the options below."
msgstr ""

#: ../source/overview.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python source distributions"
msgstr ""

#: ../source/overview.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If your code consists of multiple Python files, it's usually organized into "
"a directory structure. Any directory containing Python files can comprise an"
" :term:`Import Package`."
msgstr ""

#: ../source/overview.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Because packages consist of multiple files, they are harder to distribute. "
"Most protocols support transferring only one file at a time (when was the "
"last time you clicked a link and it downloaded multiple files?). It's easier"
" to get incomplete transfers, and harder to guarantee code integrity at the "
"destination."
msgstr ""

#: ../source/overview.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"So long as your code contains nothing but pure Python code, and you know "
"your deployment environment supports your version of Python, then you can "
"use Python's native packaging tools to create a *source* :term:`Distribution"
" Package`, or *sdist* for short."
msgstr ""

#: ../source/overview.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python's *sdists* are compressed archives (``.tar.gz`` files) containing one"
" or more packages or modules. If your code is pure-Python, and you only "
"depend on other Python packages, you can go to the :ref:`source-"
"distribution-format` specification to learn more."
msgstr ""

#: ../source/overview.rst:97
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you rely on any non-Python code, or non-Python packages (such as `libxml2"
" <https://en.wikipedia.org/wiki/Libxml2>`_ in the case of `lxml "
"<https://pypi.org/project/lxml/>`_, or BLAS libraries in the case of `numpy "
"<https://pypi.org/project/numpy>`_), you will need to use the format "
"detailed in the next section, which also has many advantages for pure-Python"
" libraries."
msgstr ""

#: ../source/overview.rst:104
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python and PyPI support multiple distributions providing different "
"implementations of the same package. For instance the unmaintained-but-"
"seminal `PIL distribution <https://pypi.org/project/PIL/>`_ provides the PIL"
" package, and so does `Pillow <https://pypi.org/project/Pillow/>`_, an "
"actively-maintained fork of PIL!"
msgstr ""

#: ../source/overview.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This Python packaging superpower makes it possible for Pillow to be a drop-"
"in replacement for PIL, just by changing your project's ``install_requires``"
" or ``requirements.txt``."
msgstr ""

#: ../source/overview.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python binary distributions"
msgstr ""

#: ../source/overview.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"So much of Python's practical power comes from its ability to integrate with"
" the software ecosystem, in particular libraries written in C, C++, Fortran,"
" Rust, and other languages."
msgstr ""

#: ../source/overview.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Not all developers have the right tools or experiences to build these "
"components written in these compiled languages, so Python created the "
":term:`Wheel`, a package format designed to ship libraries with compiled "
"artifacts. In fact, Python's package installer, ``pip``, always prefers "
"wheels because installation is always faster, so even pure-Python packages "
"work better with wheels."
msgstr ""

#: ../source/overview.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Binary distributions are best when they come with source distributions to "
"match. Even if you don't upload wheels of your code for every operating "
"system, by uploading the sdist, you're enabling users of other platforms to "
"still build it for themselves. Default to publishing both sdist and wheel "
"archives together, *unless* you're creating artifacts for a very specific "
"use case where you know the recipient only needs one or the other."
msgstr ""

#: ../source/overview.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python and PyPI make it easy to upload both wheels and sdists together. Just"
" follow the :doc:`tutorials/packaging-projects` tutorial."
msgstr ""

#: ../source/overview.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A summary of Python's packaging capabilities for tools and libraries."
msgstr ""

#: ../source/overview.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python's recommended built-in library and tool packaging technologies. "
"Excerpted from `The Packaging Gradient (2017) "
"<https://www.youtube.com/watch?v=iLVNWfPWAC8>`_."
msgstr ""

#: ../source/overview.rst:152
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Packaging Python applications"
msgstr ""

#: ../source/overview.rst:154
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"So far we've only discussed Python's native distribution tools. Based on our"
" introduction, you would be correct to infer these built-in approaches only "
"target environments which have Python, and an audience who knows how to "
"install Python packages."
msgstr ""

#: ../source/overview.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"With the variety of operating systems, configurations, and people out there,"
" this assumption is only safe when targeting a developer audience."
msgstr ""

#: ../source/overview.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python's native packaging is mostly built for distributing reusable code, "
"called libraries, between developers. You can piggyback **tools**, or basic "
"applications for developers, on top of Python's library packaging, using "
"technologies like :doc:`setuptools entry_points "
"<setuptools:userguide/entry_point>`."
msgstr ""

#: ../source/overview.rst:169
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Libraries are building blocks, not complete applications. For distributing "
"applications, there's a whole new world of technologies out there."
msgstr ""

#: ../source/overview.rst:173
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The next few sections organize these application packaging options according"
" to their dependencies on the target environment, so you can choose the "
"right one for your project."
msgstr ""

#: ../source/overview.rst:178
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Depending on a framework"
msgstr ""

#: ../source/overview.rst:180
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some types of Python applications, like web site backends and other network "
"services, are common enough that they have frameworks to enable their "
"development and packaging. Other types of applications, like dynamic web "
"frontends and mobile clients, are complex enough to target that a framework "
"becomes more than a convenience."
msgstr ""

#: ../source/overview.rst:186
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In all these cases, it makes sense to work backwards, from the framework's "
"packaging and deployment story. Some frameworks include a deployment system "
"which wraps the technologies outlined in the rest of the guide. In these "
"cases, you'll want to defer to your framework's packaging guide for the "
"easiest and most reliable production experience."
msgstr ""

#: ../source/overview.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you ever wonder how these platforms and frameworks work under the hood, "
"you can always read the sections beyond."
msgstr ""

#: ../source/overview.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Service platforms"
msgstr ""

#: ../source/overview.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you're developing for a \"`Platform-as-a-Service "
"<https://en.wikipedia.org/wiki/Platform_as_a_service>`_\" or \"PaaS\", you "
"are going to want to follow their respective packaging guides. These types "
"of platforms take care of packaging and deployment, as long as you follow "
"their patterns. Most software does not fit one of these templates, hence the"
" existence of all the other options below."
msgstr ""

#: ../source/overview.rst:205
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you're developing software that will be deployed to machines you own, "
"users' personal computers, or any other arrangement, read on."
msgstr ""

#: ../source/overview.rst:209
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Web browsers and mobile applications"
msgstr ""

#: ../source/overview.rst:211
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python's steady advances are leading it into new spaces. These days you can "
"write a mobile app or web application frontend in Python. While the language"
" may be familiar, the packaging and deployment practices are brand new."
msgstr ""

#: ../source/overview.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you're planning on releasing to these new frontiers, you'll want to check"
" out the following frameworks, and refer to their packaging guides:"
msgstr ""

#. Link anchor only contains a project name, no translation is needed.
#: ../source/overview.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "`Kivy <https://kivy.org/>`_"
msgstr ""

#: ../source/overview.rst:221
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Beeware <https://pybee.org/>`_"
msgstr ""

#: ../source/overview.rst:222
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Brython <https://brython.info/>`_"
msgstr ""

#. Link anchor only contains a project name, no translation is needed.
#: ../source/overview.rst:223
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "`Flexx <https://flexx.readthedocs.io/en/latest/>`_"
msgstr ""

#: ../source/overview.rst:225
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you are *not* interested in using a framework or platform, or just wonder"
" about some of the technologies and techniques utilized by the frameworks "
"above, continue reading below."
msgstr ""

#: ../source/overview.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Depending on a pre-installed Python"
msgstr ""

#: ../source/overview.rst:232
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pick an arbitrary computer, and depending on the context, there's a very "
"good chance Python is already installed. Included by default in most Linux "
"and Mac operating systems for many years now, you can reasonably depend on "
"Python preexisting in your data centers or on the personal machines of "
"developers and data scientists."
msgstr ""

#: ../source/overview.rst:238
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Technologies which support this model:"
msgstr ""

#: ../source/overview.rst:240
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":gh:`PEX <pantsbuild/pex#user-content-pex>` (Python EXecutable)"
msgstr ""

#: ../source/overview.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`zipapp <python:library/zipapp>` (does not help manage dependencies, "
"requires Python 3.5+)"
msgstr ""

#: ../source/overview.rst:242
#, placeholders:":gh:`shiv <linkedin/shiv#user-content-shiv>`", rst-text
msgid ":gh:`shiv <linkedin/shiv#user-content-shiv>` (requires Python 3)"
msgstr ""

#: ../source/overview.rst:244
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Of all the approaches here, depending on a pre-installed Python relies the "
"most on the target environment. Of course, this also makes for the smallest "
"package, as small as single-digit megabytes, or even kilobytes."
msgstr ""

#: ../source/overview.rst:249
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In general, decreasing the dependency on the target system increases the "
"size of our package, so the solutions here are roughly arranged by "
"increasing size of output."
msgstr ""

#: ../source/overview.rst:256
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Depending on a separate software distribution ecosystem"
msgstr ""

#: ../source/overview.rst:258
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For a long time many operating systems, including Mac and Windows, lacked "
"built-in package management. Only recently did these OSes gain so-called "
"\"app stores\", but even those focus on consumer applications and offer "
"little for developers."
msgstr ""

#: ../source/overview.rst:263
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Developers long sought remedies, and in this struggle, emerged with their "
"own package management solutions, such as `Homebrew <https://brew.sh/>`_. "
"The most relevant alternative for Python developers is a package ecosystem "
"called `Anaconda "
"<https://en.wikipedia.org/wiki/Anaconda_(Python_distribution)>`_. Anaconda "
"is built around Python and is increasingly common in academic, analytical, "
"and other data-oriented environments, even making its way `into server-"
"oriented environments "
"<https://web.archive.org/web/20190403064038/https://www.paypal-"
"engineering.com/2016/09/07/python-packaging-at-paypal/>`_."
msgstr ""

#: ../source/overview.rst:273
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Instructions on building and publishing for the Anaconda ecosystem:"
msgstr ""

#: ../source/overview.rst:275
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Building libraries and applications with conda "
"<https://conda.io/projects/conda-build/en/latest/user-"
"guide/tutorials/index.html>`_"
msgstr ""

#: ../source/overview.rst:276
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Transitioning a native Python package to Anaconda "
"<https://conda.io/projects/conda-build/en/latest/user-guide/tutorials/build-"
"pkgs-skeleton.html>`_"
msgstr ""

#: ../source/overview.rst:278
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A similar model involves installing an alternative Python distribution, but "
"does not support arbitrary operating system-level packages:"
msgstr ""

#: ../source/overview.rst:282
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`ActiveState ActivePython <https://www.activestate.com/products/python/>`_"
msgstr ""

#: ../source/overview.rst:283
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`WinPython <http://winpython.github.io/>`_"
msgstr ""

#: ../source/overview.rst:288
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Bringing your own Python executable"
msgstr ""

#: ../source/overview.rst:290
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Computing as we know it is defined by the ability to execute programs. Every"
" operating system natively supports one or more formats of programs they can"
" natively execute."
msgstr ""

#: ../source/overview.rst:294
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are many techniques and technologies which turn your Python program "
"into one of these formats, most of which involve embedding the Python "
"interpreter and any other dependencies into a single executable file."
msgstr ""

#: ../source/overview.rst:299
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This approach, called *freezing*, offers wide compatibility and seamless "
"user experience, though often requires multiple technologies, and a good "
"amount of effort."
msgstr ""

#: ../source/overview.rst:303
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A selection of Python freezers:"
msgstr ""

#: ../source/overview.rst:305
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`pyInstaller <https://pyinstaller.readthedocs.io/en/stable/>`_ - Cross-"
"platform"
msgstr ""

#: ../source/overview.rst:306
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`cx_Freeze <https://marcelotduarte.github.io/cx_Freeze/>`_ - Cross-platform"
msgstr ""

#: ../source/overview.rst:307
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`constructor <https://github.com/conda/constructor>`_ - For command-line "
"installers"
msgstr ""

#: ../source/overview.rst:308
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`py2exe <http://www.py2exe.org/>`_ - Windows only"
msgstr ""

#: ../source/overview.rst:309
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`py2app <https://py2app.readthedocs.io/en/latest/>`_ - Mac only"
msgstr ""

#: ../source/overview.rst:310
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`osnap <https://github.com/jamesabel/osnap>`_ - Windows and Mac"
msgstr ""

#: ../source/overview.rst:311
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`pynsist <https://pypi.org/project/pynsist/>`_ - Windows only"
msgstr ""

#: ../source/overview.rst:313
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Most of the above imply single-user deployments. For multi-component server "
"applications, see :gh:`Chef Omnibus <chef/omnibus#user-content--omnibus>`."
msgstr ""

#: ../source/overview.rst:319
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Bringing your own userspace"
msgstr ""

#: ../source/overview.rst:321
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An increasing number of operating systems -- including Linux, Mac OS, and "
"Windows -- can be set up to run applications packaged as lightweight images,"
" using a relatively modern arrangement often referred to as `operating-"
"system-level virtualization <https://en.wikipedia.org/wiki/Operating-system-"
"level_virtualization>`_, or *containerization*."
msgstr ""

#: ../source/overview.rst:328
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These techniques are mostly Python agnostic, because they package whole OS "
"filesystems, not just Python or Python packages."
msgstr ""

#: ../source/overview.rst:331
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Adoption is most extensive among Linux servers, where the technology "
"originated and where the technologies below work best:"
msgstr ""

#: ../source/overview.rst:334
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`AppImage <https://appimage.org/>`_"
msgstr ""

#: ../source/overview.rst:335
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Docker <https://www.fullstackpython.com/docker.html>`_"
msgstr ""

#: ../source/overview.rst:336
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Flatpak <https://flatpak.org/>`_"
msgstr ""

#: ../source/overview.rst:337
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Snapcraft <https://snapcraft.io/>`_"
msgstr ""

#: ../source/overview.rst:340
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Bringing your own kernel"
msgstr ""

#: ../source/overview.rst:342
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Most operating systems support some form of classical virtualization, "
"running applications packaged as images containing a full operating system "
"of their own. Running these virtual machines, or VMs, is a mature approach, "
"widespread in data center environments."
msgstr ""

#: ../source/overview.rst:347
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These techniques are mostly reserved for larger scale deployments in data "
"centers, though certain complex applications can benefit from this "
"packaging. The technologies are Python agnostic, and include:"
msgstr ""

#: ../source/overview.rst:351
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "`Vagrant <https://www.vagrantup.com/>`_"
msgstr ""

#: ../source/overview.rst:352
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`VHD <https://en.wikipedia.org/wiki/VHD_(file_format)>`_, `AMI "
"<https://en.wikipedia.org/wiki/Amazon_Machine_Image>`_, and :doc:`other "
"formats <openstack:user/formats>`"
msgstr ""

#: ../source/overview.rst:353
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`OpenStack <https://www.redhat.com/en/topics/openstack>`_ - A cloud "
"management system in Python, with extensive VM support"
msgstr ""

#: ../source/overview.rst:356
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Bringing your own hardware"
msgstr ""

#: ../source/overview.rst:358
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The most all-encompassing way to ship your software would be to ship it "
"already-installed on some hardware. This way, your software's user would "
"require only electricity."
msgstr ""

#: ../source/overview.rst:362
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Whereas the virtual machines described above are primarily reserved for the "
"tech-savvy, you can find hardware appliances being used by everyone from the"
" most advanced data centers to the youngest children."
msgstr ""

#: ../source/overview.rst:366
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Embed your code on an :gh:`Adafruit <adafruit/circuitpython>`, `MicroPython "
"<https://micropython.org/>`_, or more-powerful hardware running Python, then"
" ship it to the datacenter or your users' homes. They plug and play, and you"
" can call it a day."
msgstr ""

#: ../source/overview.rst:375
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A summary of technologies used to package Python applications."
msgstr ""

#: ../source/overview.rst:375
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The simplified gamut of technologies used to package Python applications."
msgstr ""

#: ../source/overview.rst:378
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What about..."
msgstr ""

#: ../source/overview.rst:380
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The sections above can only summarize so much, and you might be wondering "
"about some of the more conspicuous gaps."
msgstr ""

#: ../source/overview.rst:384
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Operating system packages"
msgstr ""

#: ../source/overview.rst:386
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As mentioned in :ref:`depending-on-a-separate-ecosystem` above, some "
"operating systems have package managers of their own. If you're very sure of"
" the operating system you're targeting, you can depend directly on a format "
"like `deb <https://en.wikipedia.org/wiki/Deb_(file_format)>`_ (for Debian, "
"Ubuntu, etc.) or `RPM <https://en.wikipedia.org/wiki/RPM_Package_Manager>`_ "
"(for Red Hat, Fedora, etc.), and use that built-in package manager to take "
"care of installation, and even deployment. You can even use `FPM "
"<https://fpm.readthedocs.io/en/latest/cli-reference.html#virtualenv>`_ to "
"generate both deb and RPMs from the same source."
msgstr ""

#: ../source/overview.rst:397
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In most deployment pipelines, the OS package manager is just one piece of "
"the puzzle."
msgstr ""

#: ../source/overview.rst:403
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`Virtualenvs <python-guide:dev/virtualenvs>` have been an indispensable"
" tool for multiple generations of Python developer, but are slowly fading "
"from view, as they are being wrapped by higher-level tools. With packaging "
"in particular, virtualenvs are used as a primitive in :doc:`the dh-"
"virtualenv tool <dh-virtualenv:tutorial>` and `osnap "
"<https://github.com/jamesabel/osnap>`_, both of which wrap virtualenvs in a "
"self-contained way."
msgstr ""

#: ../source/overview.rst:412
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For production deployments, do not rely on running ``python -m pip install``"
" from the Internet into a virtualenv, as one might do in a development "
"environment. The overview above is full of much better solutions."
msgstr ""

#: ../source/overview.rst:417
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Security"
msgstr ""

#: ../source/overview.rst:419
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The further down the gradient you come, the harder it gets to update "
"components of your package. Everything is more tightly bound together."
msgstr ""

#: ../source/overview.rst:422
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, if a kernel security issue emerges, and you're deploying "
"containers, the host system's kernel can be updated without requiring a new "
"build on behalf of the application. If you deploy VM images, you'll need a "
"new build. Whether or not this dynamic makes one option more secure is still"
" a bit of an old debate, going back to the still-unsettled matter of `static"
" versus dynamic linking "
"<https://www.google.com/search?channel=fs&q=static+vs+dynamic+linking>`_."
msgstr ""

#: ../source/overview.rst:431
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wrap up"
msgstr ""

#: ../source/overview.rst:433
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Packaging in Python has a bit of a reputation for being a bumpy ride. This "
"impression is mostly a byproduct of Python's versatility. Once you "
"understand the natural boundaries between each packaging solution, you begin"
" to realize that the varied landscape is a small price Python programmers "
"pay for using one of the most balanced, flexible languages available."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Binary distribution format"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This page specifies the binary distribution format for Python packages, also"
" called the wheel format."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A wheel is a ZIP-format archive with a specially formatted file name and the"
" ``.whl`` extension.  It contains a single distribution nearly as it would "
"be installed according to PEP 376 with a particular installation scheme.  "
"Although a specialized installer is recommended, a wheel file may be "
"installed by simply unpacking into site-packages with the standard 'unzip' "
"tool while preserving enough information to spread its contents out onto "
"their final paths at any later time."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Details"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing a wheel 'distribution-1.0-py32-none-any.whl'"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wheel installation notionally consists of two phases:"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Unpack."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Parse ``distribution-1.0.dist-info/WHEEL``."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Check that installer is compatible with Wheel-Version.  Warn if minor "
"version is greater, abort if major version is greater."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If Root-Is-Purelib == 'true', unpack archive into purelib (site-packages)."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Else unpack archive into platlib (site-packages)."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Spread."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Unpacked archive includes ``distribution-1.0.dist-info/`` and (if there is "
"data) ``distribution-1.0.data/``."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Move each subtree of ``distribution-1.0.data/`` onto its destination path. "
"Each subdirectory of ``distribution-1.0.data/`` is a key into a dict of "
"destination directories, such as "
"``distribution-1.0.data/(purelib|platlib|headers|scripts|data)``. These "
"subdirectories are :ref:`installation paths defined by sysconfig "
"<python:installation_paths>`."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If applicable, update scripts starting with ``#!python`` to point to the "
"correct interpreter."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Update ``distribution-1.0.dist-info/RECORD`` with the installed paths."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Remove empty ``distribution-1.0.data`` directory."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Compile any installed .py to .pyc. (Uninstallers should be smart enough to "
"remove .pyc even if it is not mentioned in RECORD.)"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Recommended installer features"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Rewrite ``#!python``."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In wheel, scripts are packaged in "
"``{distribution}-{version}.data/scripts/``.  If the first line of a file in "
"``scripts/`` starts with exactly ``b'#!python'``, rewrite to point to the "
"correct interpreter.  Unix installers may need to add the +x bit to these "
"files if the archive was created on Windows."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``b'#!pythonw'`` convention is allowed. ``b'#!pythonw'`` indicates a GUI"
" script instead of a console script."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:72
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Generate script wrappers."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In wheel, scripts packaged on Unix systems will certainly not have "
"accompanying .exe wrappers.  Windows installers may want to add them during "
"install."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Recommended archiver features"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Place ``.dist-info`` at the end of the archive."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Archivers are encouraged to place the ``.dist-info`` files physically at the"
" end of the archive.  This enables some potentially interesting ZIP tricks "
"including the ability to amend the metadata without rewriting the entire "
"archive."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "File Format"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:90
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "File name convention"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The wheel filename is ``{distribution}-{version}(-{build tag})?-{python "
"tag}-{abi tag}-{platform tag}.whl``."
msgstr ""

#. This specific string is a reference identifier used in a filename string
#. pattern. It only needs to be translated if the pattern is translated with
#. the same identifier translation.
#: ../source/specifications/binary-distribution-format.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "distribution"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Distribution name, e.g. 'django', 'pyramid'."
msgstr ""

#. This specific string is a reference identifier used in a filename string
#. pattern. It only needs to be translated if the pattern is translated with
#. the same identifier translation.
#: ../source/specifications/binary-distribution-format.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "version"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Distribution version, e.g. 1.0."
msgstr ""

#. This specific string is a reference identifier used in a filename string
#. pattern. It only needs to be translated if the pattern is translated with
#. the same identifier translation.
#: ../source/specifications/binary-distribution-format.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "build tag"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Optional build number.  Must start with a digit.  Acts as a tie-breaker if "
"two wheel file names are the same in all other respects (i.e. name, version,"
" and other tags).  Sort as an empty tuple if unspecified, else sort as a "
"two-item tuple with the first item being the initial digits as an ``int``, "
"and the second item being the remainder of the tag as a ``str``."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A common use-case for build numbers is rebuilding a binary distribution due "
"to a change in the build environment, like when using the manylinux image to"
" build distributions using pre-release CPython versions."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build numbers are not a part of the distribution version and thus are "
"difficult to reference externally, especially so outside the Python "
"ecosystem of tools and standards. A common case where a distribution would "
"need to referenced externally is when resolving a security vulnerability."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Due to this limitation, new distributions which need to be referenced "
"externally **should not** use build numbers when building the new "
"distribution. Instead a **new distribution version** should be created for "
"such cases."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "language implementation and version tag"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "E.g. 'py27', 'py2', 'py3'."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:130
#: ../source/specifications/platform-compatibility-tags.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "abi tag"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "E.g. 'cp33m', 'abi3', 'none'."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:133
#: ../source/specifications/platform-compatibility-tags.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "platform tag"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "E.g. 'linux_x86_64', 'any'."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:135
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, ``distribution-1.0-1-py27-none-any.whl`` is the first build of "
"a package called 'distribution', and is compatible with Python 2.7 (any "
"Python 2.7 implementation), with no ABI (pure Python), on any CPU "
"architecture."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The last three components of the filename before the extension are called "
"\"compatibility tags.\"  The compatibility tags express the package's basic "
"interpreter requirements and are detailed in PEP 425."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Escaping and Unicode"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:147
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As the components of the filename are separated by a dash (``-``, HYPHEN-"
"MINUS), this character cannot appear within any component. This is handled "
"as follows:"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In distribution names, any run of ``-_.`` characters (HYPHEN-MINUS, LOW LINE"
" and FULL STOP) should be replaced with ``_`` (LOW LINE), and uppercase "
"characters should be replaced with corresponding lowercase ones. This is "
"equivalent to regular :ref:`name normalization <name-normalization>` "
"followed by replacing ``-`` with ``_``. Tools consuming wheels must be "
"prepared to accept ``.`` (FULL STOP) and uppercase letters, however, as "
"these were allowed by an earlier version of this specification."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Version numbers should be normalised according to the :ref:`Version "
"specifier specification <version-specifiers>`. Normalised version numbers "
"cannot contain ``-``."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The remaining components may not contain ``-`` characters, so no escaping is"
" necessary."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:162
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools producing wheels should verify that the filename components do not "
"contain ``-``, as the resulting file may not be processed correctly if they "
"do."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:165
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The archive filename is Unicode.  It will be some time before the tools are "
"updated to support non-ASCII filenames, but they are supported in this "
"specification."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:169
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The filenames *inside* the archive are encoded as UTF-8.  Although some ZIP "
"clients in common use do not properly display UTF-8 filenames, the encoding "
"is supported by both the ZIP specification and Python's ``zipfile``."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:175
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "File contents"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The contents of a wheel file, where {distribution} is replaced with the "
":ref:`normalized name <name-normalization>` of the package, e.g. "
"``beaglevote`` and {version} is replaced with its :ref:`normalized version "
"<version-specifiers-normalization>`, e.g. ``1.0.0``, (with dash/``-`` "
"characters replaced with underscore/``_`` characters in both fields) consist"
" of:"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:184
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``/``, the root of the archive, contains all files to be installed in "
"``purelib`` or ``platlib`` as specified in ``WHEEL``.  ``purelib`` and "
"``platlib`` are usually both ``site-packages``."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:187
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``{distribution}-{version}.dist-info/`` contains metadata."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:188
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":file:`{distribution}-{version}.dist-info/licenses/` contains license files."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:189
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``{distribution}-{version}.data/`` contains one subdirectory for each non-"
"empty install scheme key not already covered, where the subdirectory name is"
" an index into a dictionary of install paths (e.g. ``data``, ``scripts``, "
"``headers``, ``purelib``, ``platlib``)."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:193
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python scripts must appear in ``scripts`` and begin with exactly "
"``b'#!python'`` in order to enjoy script wrapper generation and ``#!python``"
" rewriting at install time.  They may have any or no extension.  The "
"``scripts`` directory may only contain regular files."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:197
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``{distribution}-{version}.dist-info/METADATA`` is Metadata version 1.1 or "
"greater format metadata."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:199
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``{distribution}-{version}.dist-info/WHEEL`` is metadata about the archive "
"itself in the same basic key: value format::"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:209
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Wheel-Version`` is the version number of the Wheel specification."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:210
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``Generator`` is the name and optionally the version of the software that "
"produced the archive."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:212
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``Root-Is-Purelib`` is true if the top level directory of the archive should"
" be installed into purelib; otherwise the root should be installed into "
"platlib."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:215
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``Tag`` is the wheel's expanded compatibility tags; in the example the "
"filename would contain ``py2.py3-none-any``."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:217
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``Build`` is the build number and is omitted if there is no build number."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:218
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A wheel installer should warn if Wheel-Version is greater than the version "
"it supports, and must fail if Wheel-Version has a greater major version than"
" the version it supports."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:221
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel, being an installation format that is intended to work across multiple"
" versions of Python, does not generally include .pyc files."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:223
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wheel does not contain setup.py or setup.cfg."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:225
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This version of the wheel specification is based on the distutils install "
"schemes and does not define how to install files to other locations. The "
"layout offers a superset of the functionality provided by the existing "
"wininst and egg binary formats."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:232
#: ../source/specifications/recording-installed-packages.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The .dist-info directory"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:234
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel .dist-info directories include at a minimum METADATA, WHEEL, and "
"RECORD."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:236
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"METADATA is the package metadata, the same format as PKG-INFO as found at "
"the root of sdists."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:238
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "WHEEL is the wheel metadata specific to a build of the package."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:239
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"RECORD is a list of (almost) all the files in the wheel and their secure "
"hashes.  Unlike PEP 376, every file except RECORD, which cannot contain a "
"hash of itself, must include its hash.  The hash algorithm must be sha256 or"
" better; specifically, md5 and sha1 are not permitted, as signed wheel files"
" rely on the strong hashes in RECORD to validate the integrity of the "
"archive."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:245
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "PEP 376's INSTALLER and REQUESTED are not included in the archive."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:246
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"RECORD.jws is used for digital signatures.  It is not mentioned in RECORD."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"RECORD.p7s is allowed as a courtesy to anyone who would prefer to use S/MIME"
" signatures to secure their wheel files.  It is not mentioned in RECORD."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:251
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"During extraction, wheel installers verify all the hashes in RECORD against "
"the file contents.  Apart from RECORD and its signatures, installation will "
"fail if any file in the archive is not both mentioned and correctly hashed "
"in RECORD."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:258
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The :file:`.dist-info/licenses/` directory"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:260
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the metadata version is 2.4 or greater and one or more ``License-File`` "
"fields is specified, the :file:`.dist-info/` directory MUST contain a "
":file:`licenses/` subdirectory, which MUST contain the files listed in the "
"``License-File`` fields in the :file:`METADATA` file at their respective "
"paths relative to the :file:`licenses/` directory."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:268
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The .data directory"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:270
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Any file that is not normally installed inside site-packages goes into the "
".data directory, named as the .dist-info directory but with the .data/ "
"extension::"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:278
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The .data directory contains subdirectories with the scripts, headers, "
"documentation and so forth from the distribution.  During installation the "
"contents of these subdirectories are moved onto their destination paths."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:284
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Signed wheel files"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:286
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel files include an extended RECORD that enables digital signatures.  PEP"
" 376's RECORD is altered to include a secure hash "
"``digestname=urlsafe_b64encode_nopad(digest)`` (urlsafe base64 encoding with"
" no trailing = characters) as the second column instead of an md5sum.  All "
"possible entries are hashed, including any generated files such as .pyc "
"files, but not RECORD which cannot contain its own hash. For example::"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:297
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The signature file(s) RECORD.jws and RECORD.p7s are not mentioned in RECORD "
"at all since they can only be added after RECORD is generated. Every other "
"file in the archive must have a correct hash in RECORD or the installation "
"will fail."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:302
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If JSON web signatures are used, one or more JSON Web Signature JSON "
"Serialization (JWS-JS) signatures is stored in a file RECORD.jws adjacent to"
" RECORD.  JWS is used to sign RECORD by including the SHA-256 hash of RECORD"
" as the signature's JSON payload:"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:311
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "(The hash value is the same format used in RECORD.)"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:313
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If RECORD.p7s is used, it must contain a detached S/MIME format signature of"
" RECORD."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:316
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A wheel installer is not required to understand digital signatures but MUST "
"verify the hashes in RECORD against the extracted file contents. When the "
"installer checks file hashes against RECORD, a separate signature checker "
"only needs to establish that RECORD matches the signature."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:321
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "See"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:323
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "https://datatracker.ietf.org/doc/html/rfc7515"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:324
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"https://datatracker.ietf.org/doc/html/draft-jones-json-web-signature-json-"
"serialization-01"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:325
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "https://datatracker.ietf.org/doc/html/rfc7517"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:326
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"https://datatracker.ietf.org/doc/html/draft-jones-jose-json-private-key-01"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:330
#: ../source/specifications/platform-compatibility-tags.rst:268
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "FAQ"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:334
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Wheel defines a .data directory.  Should I put all my data there?"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:336
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification does not have an opinion on how you should organize your "
"code.  The .data directory is just a place for any files that are not "
"normally installed inside ``site-packages`` or on the PYTHONPATH. In other "
"words, you may continue to use ``pkgutil.get_data(package, resource)`` even "
"though *those* files will usually not be distributed in *wheel's* ``.data`` "
"directory."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:345
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Why does wheel include attached signatures?"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:347
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Attached signatures are more convenient than detached signatures because "
"they travel with the archive.  Since only the individual files are signed, "
"the archive can be recompressed without invalidating the signature or "
"individual files can be verified without having to download the whole "
"archive."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:355
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Why does wheel allow JWS signatures?"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:357
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The JOSE specifications of which JWS is a part are designed to be easy to "
"implement, a feature that is also one of wheel's primary design goals.  JWS "
"yields a useful, concise pure-Python implementation."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:363
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Why does wheel also allow S/MIME signatures?"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:365
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"S/MIME signatures are allowed for users who need or want to use existing "
"public key infrastructure with wheel."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:368
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Signed packages are only a basic building block in a secure package update "
"system.  Wheel only provides the building block."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:373
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What's the deal with \"purelib\" vs. \"platlib\"?"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:375
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Wheel preserves the \"purelib\" vs. \"platlib\" distinction, which is "
"significant on some platforms. For example, Fedora installs pure Python "
"packages to '/usr/lib/pythonX.Y/site-packages' and platform dependent "
"packages to '/usr/lib64/pythonX.Y/site-packages'."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:380
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A wheel with \"Root-Is-Purelib: false\" with all its files in "
"``{name}-{version}.data/purelib`` is equivalent to a wheel with \"Root-Is-"
"Purelib: true\" with those same files in the root, and it is legal to have "
"files in both the \"purelib\" and \"platlib\" categories."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:385
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In practice a wheel should have only one of \"purelib\" or \"platlib\" "
"depending on whether it is pure Python or not and those files should be at "
"the root with the appropriate setting given for \"Root-is-purelib\"."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:393
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Is it possible to import Python code directly from a wheel file?"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:395
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Technically, due to the combination of supporting installation via simple "
"extraction and using an archive format that is compatible with "
"``zipimport``, a subset of wheel files *do* support being placed directly on"
" ``sys.path``. However, while this behaviour is a natural consequence of the"
" format design, actually relying on it is generally discouraged."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:401
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Firstly, wheel *is* designed primarily as a distribution format, so skipping"
" the installation step also means deliberately avoiding any reliance on "
"features that assume full installation (such as being able to use standard "
"tools like ``pip`` and ``virtualenv`` to capture and manage dependencies in "
"a way that can be properly tracked for auditing and security update "
"purposes, or integrating fully with the standard build machinery for C "
"extensions by publishing header files in the appropriate place)."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:410
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Secondly, while some Python software is written to support running directly "
"from a zip archive, it is still common for code to be written assuming it "
"has been fully installed. When that assumption is broken by trying to run "
"the software from a zip archive, the failures can often be obscure and hard "
"to diagnose (especially when they occur in third party libraries). The two "
"most common sources of problems with this are the fact that importing C "
"extensions from a zip archive is *not* supported by CPython (since doing so "
"is not supported directly by the dynamic loading machinery on any platform) "
"and that when running from a zip archive the ``__file__`` attribute no "
"longer refers to an ordinary filesystem path, but to a combination path that"
" includes both the location of the zip archive on the filesystem and the "
"relative path to the module inside the archive. Even when software correctly"
" uses the abstract resource APIs internally, interfacing with external "
"components may still require the availability of an actual on-disk file."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:427
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Like metaclasses, monkeypatching and metapath importers, if you're not "
"already sure you need to take advantage of this feature, you almost "
"certainly don't need it. If you *do* decide to use it anyway, be aware that "
"many projects will require a failure to be reproduced with a fully installed"
" package before accepting it as a genuine bug."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:435
#: ../source/specifications/core-metadata.rst:922
#: ../source/specifications/dependency-groups.rst:248
#: ../source/specifications/dependency-specifiers.rst:487
#: ../source/specifications/direct-url-data-structure.rst:407
#: ../source/specifications/direct-url.rst:67
#: ../source/specifications/entry-points.rst:164
#: ../source/specifications/externally-managed-environments.rst:472
#: ../source/specifications/inline-script-metadata.rst:213
#: ../source/specifications/name-normalization.rst:50
#: ../source/specifications/platform-compatibility-tags.rst:332
#: ../source/specifications/pyproject-toml.rst:508
#: ../source/specifications/recording-installed-packages.rst:268
#: ../source/specifications/simple-repository-api.rst:988
#: ../source/specifications/source-distribution-format.rst:153
#: ../source/specifications/version-specifiers.rst:1266
#: ../source/specifications/virtual-environments.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "History"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:437
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "February 2013: This specification was approved through :pep:`427`."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:438
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"February 2021: The rules on escaping in wheel filenames were revised, to "
"bring them into line with what popular tools actually do."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:440
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"December 2024: Clarified that the ``scripts`` folder should only contain "
"regular files (the expected behaviour of consuming tools when encountering "
"symlinks or subdirectories in this folder is not formally defined, and hence"
" may vary between tools)."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:444
#: ../source/specifications/recording-installed-packages.rst:278
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"December 2024: The :file:`.dist-info/licenses/` directory was specified "
"through :pep:`639`."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:446
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"January 2025: Clarified that name and version needs to be normalized for "
"``.dist-info`` and ``.data`` directories."
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:451
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Appendix"
msgstr ""

#: ../source/specifications/binary-distribution-format.rst:453
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Example urlsafe-base64-nopad implementation::"
msgstr ""

#: ../source/specifications/core-metadata.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Core metadata specifications"
msgstr ""

#: ../source/specifications/core-metadata.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Fields defined in the following specification should be considered valid, "
"complete and not subject to change. The required fields are:"
msgstr ""

#. This string is a literal. It mustn't be translated.
#: ../source/specifications/core-metadata.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``Metadata-Version``"
msgstr ""

#: ../source/specifications/core-metadata.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Name``"
msgstr ""

#. This string is a literal. It mustn't be translated.
#: ../source/specifications/core-metadata.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``Version``"
msgstr ""

#: ../source/specifications/core-metadata.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "All the other fields are optional."
msgstr ""

#: ../source/specifications/core-metadata.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The standard file format for metadata (including in :doc:`wheels <binary-"
"distribution-format>` and :doc:`installed projects <recording-installed-"
"packages>`) is based on the format of email headers. However, email formats "
"have been revised several times, and exactly which email RFC applies to "
"packaging metadata is not specified. In the absence of a precise definition,"
" the practical standard is set by what the standard library "
":mod:`python:email.parser` module can parse using the "
":data:`~.python:email.policy.compat32` policy."
msgstr ""

#: ../source/specifications/core-metadata.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Whenever metadata is serialised to a byte stream (for example, to save to a "
"file), strings must be serialised using the UTF-8 encoding."
msgstr ""

#: ../source/specifications/core-metadata.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Although :pep:`566` defined a way to transform metadata into a JSON-"
"compatible dictionary, this is not yet used as a standard interchange "
"format. The need for tools to work with years worth of existing packages "
"makes it difficult to shift to a new format."
msgstr ""

#: ../source/specifications/core-metadata.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"*Interpreting old metadata:* In :pep:`566`, the version specifier field "
"format specification was relaxed to accept the syntax used by popular "
"publishing tools (namely to remove the requirement that version specifiers "
"must be surrounded by parentheses). Metadata consumers may want to use the "
"more relaxed formatting rules even for metadata files that are nominally "
"less than version 2.1."
msgstr ""

#: ../source/specifications/core-metadata.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Metadata-Version"
msgstr ""

#: ../source/specifications/core-metadata.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Version of the file format; legal values are \"1.0\", \"1.1\", \"1.2\", "
"\"2.1\", \"2.2\", \"2.3\", and \"2.4\"."
msgstr ""

#: ../source/specifications/core-metadata.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Automated tools consuming metadata SHOULD warn if ``metadata_version`` is "
"greater than the highest version they support, and MUST fail if "
"``metadata_version`` has a greater major version than the highest version "
"they support (as described in the :ref:`Version specifier specification "
"<version-specifiers>`, the major version is the value before the first dot)."
msgstr ""

#: ../source/specifications/core-metadata.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For broader compatibility, build tools MAY choose to produce distribution "
"metadata using the lowest metadata version that includes all of the needed "
"fields."
msgstr ""

#: ../source/specifications/core-metadata.rst:64
#: ../source/specifications/core-metadata.rst:82
#: ../source/specifications/core-metadata.rst:99
#: ../source/specifications/core-metadata.rst:164
#: ../source/specifications/core-metadata.rst:179
#: ../source/specifications/core-metadata.rst:217
#: ../source/specifications/core-metadata.rst:289
#: ../source/specifications/core-metadata.rst:293
#: ../source/specifications/core-metadata.rst:297
#: ../source/specifications/core-metadata.rst:301
#: ../source/specifications/core-metadata.rst:333
#: ../source/specifications/core-metadata.rst:355
#: ../source/specifications/core-metadata.rst:373
#: ../source/specifications/core-metadata.rst:398
#: ../source/specifications/core-metadata.rst:420
#: ../source/specifications/core-metadata.rst:640
#: ../source/specifications/core-metadata.rst:675
#: ../source/specifications/core-metadata.rst:685
#: ../source/specifications/core-metadata.rst:819
#: ../source/specifications/core-metadata.rst:916
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Example::"
msgstr ""

#. This string is a literal. It mustn't be translated.
#: ../source/specifications/core-metadata.rst:72
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "Name"
msgstr ""

#: ../source/specifications/core-metadata.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Added restrictions on format from the :ref:`name format <name-format>`."
msgstr ""

#: ../source/specifications/core-metadata.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The name of the distribution. The name field is the primary identifier for a"
" distribution. It must conform to the :ref:`name format specification <name-"
"format>`."
msgstr ""

#: ../source/specifications/core-metadata.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For comparison purposes, the names should be :ref:`normalized <name-"
"normalization>` before comparing."
msgstr ""

#. This string is a literal. It mustn't be translated.
#: ../source/specifications/core-metadata.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "Version"
msgstr ""

#: ../source/specifications/core-metadata.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing the distribution's version number.  This field  must be "
"in the format specified in the :ref:`Version specifier specification "
"<version-specifiers>`."
msgstr ""

#: ../source/specifications/core-metadata.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dynamic (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing the name of another core metadata field. The field names"
" ``Name``, ``Version``, and ``Metadata-Version`` may not be specified in "
"this field."
msgstr ""

#: ../source/specifications/core-metadata.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When found in the metadata of a source distribution, the following rules "
"apply:"
msgstr ""

#: ../source/specifications/core-metadata.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If a field is *not* marked as ``Dynamic``, then the value of the field in "
"any wheel built from the sdist MUST match the value in the sdist. If the "
"field is not in the sdist, and not marked as ``Dynamic``, then it MUST NOT "
"be present in the wheel."
msgstr ""

#: ../source/specifications/core-metadata.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If a field is marked as ``Dynamic``, it may contain any valid value in a "
"wheel built from the sdist (including not being present at all)."
msgstr ""

#: ../source/specifications/core-metadata.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the sdist metadata version is older than version 2.2, then all fields "
"should be treated as if they were specified with ``Dynamic`` (i.e. there are"
" no special restrictions on the metadata of wheels built from the sdist)."
msgstr ""

#: ../source/specifications/core-metadata.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In any context other than a source distribution, ``Dynamic`` is for "
"information only, and indicates that the field value was calculated at wheel"
" build time, and may not be the same as the value in the sdist or in other "
"wheels for the project."
msgstr ""

#: ../source/specifications/core-metadata.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Full details of the semantics of ``Dynamic`` are described in :pep:`643`."
msgstr ""

#: ../source/specifications/core-metadata.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Platform (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A Platform specification describing an operating system supported by the "
"distribution which is not listed in the \"Operating System\" Trove "
"classifiers. See \"Classifier\" below."
msgstr ""

#: ../source/specifications/core-metadata.rst:147
#: ../source/specifications/core-metadata.rst:453
#: ../source/specifications/core-metadata.rst:474
#: ../source/specifications/core-metadata.rst:497
#: ../source/specifications/core-metadata.rst:526
#: ../source/specifications/core-metadata.rst:567
#: ../source/specifications/core-metadata.rst:623
#: ../source/specifications/core-metadata.rst:760
#: ../source/specifications/core-metadata.rst:790
#: ../source/specifications/core-metadata.rst:870
#: ../source/specifications/core-metadata.rst:892
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Examples::"
msgstr ""

#: ../source/specifications/core-metadata.rst:155
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Supported-Platform (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Binary distributions containing a PKG-INFO file will use the Supported-"
"Platform field in their metadata to specify the OS and CPU for which the "
"binary distribution was compiled.  The semantics of the Supported-Platform "
"field are not specified in this PEP."
msgstr ""

#. This is a field name in Core Metadata
#: ../source/specifications/core-metadata.rst:173
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "Summary"
msgstr ""

#: ../source/specifications/core-metadata.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A one-line summary of what the distribution does."
msgstr ""

#: ../source/specifications/core-metadata.rst:197
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This field may be specified in the message body instead."
msgstr ""

#: ../source/specifications/core-metadata.rst:200
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A longer description of the distribution that can run to several paragraphs."
"  Software that deals with metadata should not assume any maximum size for "
"this field, though people shouldn't include their instruction manual as the "
"description."
msgstr ""

#: ../source/specifications/core-metadata.rst:205
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The contents of this field can be written using reStructuredText markup "
"[1]_.  For programs that work with the metadata, supporting markup is "
"optional; programs can also display the contents of the field as-is.  This "
"means that authors should be conservative in the markup they use."
msgstr ""

#: ../source/specifications/core-metadata.rst:211
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To support empty lines and lines with indentation with respect to the RFC "
"822 format, any CRLF character has to be suffixed by 7 spaces followed by a "
"pipe (\"|\") char. As a result, the Description field is encoded into a "
"folded field that can be interpreted by RFC822 parser [2]_."
msgstr ""

#: ../source/specifications/core-metadata.rst:228
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This encoding implies that any occurrences of a CRLF followed by 7 spaces "
"and a pipe char have to be replaced by a single CRLF when the field is "
"unfolded using a RFC822 reader."
msgstr ""

#: ../source/specifications/core-metadata.rst:232
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Alternatively, the distribution's description may instead be provided in the"
" message body (i.e., after a completely blank line following the headers, "
"with no indentation or other special formatting necessary)."
msgstr ""

#: ../source/specifications/core-metadata.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Description-Content-Type"
msgstr ""

#: ../source/specifications/core-metadata.rst:245
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string stating the markup syntax (if any) used in the distribution's "
"description, so that tools can intelligently render the description."
msgstr ""

#: ../source/specifications/core-metadata.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Historically, PyPI supported descriptions in plain text and "
"`reStructuredText (reST) "
"<https://docutils.sourceforge.io/docs/ref/rst/restructuredtext.html>`_, and "
"could render reST into HTML. However, it is common for distribution authors "
"to write the description in `Markdown "
"<https://daringfireball.net/projects/markdown/>`_ (:rfc:`7763`) as many code"
" hosting sites render Markdown READMEs, and authors would reuse the file for"
" the description. PyPI didn't recognize the format and so could not render "
"the description correctly. This resulted in many packages on PyPI with "
"poorly-rendered descriptions when Markdown is left as plain text, or worse, "
"was attempted to be rendered as reST. This field allows the distribution "
"author to specify the format of their description, opening up the "
"possibility for PyPI and other tools to be able to render Markdown and other"
" formats."
msgstr ""

#: ../source/specifications/core-metadata.rst:261
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The format of this field is the same as the ``Content-Type`` header in HTTP "
"(i.e.: `RFC 1341 <https://www.w3.org/Protocols/rfc1341/4_Content-"
"Type.html>`_). Briefly, this means that it has a ``type/subtype`` part and "
"then it can optionally have a number of parameters:"
msgstr ""

#: ../source/specifications/core-metadata.rst:267
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Format::"
msgstr ""

#: ../source/specifications/core-metadata.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The ``type/subtype`` part has only a few legal values:"
msgstr ""

#: ../source/specifications/core-metadata.rst:273
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``text/plain``"
msgstr ""

#: ../source/specifications/core-metadata.rst:274
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``text/x-rst``"
msgstr ""

#: ../source/specifications/core-metadata.rst:275
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``text/markdown``"
msgstr ""

#: ../source/specifications/core-metadata.rst:277
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``charset`` parameter can be used to specify the character encoding of "
"the description. The only legal value is ``UTF-8``. If omitted, it is "
"assumed to be ``UTF-8``."
msgstr ""

#: ../source/specifications/core-metadata.rst:281
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Other parameters might be specific to the chosen subtype. For example, for "
"the ``markdown`` subtype, there is an optional ``variant`` parameter that "
"allows specifying the variant of Markdown in use (defaults to ``GFM`` if not"
" specified). Currently, two variants are recognized:"
msgstr ""

#: ../source/specifications/core-metadata.rst:286
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``GFM`` for :rfc:`GitHub-flavored Markdown <7764#section-3.2>`"
msgstr ""

#: ../source/specifications/core-metadata.rst:287
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``CommonMark`` for :rfc:`CommonMark <7764#section-3.5>`"
msgstr ""

#: ../source/specifications/core-metadata.rst:305
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If a ``Description-Content-Type`` is not specified, then applications should"
" attempt to render it as ``text/x-rst; charset=UTF-8`` and fall back to "
"``text/plain`` if it is not valid rst."
msgstr ""

#: ../source/specifications/core-metadata.rst:309
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If a ``Description-Content-Type`` is an unrecognized value, then the assumed"
" content type is ``text/plain`` (Although PyPI will probably reject anything"
" with an unrecognized value)."
msgstr ""

#: ../source/specifications/core-metadata.rst:313
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the ``Description-Content-Type`` is ``text/markdown`` and ``variant`` is "
"not specified or is set to an unrecognized value, then the assumed "
"``variant`` is ``GFM``."
msgstr ""

#: ../source/specifications/core-metadata.rst:317
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"So for the last example above, the ``charset`` defaults to ``UTF-8`` and the"
" ``variant`` defaults to ``GFM`` and thus it is equivalent to the example "
"before it."
msgstr ""

#: ../source/specifications/core-metadata.rst:326
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Keywords"
msgstr ""

#: ../source/specifications/core-metadata.rst:330
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A list of additional keywords, separated by commas, to be used to assist "
"searching for the distribution in a larger catalog."
msgstr ""

#: ../source/specifications/core-metadata.rst:339
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The specification previously showed keywords separated by spaces, but "
"distutils and setuptools implemented it with commas. These tools have been "
"very widely used for many years, so it was easier to update the "
"specification to match the de facto standard."
msgstr ""

#: ../source/specifications/core-metadata.rst:348
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Author"
msgstr ""

#: ../source/specifications/core-metadata.rst:352
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing the author's name at a minimum; additional contact "
"information may be provided."
msgstr ""

#: ../source/specifications/core-metadata.rst:365
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Author-email"
msgstr ""

#: ../source/specifications/core-metadata.rst:369
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing the author's e-mail address.  It can contain a name and "
"e-mail address in the legal forms for a RFC-822 ``From:`` header."
msgstr ""

#: ../source/specifications/core-metadata.rst:377
#: ../source/specifications/core-metadata.rst:424
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Per RFC-822, this field may contain multiple comma-separated e-mail "
"addresses::"
msgstr ""

#: ../source/specifications/core-metadata.rst:387
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Maintainer"
msgstr ""

#: ../source/specifications/core-metadata.rst:391
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing the maintainer's name at a minimum; additional contact "
"information may be provided."
msgstr ""

#: ../source/specifications/core-metadata.rst:394
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that this field is intended for use when a project is being maintained "
"by someone other than the original author:  it should be omitted if it is "
"identical to ``Author``."
msgstr ""

#: ../source/specifications/core-metadata.rst:408
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Maintainer-email"
msgstr ""

#: ../source/specifications/core-metadata.rst:412
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing the maintainer's e-mail address.  It can contain a name "
"and e-mail address in the legal forms for a RFC-822 ``From:`` header."
msgstr ""

#: ../source/specifications/core-metadata.rst:416
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that this field is intended for use when a project is being maintained "
"by someone other than the original author:  it should be omitted if it is "
"identical to ``Author-email``."
msgstr ""

#: ../source/specifications/core-metadata.rst:434
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "License"
msgstr ""

#: ../source/specifications/core-metadata.rst:437
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "in favour of ``License-Expression``."
msgstr ""

#: ../source/specifications/core-metadata.rst:441
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As of Metadata 2.4, ``License`` and ``License-Expression`` are mutually "
"exclusive. If both are specified, tools which parse metadata will disregard "
"``License`` and PyPI will reject uploads. See `PEP 639 "
"<https://peps.python.org/pep-0639/#deprecate-license-field>`__."
msgstr ""

#: ../source/specifications/core-metadata.rst:446
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Text indicating the license covering the distribution where the license is "
"not a selection from the \"License\" Trove classifiers. See "
":ref:`\"Classifier\" <metadata-classifier>` below. This field may also be "
"used to specify a particular version of a license which is named via the "
"``Classifier`` field, or to indicate a variation or exception to such a "
"license."
msgstr ""

#: ../source/specifications/core-metadata.rst:466
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "License-Expression"
msgstr ""

#: ../source/specifications/core-metadata.rst:470
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Text string that is a valid SPDX `license expression "
"<https://peps.python.org/pep-0639/#term-license-expression>`__ as `defined "
"in PEP 639 <https://peps.python.org/pep-0639/#spdx>`__."
msgstr ""

#: ../source/specifications/core-metadata.rst:489
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "License-File (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:493
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry is a string representation of the path of a license-related file."
" The path is located within the project source tree, relative to the project"
" root directory. For details see :pep:`639`."
msgstr ""

#: ../source/specifications/core-metadata.rst:510
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Classifier (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:514
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry is a string giving a single classification value for the "
"distribution.  Classifiers are described in :pep:`301`, and the Python "
"Package Index publishes a dynamic list of `currently defined classifiers "
"<https://pypi.org/classifiers/>`__."
msgstr ""

#: ../source/specifications/core-metadata.rst:520
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The use of ``License ::`` classifiers  is deprecated as of Metadata 2.4, use"
" ``License-Expression`` instead. See `PEP 639 "
"<https://peps.python.org/pep-0639/#deprecate-license-classifiers>`_."
msgstr ""

#: ../source/specifications/core-metadata.rst:524
#: ../source/specifications/core-metadata.rst:614
#: ../source/specifications/core-metadata.rst:758
#: ../source/specifications/core-metadata.rst:783
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This field may be followed by an environment marker after a semicolon."
msgstr ""

#: ../source/specifications/core-metadata.rst:535
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requires-Dist (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:538
#: ../source/specifications/core-metadata.rst:601
#: ../source/specifications/core-metadata.rst:730
#: ../source/specifications/core-metadata.rst:772
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The field format specification was relaxed to accept the syntax used by "
"popular publishing tools."
msgstr ""

#: ../source/specifications/core-metadata.rst:542
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry contains a string naming some other distutils project required by"
" this distribution."
msgstr ""

#: ../source/specifications/core-metadata.rst:545
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The format of a requirement string contains from one to four parts:"
msgstr ""

#: ../source/specifications/core-metadata.rst:547
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A project name, in the same format as the ``Name:`` field. The only "
"mandatory part."
msgstr ""

#: ../source/specifications/core-metadata.rst:549
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A comma-separated list of 'extra' names. These are defined by the required "
"project, referring to specific features which may need extra dependencies. "
"The names MUST conform to the restrictions specified by the ``Provides-"
"Extra:`` field."
msgstr ""

#: ../source/specifications/core-metadata.rst:553
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version specifier. Tools parsing the format should accept optional "
"parentheses around this, but tools generating it should not use parentheses."
msgstr ""

#: ../source/specifications/core-metadata.rst:556
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An environment marker after a semicolon. This means that the requirement is "
"only needed in the specified conditions."
msgstr ""

#: ../source/specifications/core-metadata.rst:559
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "See :pep:`508` for full details of the allowed format."
msgstr ""

#: ../source/specifications/core-metadata.rst:561
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The project names should correspond to names as found on the `Python Package"
" Index`_."
msgstr ""

#: ../source/specifications/core-metadata.rst:564
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Version specifiers must follow the rules described in :doc:`version-"
"specifiers`."
msgstr ""

#. It's an untranslatable metadata identifier.
#: ../source/specifications/core-metadata.rst:578
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "Requires-Python"
msgstr ""

#: ../source/specifications/core-metadata.rst:582
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This field specifies the Python version(s) that the distribution is "
"compatible with. Installation tools may look at this when picking which "
"version of a project to install."
msgstr ""

#: ../source/specifications/core-metadata.rst:586
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The value must be in the format specified in :doc:`version-specifiers`."
msgstr ""

#: ../source/specifications/core-metadata.rst:588
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, if a distribution uses :ref:`f-strings <whatsnew36-pep498>` "
"then it may prevent installation on Python < 3.6 by specifying::"
msgstr ""

#: ../source/specifications/core-metadata.rst:593
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This field cannot be followed by an environment marker."
msgstr ""

#: ../source/specifications/core-metadata.rst:598
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requires-External (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:605
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry contains a string describing some dependency in the system that "
"the distribution is to be used.  This field is intended to serve as a hint "
"to downstream project maintainers, and has no semantics which are meaningful"
" to the ``distutils`` distribution."
msgstr ""

#: ../source/specifications/core-metadata.rst:610
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The format of a requirement string is a name of an external dependency, "
"optionally followed by a version declaration within parentheses."
msgstr ""

#: ../source/specifications/core-metadata.rst:616
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Because they refer to non-Python software releases, version numbers for this"
" field are **not** required to conform to the format specified in the "
":ref:`Version specifier specification <version-specifiers>`: they should "
"correspond to the version scheme used by the external dependency."
msgstr ""

#: ../source/specifications/core-metadata.rst:621
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Notice that there is no particular rule on the strings to be used."
msgstr ""

#: ../source/specifications/core-metadata.rst:633
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project-URL (multiple-use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:637
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing a browsable URL for the project and a label for it, "
"separated by a comma."
msgstr ""

#: ../source/specifications/core-metadata.rst:644
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The label is free text limited to 32 characters."
msgstr ""

#: ../source/specifications/core-metadata.rst:646
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Starting with :pep:`753`, project metadata consumers (such as the Python "
"Package Index) can use a standard normalization process to discover \"well-"
"known\" labels, which can then be given special presentations when being "
"rendered for human consumption. See :ref:`well-known-project-urls`."
msgstr ""

#: ../source/specifications/core-metadata.rst:656
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Provides-Extra (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:659
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":pep:`685` restricted valid values to be unambiguous (i.e. no normalization "
"required). For older metadata versions, value restrictions were brought into"
" line with ``Name:`` and normalization rules were introduced."
msgstr ""

#: ../source/specifications/core-metadata.rst:664
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing the name of an optional feature. A valid name consists "
"only of lowercase ASCII letters, ASCII numbers, and hyphen. It must start "
"and end with a letter or number. Hyphens cannot be followed by another "
"hyphen. Names are limited to those which match the following regex (which "
"guarantees unambiguity)::"
msgstr ""

#: ../source/specifications/core-metadata.rst:672
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The specified name may be used to make a dependency conditional on whether "
"the optional feature has been requested."
msgstr ""

#: ../source/specifications/core-metadata.rst:680
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A second distribution requires an optional dependency by placing it inside "
"square brackets, and can request multiple features by separating them with a"
" comma (,). The requirements are evaluated for each requested feature and "
"added to the set of requirements for the distribution."
msgstr ""

#: ../source/specifications/core-metadata.rst:690
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Two feature names ``test`` and ``doc`` are reserved to mark dependencies "
"that are needed for running automated tests and generating documentation, "
"respectively."
msgstr ""

#: ../source/specifications/core-metadata.rst:694
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is legal to specify ``Provides-Extra:`` without referencing it in any "
"``Requires-Dist:``."
msgstr ""

#: ../source/specifications/core-metadata.rst:697
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When writing data for older metadata versions, names MUST be normalized "
"following the same rules used for the ``Name:`` field when performing "
"comparisons. Tools writing metadata MUST raise an error if two ``Provides-"
"Extra:`` entries would clash after being normalized."
msgstr ""

#: ../source/specifications/core-metadata.rst:702
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When reading data for older metadata versions, tools SHOULD warn when values"
" for this field would be invalid under newer metadata versions. If a value "
"would be invalid following the rules for ``Name:`` in any core metadata "
"version, the user SHOULD be warned and the value ignored to avoid ambiguity."
" Tools MAY choose to raise an error when reading an invalid name for older "
"metadata versions."
msgstr ""

#: ../source/specifications/core-metadata.rst:710
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Rarely Used Fields"
msgstr ""

#: ../source/specifications/core-metadata.rst:712
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The fields in this section are currently rarely used, as their design was "
"inspired by comparable mechanisms in Linux package management systems, and "
"it isn't at all clear how tools should interpret them in the context of an "
"open index server such as `PyPI <https://pypi.org>`__."
msgstr ""

#: ../source/specifications/core-metadata.rst:717
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As a result, popular installation tools ignore them completely, which in "
"turn means there is little incentive for package publishers to set them "
"appropriately. However, they're retained in the metadata specification, as "
"they're still potentially useful for informational purposes, and can also be"
" used for their originally intended purpose in combination with a curated "
"package repository."
msgstr ""

#: ../source/specifications/core-metadata.rst:727
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Provides-Dist (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:734
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry contains a string naming a Distutils project which is contained "
"within this distribution.  This field *must* include the project identified "
"in the ``Name`` field, followed by the version : Name (Version)."
msgstr ""

#: ../source/specifications/core-metadata.rst:739
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A distribution may provide additional names, e.g. to indicate that multiple "
"projects have been bundled together.  For instance, source distributions of "
"the ``ZODB`` project have historically included the ``transaction`` project,"
" which is now available as a separate distribution.  Installing such a "
"source distribution satisfies requirements for both ``ZODB`` and "
"``transaction``."
msgstr ""

#: ../source/specifications/core-metadata.rst:746
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A distribution may also provide a \"virtual\" project name, which does not "
"correspond to any separately-distributed project:  such a name might be used"
" to indicate an abstract capability which could be supplied by one of "
"multiple projects.  E.g., multiple projects might supply RDBMS bindings for "
"use by a given ORM:  each project might declare that it provides ``ORM-"
"bindings``, allowing other projects to depend only on having at most one of "
"them installed."
msgstr ""

#: ../source/specifications/core-metadata.rst:754
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version declaration may be supplied and must follow the rules described in"
" :doc:`version-specifiers`. The distribution's version number will be "
"implied if none is specified."
msgstr ""

#: ../source/specifications/core-metadata.rst:769
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Obsoletes-Dist (multiple use)"
msgstr ""

#: ../source/specifications/core-metadata.rst:776
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry contains a string describing a distutils project's distribution "
"which this distribution renders obsolete, meaning that the two projects "
"should not be installed at the same time."
msgstr ""

#: ../source/specifications/core-metadata.rst:780
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Version declarations can be supplied.  Version numbers must be in the format"
" specified in :doc:`version-specifiers`."
msgstr ""

#: ../source/specifications/core-metadata.rst:785
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The most common use of this field will be in case a project name changes, "
"e.g. Gorgon 2.3 gets subsumed into Torqued Python 1.0. When you install "
"Torqued Python, the Gorgon distribution should be removed."
msgstr ""

#: ../source/specifications/core-metadata.rst:798
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Deprecated Fields"
msgstr ""

#: ../source/specifications/core-metadata.rst:800
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Deprecated fields should be avoided, but they are valid metadata fields. "
"They may be removed in future versions of the core metadata standard (at "
"which point they will only be valid in files that specify a metadata version"
" prior to the removal). Tools SHOULD warn users when deprecated fields are "
"used."
msgstr ""

#: ../source/specifications/core-metadata.rst:809
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Home-page"
msgstr ""

#: ../source/specifications/core-metadata.rst:815
#: ../source/specifications/core-metadata.rst:832
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Per :pep:`753`, use :ref:`core-metadata-project-url` instead."
msgstr ""

#: ../source/specifications/core-metadata.rst:817
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A string containing the URL for the distribution's home page."
msgstr ""

#: ../source/specifications/core-metadata.rst:826
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Download-URL"
msgstr ""

#: ../source/specifications/core-metadata.rst:834
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A string containing the URL from which this version of the distribution can "
"be downloaded.  (This means that the URL can't be something like "
"\"``.../BeagleVote-latest.tgz``\", but instead must be "
"\"``.../BeagleVote-0.45.tgz``\".)"
msgstr ""

#: ../source/specifications/core-metadata.rst:840
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requires"
msgstr ""

#: ../source/specifications/core-metadata.rst:843
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "in favour of ``Requires-Dist``"
msgstr ""

#: ../source/specifications/core-metadata.rst:846
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry contains a string describing some other module or package "
"required by this package."
msgstr ""

#: ../source/specifications/core-metadata.rst:849
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The format of a requirement string is identical to that of a module or "
"package name usable with the ``import`` statement, optionally followed by a "
"version declaration within parentheses."
msgstr ""

#: ../source/specifications/core-metadata.rst:853
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version declaration is a series of conditional operators and version "
"numbers, separated by commas. Conditional operators must be one of \"<\", "
"\">\"', \"<=\", \">=\", \"==\", and \"!=\". Version numbers must be in the "
"format accepted by the ``distutils.version.StrictVersion`` class: two or "
"three dot-separated numeric components, with an optional \"pre-release\" tag"
" on the end consisting of the letter 'a' or 'b' followed by a number. "
"Example version numbers are \"1.0\", \"2.3a2\", \"1.3.99\","
msgstr ""

#: ../source/specifications/core-metadata.rst:861
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Any number of conditional operators can be specified, e.g. the string "
"\">1.0, !=1.3.4, <2.0\" is a legal version declaration."
msgstr ""

#: ../source/specifications/core-metadata.rst:864
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All of the following are possible requirement strings: \"rfc822\", \"zlib "
"(>=1.1.4)\", \"zope\"."
msgstr ""

#: ../source/specifications/core-metadata.rst:867
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There’s no canonical list of what strings should be used; the Python "
"community is left to choose its own standards."
msgstr ""

#: ../source/specifications/core-metadata.rst:880
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Provides"
msgstr ""

#: ../source/specifications/core-metadata.rst:883
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "in favour of ``Provides-Dist``"
msgstr ""

#: ../source/specifications/core-metadata.rst:886
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry contains a string describing a package or module that will be "
"provided by this package once it is installed. These strings should match "
"the ones used in Requirements fields. A version declaration may be supplied "
"(without a comparison operator); the package’s version number will be "
"implied if none is specified."
msgstr ""

#: ../source/specifications/core-metadata.rst:902
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Obsoletes"
msgstr ""

#: ../source/specifications/core-metadata.rst:905
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "in favour of ``Obsoletes-Dist``"
msgstr ""

#: ../source/specifications/core-metadata.rst:908
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each entry contains a string describing a package or module that this "
"package renders obsolete, meaning that the two packages should not be "
"installed at the same time. Version declarations can be supplied."
msgstr ""

#: ../source/specifications/core-metadata.rst:912
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The most common use of this field will be in case a package name changes, "
"e.g. Gorgon 2.3 gets subsumed into Torqued Python 1.0. When you install "
"Torqued Python, the Gorgon package should be removed."
msgstr ""

#: ../source/specifications/core-metadata.rst:924
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "March 2001: Core metadata 1.0 was approved through :pep:`241`."
msgstr ""

#: ../source/specifications/core-metadata.rst:925
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "April 2003: Core metadata 1.1 was approved through :pep:`314`:"
msgstr ""

#: ../source/specifications/core-metadata.rst:926
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "February 2010: Core metadata 1.2 was approved through :pep:`345`."
msgstr ""

#: ../source/specifications/core-metadata.rst:927
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "February 2018: Core metadata 2.1 was approved through :pep:`566`."
msgstr ""

#: ../source/specifications/core-metadata.rst:929
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added ``Description-Content-Type`` and ``Provides-Extra``."
msgstr ""

#: ../source/specifications/core-metadata.rst:930
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added canonical method for transforming metadata to JSON."
msgstr ""

#: ../source/specifications/core-metadata.rst:931
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Restricted the grammar of the ``Name`` field."
msgstr ""

#: ../source/specifications/core-metadata.rst:933
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "October 2020: Core metadata 2.2 was approved through :pep:`643`."
msgstr ""

#: ../source/specifications/core-metadata.rst:935
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added the ``Dynamic`` field."
msgstr ""

#: ../source/specifications/core-metadata.rst:937
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "March 2022: Core metadata 2.3 was approved through :pep:`685`."
msgstr ""

#: ../source/specifications/core-metadata.rst:939
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Restricted extra names to be normalized."
msgstr ""

#: ../source/specifications/core-metadata.rst:941
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "August 2024: Core metadata 2.4 was approved through :pep:`639`."
msgstr ""

#: ../source/specifications/core-metadata.rst:943
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added the ``License-Expression`` field."
msgstr ""

#: ../source/specifications/core-metadata.rst:944
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Added the ``License-File`` field."
msgstr ""

#: ../source/specifications/core-metadata.rst:948
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "reStructuredText markup: https://docutils.sourceforge.io/"
msgstr ""

#: ../source/specifications/core-metadata.rst:953
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "RFC 822 Long Header Fields: :rfc:`822#section-3.1.1`"
msgstr ""

#: ../source/specifications/dependency-groups.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dependency Groups"
msgstr ""

#: ../source/specifications/dependency-groups.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification defines Dependency Groups, a mechanism for storing "
"package requirements in ``pyproject.toml`` files such that they are not "
"included in project metadata when it is built."
msgstr ""

#: ../source/specifications/dependency-groups.rst:11
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Dependency Groups are suitable for internal development use-cases like "
"linting and testing, as well as for projects which are not built for "
"distribution, like collections of related scripts."
msgstr ""

#: ../source/specifications/dependency-groups.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Fundamentally, Dependency Groups should be thought of as being a "
"standardized subset of the capabilities of ``requirements.txt`` files (which"
" are ``pip``-specific)."
msgstr ""

#: ../source/specifications/dependency-groups.rst:20
#: ../source/specifications/dependency-specifiers.rst:26
#: ../source/specifications/direct-url-data-structure.rst:19
#: ../source/specifications/direct-url.rst:15
#: ../source/specifications/index-hosted-attestations.rst:17
#: ../source/specifications/inline-script-metadata.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Specification"
msgstr ""

#: ../source/specifications/dependency-groups.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This is a simple table which shows a ``test`` group::"
msgstr ""

#: ../source/specifications/dependency-groups.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "and a similar table which defines ``test`` and ``coverage`` groups::"
msgstr ""

#: ../source/specifications/dependency-groups.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The ``[dependency-groups]`` Table"
msgstr ""

#: ../source/specifications/dependency-groups.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Dependency Groups are defined as a table in ``pyproject.toml`` named "
"``dependency-groups``. The ``dependency-groups`` table contains an arbitrary"
" number of user-defined keys, each of which has, as its value, a list of "
"requirements."
msgstr ""

#: ../source/specifications/dependency-groups.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``[dependency-groups]`` keys, sometimes also called \"group names\", must be"
" :ref:`valid non-normalized names <name-format>`. Tools which handle "
"Dependency Groups MUST :ref:`normalize <name-normalization>` these names "
"before comparisons."
msgstr ""

#: ../source/specifications/dependency-groups.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools SHOULD prefer to present the original, non-normalized name to users, "
"and if duplicate names are detected after normalization, tools SHOULD emit "
"an error."
msgstr ""

#: ../source/specifications/dependency-groups.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Requirement lists, the values in ``[dependency-groups]``, may contain "
"strings, tables (``dict`` in Python), or a mix of strings and tables. "
"Strings must be valid :ref:`dependency specifiers <dependency-specifiers>`, "
"and tables must be valid Dependency Group Includes."
msgstr ""

#: ../source/specifications/dependency-groups.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dependency Group Include"
msgstr ""

#: ../source/specifications/dependency-groups.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A Dependency Group Include includes another Dependency Group in the current "
"group."
msgstr ""

#: ../source/specifications/dependency-groups.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An include is a table with exactly one key, ``\"include-group\"``, whose "
"value is a string, the name of another Dependency Group."
msgstr ""

#: ../source/specifications/dependency-groups.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Includes are defined to be exactly equivalent to the contents of the named "
"Dependency Group, inserted into the current group at the location of the "
"include. For example, if ``foo = [\"a\", \"b\"]`` is one group, and ``bar = "
"[\"c\", {include-group = \"foo\"}, \"d\"]`` is another, then ``bar`` should "
"evaluate to ``[\"c\", \"a\", \"b\", \"d\"]`` when Dependency Group Includes "
"are expanded."
msgstr ""

#: ../source/specifications/dependency-groups.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Dependency Group Includes may specify the same package multiple times. Tools"
" SHOULD NOT deduplicate or otherwise alter the list contents produced by the"
" include. For example, given the following table:"
msgstr ""

#: ../source/specifications/dependency-groups.rst:90
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The resolved value of ``all`` SHOULD be ``[\"foo\", \"foo\", \"foo>1.0\", "
"\"foo<1.0\"]``. Tools should handle such a list exactly as they would handle"
" any other case in which they are asked to process the same requirement "
"multiple times with different version constraints."
msgstr ""

#: ../source/specifications/dependency-groups.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Dependency Group Includes may include groups containing Dependency Group "
"Includes, in which case those includes should be expanded as well. "
"Dependency Group Includes MUST NOT include cycles, and tools SHOULD report "
"an error if they detect a cycle."
msgstr ""

#: ../source/specifications/dependency-groups.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package Building"
msgstr ""

#: ../source/specifications/dependency-groups.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build backends MUST NOT include Dependency Group data in built distributions"
" as package metadata. This means that sdist ``PKG-INFO`` and wheel "
"``METADATA`` files should not include referenceable fields containing "
"Dependency Groups."
msgstr ""

#: ../source/specifications/dependency-groups.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is, however, valid to use Dependency Groups in the evaluation of dynamic "
"metadata, and ``pyproject.toml`` files included in sdists will still contain"
" ``[dependency-groups]``. However, the table's contents are not part of a "
"built package's interfaces."
msgstr ""

#: ../source/specifications/dependency-groups.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing Dependency Groups & Extras"
msgstr ""

#: ../source/specifications/dependency-groups.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There is no syntax or specification-defined interface for installing or "
"referring to Dependency Groups. Tools are expected to provide dedicated "
"interfaces for this purpose."
msgstr ""

#: ../source/specifications/dependency-groups.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools MAY choose to provide the same or similar interfaces for interacting "
"with Dependency Groups as they do for managing extras. Tools authors are "
"advised that the specification does not forbid having an extra whose name "
"matches a Dependency Group. Separately, users are advised to avoid creating "
"Dependency Groups whose names match extras, and tools MAY treat such "
"matching as an error."
msgstr ""

#: ../source/specifications/dependency-groups.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Validation and Compatibility"
msgstr ""

#: ../source/specifications/dependency-groups.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools supporting Dependency Groups may want to validate data before using "
"it. When implementing such validation, authors should be aware of the "
"possibility of future extensions to the specification, so that they do not "
"unnecessarily emit errors or warnings."
msgstr ""

#: ../source/specifications/dependency-groups.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools SHOULD error when evaluating or processing unrecognized data in "
"Dependency Groups."
msgstr ""

#: ../source/specifications/dependency-groups.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools SHOULD NOT eagerly validate the contents of *all* Dependency Groups "
"unless they have a need to do so."
msgstr ""

#: ../source/specifications/dependency-groups.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This means that in the presence of the following data, most tools should "
"allow the ``foo`` group to be used and only error if the ``bar`` group is "
"used:"
msgstr ""

#: ../source/specifications/dependency-groups.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are several known cases of tools which have good cause to be stricter."
" Linters and validators are an example, as their purpose is to validate the "
"contents of all Dependency Groups."
msgstr ""

#: ../source/specifications/dependency-groups.rst:155
#: ../source/specifications/inline-script-metadata.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Reference Implementation"
msgstr ""

#: ../source/specifications/dependency-groups.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following Reference Implementation prints the contents of a Dependency "
"Group to stdout, newline delimited. The output is therefore valid "
"``requirements.txt`` data."
msgstr ""

#: ../source/specifications/dependency-groups.rst:250
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "October 2024: This specification was approved through :pep:`735`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Dependency specifiers"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document describes the dependency specifiers format as originally "
"specified in :pep:`508`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The job of a dependency is to enable tools like pip [#pip]_ to find the "
"right package to install. Sometimes this is very loose - just specifying a "
"name, and sometimes very specific - referring to a specific file to install."
" Sometimes dependencies are only relevant in one platform, or only some "
"versions are acceptable, so the language permits describing all these cases."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The language defined is a compact line based format which is already in "
"widespread use in pip requirements files, though we do not specify the "
"command line option handling that those files permit. There is one caveat - "
"the URL reference form, specified in :ref:`Versioning specifier "
"specification <version-specifiers>` is not actually implemented in pip, but "
"we use that format rather than pip's current native format."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "All features of the language shown with a name based lookup::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A minimal URL based lookup::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Concepts"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A dependency specification always specifies a distribution name. It may "
"include extras, which expand the dependencies of the named distribution to "
"enable optional features. The version installed can be controlled using "
"version limits, or giving the URL to a specific artifact to install. Finally"
" the dependency can be made conditional using environment markers."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Grammar"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"We first cover the grammar briefly and then drill into the semantics of each"
" section later."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A distribution specification is written in ASCII text. We use a parsley "
"[#parsley]_ grammar to provide a precise grammar. It is expected that the "
"specification will be embedded into a larger system which offers framing "
"such as comments, multiple line support via continuations, or other such "
"features."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The full grammar including annotations to build a useful parse tree is "
"included at the end of this document."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Versions may be specified according to the rules of the :ref:`Version "
"specifier specification <version-specifiers>`. (Note: URI is defined in "
":rfc:`std-66 <3986>`)::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Environment markers allow making a specification only take effect in some "
"environments::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Optional components of a distribution may be specified using the extras "
"field::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Restrictions on names for extras is defined in :pep:`685`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Giving us a rule for name based requirements::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "And a rule for direct reference specifications::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Leading to the unified rule that can specify a dependency.::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Whitespace"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Non line-breaking whitespace is mostly optional with no semantic meaning. "
"The sole exception is detecting the end of a URL requirement."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Names"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python distribution names are currently defined in :pep:`345`. Names act as "
"the primary identifier for distributions. They are present in all dependency"
" specifications, and are sufficient to be a specification on their own. "
"However, PyPI places strict restrictions on names - they must match a case "
"insensitive regex or they won't be accepted. Accordingly, in this document "
"we limit the acceptable values for identifiers to that regex. A full "
"redefinition of name may take place in a future metadata PEP. The regex (run"
" with re.IGNORECASE) is::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Extras"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:152
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An extra is an optional part of a distribution. Distributions can specify as"
" many extras as they wish, and each extra results in the declaration of "
"additional dependencies of the distribution **when** the extra is used in a "
"dependency specification. For instance::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Extras union in the dependencies they define with the dependencies of the "
"distribution they are attached to. The example above would result in "
"requests being installed, and requests own dependencies, and also any "
"dependencies that are listed in the \"security\" extra of requests."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:164
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If multiple extras are listed, all the dependencies are unioned together."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:169
#: ../source/specifications/simple-repository-api.rst:902
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Versions"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See the :ref:`Version specifier specification <version-specifiers>` for more"
" detail on both version numbers and version comparisons. Version "
"specifications limit the versions of a distribution that can be used. They "
"only apply to distributions looked up by name, rather than via a URL. "
"Version comparison are also used in the markers feature. The optional "
"brackets around a version are present for compatibility with :pep:`345` but "
"should not be generated, only accepted."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:182
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Environment Markers"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:184
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Environment markers allow a dependency specification to provide a rule that "
"describes when the dependency should be used. For instance, consider a "
"package that needs argparse. In Python 2.7 argparse is always present. On "
"older Python versions it has to be installed as a dependency. This can be "
"expressed as so::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:191
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A marker expression evaluates to either True or False. When it evaluates to "
"False, the dependency specification should be ignored."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:194
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The marker language is inspired by Python itself, chosen for the ability to "
"safely evaluate it without running arbitrary code that could become a "
"security vulnerability. Markers were first standardised in :pep:`345`. This "
"document fixes some issues that were observed in the design described in "
":pep:`426`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:199
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Comparisons in marker expressions are typed by the comparison operator.  The"
" <marker_op> operators that are not in <version_cmp> perform the same as "
"they do for strings in Python. The <version_cmp> operators use the version "
"comparison rules of the :ref:`Version specifier specification <version-"
"specifiers>` when those are defined (that is when both sides have a valid "
"version specifier). If there is no defined behaviour of this specification "
"and the operator exists in Python, then the operator falls back to the "
"Python behaviour. Otherwise an error should be raised. e.g. the following "
"will result in  errors::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:212
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"User supplied constants are always encoded as strings with either ``'`` or "
"``\"`` quote marks. Note that backslash escapes are not defined, but "
"existing implementations do support them. They are not included in this "
"specification because they add complexity and there is no observable need "
"for them today. Similarly we do not define non-ASCII character support: all "
"the runtime variables we are referencing are expected to be ASCII-only."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:219
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The variables in the marker grammar such as \"os_name\" resolve to values "
"looked up in the Python runtime. With the exception of \"extra\" all values "
"are defined on all Python versions today - it is an error in the "
"implementation of markers if a value is not defined."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:224
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Unknown variables must raise an error rather than resulting in a comparison "
"that evaluates to True or False."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:227
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Variables whose value cannot be calculated on a given Python implementation "
"should evaluate to ``0`` for versions, and an empty string for all other "
"variables."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:231
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The \"extra\" variable is special. It is used by wheels to signal which "
"specifications apply to a given extra in the wheel ``METADATA`` file, but "
"since the ``METADATA`` file is based on a draft version of :pep:`426`, there"
" is no current specification for this. Regardless, outside of a context "
"where this special handling is taking place, the \"extra\" variable should "
"result in an error like all other unknown variables."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Marker"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:242
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python equivalent"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:243
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Sample values"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:244
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``os_name``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:245
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:data:`os.name`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:246
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``posix``, ``java``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:247
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``sys_platform``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:data:`sys.platform`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:249
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``linux``, ``linux2``, ``darwin``, ``java1.8.0_51`` (note that \"linux\" is "
"from Python3 and \"linux2\" from Python2)"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:251
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``platform_machine``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:252
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:func:`platform.machine()`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:253
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``x86_64``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:254
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``platform_python_implementation``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:255
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:func:`platform.python_implementation()`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:256
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``CPython``, ``Jython``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:257
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``platform_release``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:258
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:func:`platform.release()`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:259
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``3.14.1-x86_64-linode39``, ``14.5.0``, ``1.8.0_51``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:260
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``platform_system``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:261
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:func:`platform.system()`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:262
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Linux``, ``Windows``, ``Java``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:263
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``platform_version``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:264
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:func:`platform.version()`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:265
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``#1 SMP Fri Apr 25 13:07:35 EDT 2014`` ``Java HotSpot(TM) 64-Bit Server VM,"
" 25.51-b03, Oracle Corporation`` ``Darwin Kernel Version 14.5.0: Wed Jul 29 "
"02:18:53 PDT 2015; root:xnu-2782.40.9~2/RELEASE_X86_64``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:268
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python_version``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:269
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``'.'.join(platform.python_version_tuple()[:2])``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:270
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``3.4``, ``2.7``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``python_full_version``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:272
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:func:`platform.python_version()`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:273
#: ../source/specifications/dependency-specifiers.rst:279
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``3.4.0``, ``3.5.0b1``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:274
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``implementation_name``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:275
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":py:data:`sys.implementation.name <sys.implementation>`"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:276
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``cpython``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:277
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``implementation_version``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:278
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "see definition below"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:280
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``extra``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:281
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An error except when defined by the context interpreting the specification."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:283
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``test``"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:285
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``implementation_version`` marker variable is derived from "
":py:data:`sys.implementation.version <sys.implementation>`:"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:302
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This environment markers section, initially defined through :pep:`508`, "
"supersedes the environment markers section in :pep:`345`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:308
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Complete Grammar"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:310
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The complete parsley grammar::"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:417
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A test program - if the grammar is in a string ``grammar``:"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:489
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "November 2015: This specification was approved through :pep:`508`."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:490
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"July 2019: The definition of ``python_version`` was `changed <python-"
"version-change_>`_ from ``platform.python_version()[:3]`` to "
"``'.'.join(platform.python_version_tuple()[:2])``, to accommodate potential "
"future versions of Python with 2-digit major and minor versions (e.g. 3.10)."
" [#future_versions]_"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:495
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"June 2024: The definition of ``version_many`` was changed to allow trailing "
"commas, matching with the behavior of the Python implementation that has "
"been in use since late 2022."
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:503
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip, the recommended installer for Python packages "
"(http://pip.readthedocs.org/en/stable/)"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:506
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The parsley PEG library. (https://pypi.python.org/pypi/parsley/)"
msgstr ""

#: ../source/specifications/dependency-specifiers.rst:509
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Future Python versions might be problematic with the definition of "
"Environment Marker Variable ``python_version`` "
"(https://github.com/python/peps/issues/560)"
msgstr ""

#: ../source/specifications/direct-url.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Recording the Direct URL Origin of installed distributions"
msgstr ""

#: ../source/specifications/direct-url.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document specifies a :file:`direct_url.json` file in the ``*.dist-"
"info`` directory of an installed distribution, to record the Direct URL "
"Origin of the distribution. The general structure and usage of ``*.dist-"
"info`` directories is described in :ref:`recording-installed-packages`."
msgstr ""

#: ../source/specifications/direct-url.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :file:`direct_url.json` file MUST be created in the :file:`*.dist-info` "
"directory by installers when installing a distribution from a requirement "
"specifying a direct URL reference (including a VCS URL)."
msgstr ""

#: ../source/specifications/direct-url.rst:21
#: ../source/specifications/recording-installed-packages.rst:221
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This file MUST NOT be created when installing a distribution from an other "
"type of requirement (i.e. name plus version specifier)."
msgstr ""

#: ../source/specifications/direct-url.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This JSON file MUST be a UTF-8 encoded, :rfc:`8259` compliant, serialization"
" of the :doc:`direct-url-data-structure`."
msgstr ""

#: ../source/specifications/direct-url.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When the requested URL has the file:// scheme and points to a local "
"directory that happens to contain a VCS checkout, installers MUST NOT "
"attempt to infer any VCS information and therefore MUST NOT output any VCS "
"related information (such as ``vcs_info``) in :file:`direct_url.json`."
msgstr ""

#: ../source/specifications/direct-url.rst:36
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As a general rule, installers should as much as possible preserve the "
"information that was provided in the requested URL when generating "
":file:`direct_url.json`. For example user:password environment variables "
"should be preserved and ``requested_revision`` should reflect the revision "
"that was provided in the requested URL as faithfully as possible. This "
"information is however *enriched* with more precise data, such as "
"``commit_id``."
msgstr ""

#: ../source/specifications/direct-url.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Example pip commands and their effect on direct_url.json"
msgstr ""

#: ../source/specifications/direct-url.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Commands that generate a ``direct_url.json``:"
msgstr ""

#. It's a literal, no need to translate.
#: ../source/specifications/direct-url.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``pip install https://example.com/app-1.0.tgz``"
msgstr ""

#. It's a literal, no need to translate.
#: ../source/specifications/direct-url.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``pip install https://example.com/app-1.0.whl``"
msgstr ""

#: ../source/specifications/direct-url.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``pip install \"app @ "
"git+https://example.com/repo/app.git#subdirectory=setup\"``"
msgstr ""

#. It's a literal, no need to translate.
#: ../source/specifications/direct-url.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``pip install ./app``"
msgstr ""

#. It's a literal, no need to translate.
#: ../source/specifications/direct-url.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``pip install file:///home/user/app``"
msgstr ""

#: ../source/specifications/direct-url.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``pip install --editable \"app @ "
"git+https://example.com/repo/app.git#subdirectory=setup\"`` (in which case, "
"``url`` will be the local directory where the git repository has been cloned"
" to, and ``dir_info`` will be present with ``\"editable\": true`` and no "
"``vcs_info`` will be set)"
msgstr ""

#. It's a literal, no need to translate.
#: ../source/specifications/direct-url.rst:58
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``pip install -e ./app``"
msgstr ""

#: ../source/specifications/direct-url.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Commands that *do not* generate a ``direct_url.json``"
msgstr ""

#. It's a literal, no need to translate.
#: ../source/specifications/direct-url.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``pip install app``"
msgstr ""

#. It's a literal, no need to translate.
#: ../source/specifications/direct-url.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "``pip install app --no-index --find-links https://example.com/``"
msgstr ""

#: ../source/specifications/direct-url.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "March 2020: This specification was approved through :pep:`610`."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Direct URL Data Structure"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document specifies a JSON-serializable abstract data structure that can"
" represent URLs to python projects and distribution artifacts such as VCS "
"source trees, local source trees, source distributions and wheels."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"At time of writing, it is not formally specified how to merge the parts of "
"this data structure into a single URL that can be passed to tools. A common "
"representation is the pip URL format (`VCS Support <pip-vcs-support_>`_), "
"other examples are provided in the :ref:`Version specifier specification "
"<version-specifiers>`."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The Direct URL Data Structure MUST be a dictionary, serializable to JSON "
"according to :rfc:`8259`."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It MUST contain at least two fields. The first one is ``url``, with type "
"``string``. Its content must be a valid URL according to the `WHATWG URL "
"Standard <whatwg-url-standard_>`_."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Depending on what ``url`` refers to, the second field MUST be one of "
"``vcs_info`` (if ``url`` is a VCS reference), ``archive_info`` (if ``url`` "
"is a source archive or a wheel), or ``dir_info`` (if ``url``  is a local "
"directory). These info fields have a (possibly empty) subdictionary as "
"value, with the possible keys defined below."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Security Considerations"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When persisted, ``url`` MUST be stripped of any sensitive authentication "
"information, for security reasons."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The user:password section of the URL MAY however be composed of environment "
"variables, matching the following regular expression:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Additionally, the user:password section of the URL MAY be a well-known, non "
"security sensitive string. A typical example is ``git`` in the case of a URL"
" such as ``ssh://git@gitlab.com/user/repo``."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "VCS URLs"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When ``url`` refers to a VCS repository, the ``vcs_info`` key MUST be "
"present as a dictionary with the following keys:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A ``vcs`` key (type ``string``) MUST be present, containing the name of the "
"VCS (i.e. one of ``git``, ``hg``, ``bzr``, ``svn``). Other VCS's SHOULD be "
"registered by writing a PEP to amend this specification. The ``url`` value "
"MUST be compatible with the corresponding VCS, so an installer can hand it "
"off without transformation to a checkout/download command of the VCS."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A ``requested_revision`` key (type ``string``) MAY be present naming a "
"branch/tag/ref/commit/revision/etc (in a format compatible with the VCS). "
"This field MUST match the revision requested by the user and MUST NOT exist "
"when the user did not select a specific revision."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A ``commit_id`` key (type ``string``) MUST be present, containing the exact "
"commit/revision number that was/is to be installed. If the VCS supports "
"commit-hash based revision identifiers, such commit-hash MUST be used as "
"``commit_id`` in order to reference an immutable version of the source code."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Archive URLs"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When ``url`` refers to a source archive or a wheel, the ``archive_info`` key"
" MUST be present as a dictionary with the following keys:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A ``hashes`` key SHOULD be present as a dictionary mapping a hash name to a "
"hex encoded digest of the file."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Multiple hashes can be included, and it is up to the consumer to decide what"
" to do with multiple hashes (it may validate all of them or a subset of "
"them, or nothing at all)."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "These hash names SHOULD always be normalized to be lowercase."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Any hash algorithm available via :py:mod:`hashlib` (specifically any that "
"can be passed to :py:func:`hashlib.new()` and do not require additional "
"parameters) can be used as a key for the hashes dictionary. At least one "
"secure algorithm from :py:data:`hashlib.algorithms_guaranteed` SHOULD always"
" be included. At time of writing, ``sha256`` specifically is recommended."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A deprecated ``hash`` key (type ``string``) MAY be present for backwards "
"compatibility purposes, with value ``<hash-algorithm>=<expected-hash>``."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Producers of the data structure SHOULD emit the ``hashes`` key whether one "
"or multiple hashes are available. Producers SHOULD continue to emit the "
"``hash`` key in contexts where they did so before, so as to keep backwards "
"compatibility for existing clients."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When both the ``hash`` and ``hashes`` keys are present, the hash represented"
" in the ``hash`` key MUST also be present in the ``hashes`` dictionary, so "
"consumers can consider the ``hashes`` key only if it is present, and fall "
"back to ``hash`` otherwise."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Local directories"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When ``url`` refers to a local directory, the ``dir_info`` key MUST be "
"present as a dictionary with the following key:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``editable`` (type: ``boolean``): ``true`` if the distribution was/is to be "
"installed in editable mode, ``false`` otherwise. If absent, default to "
"``false``."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When ``url`` refers to a local directory, it MUST have the ``file`` scheme "
"and be compliant with :rfc:`8089`. In particular, the path component must be"
" absolute. Symbolic links SHOULD be preserved when making relative paths "
"absolute."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Projects in subdirectories"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A top-level ``subdirectory`` field MAY be present containing a directory "
"path, relative to the root of the VCS repository, source archive or local "
"directory, to specify where ``pyproject.toml`` or ``setup.py`` is located."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Registered VCS"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:141
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section lists the registered VCS's; expanded, VCS-specific information "
"on how to use the ``vcs``, ``requested_revision``, and other fields of "
"``vcs_info``; and in some cases additional VCS-specific fields. Tools MAY "
"support other VCS's although it is RECOMMENDED to register them by writing a"
" PEP to amend this specification. The ``vcs`` field SHOULD be the command "
"name (lowercased). Additional fields that would be necessary to support such"
" VCS SHOULD be prefixed with the VCS command name."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Git"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:154
#: ../source/specifications/direct-url-data-structure.rst:181
#: ../source/specifications/direct-url-data-structure.rst:199
#: ../source/specifications/direct-url-data-structure.rst:217
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Home page"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:154
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "https://git-scm.com/"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:157
#: ../source/specifications/direct-url-data-structure.rst:184
#: ../source/specifications/direct-url-data-structure.rst:202
#: ../source/specifications/direct-url-data-structure.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "vcs command"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:157
#: ../source/specifications/direct-url-data-structure.rst:160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "git"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:160
#: ../source/specifications/direct-url-data-structure.rst:187
#: ../source/specifications/direct-url-data-structure.rst:205
#: ../source/specifications/direct-url-data-structure.rst:223
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``vcs`` field"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:164
#: ../source/specifications/direct-url-data-structure.rst:190
#: ../source/specifications/direct-url-data-structure.rst:208
#: ../source/specifications/direct-url-data-structure.rst:227
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``requested_revision`` field"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A tag name, branch name, Git ref, commit hash, shortened commit hash, or "
"other commit-ish."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:167
#: ../source/specifications/direct-url-data-structure.rst:193
#: ../source/specifications/direct-url-data-structure.rst:211
#: ../source/specifications/direct-url-data-structure.rst:232
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``commit_id`` field"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:167
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A commit hash (40 hexadecimal characters sha1)."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools can use the ``git show-ref`` and ``git symbolic-ref`` commands to "
"determine if the ``requested_revision`` corresponds to a Git ref. In turn, a"
" ref beginning with ``refs/tags/`` corresponds to a tag, and a ref beginning"
" with ``refs/remotes/origin/`` after cloning corresponds to a branch."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:178
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Mercurial"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:181
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "https://www.mercurial-scm.org/"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:184
#: ../source/specifications/direct-url-data-structure.rst:187
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "hg"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:190
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A tag name, branch name, changeset ID, shortened changeset ID."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:193
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A changeset ID (40 hexadecimal characters)."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Bazaar"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:199
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "https://www.breezy-vcs.org/"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:202
#: ../source/specifications/direct-url-data-structure.rst:205
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "bzr"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:208
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A tag name, branch name, revision id."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:211
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A revision id."
msgstr ""

#. This string is a name of the technology, it mustn't be translated.
#: ../source/specifications/direct-url-data-structure.rst:214
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text
msgid "Subversion"
msgstr ""

#. This string is a URL, it mustn't be translated.
#: ../source/specifications/direct-url-data-structure.rst:217
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, read-only, rst-text, url
msgid "https://subversion.apache.org/"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:220
#: ../source/specifications/direct-url-data-structure.rst:223
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "svn"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:226
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``requested_revision`` must be compatible with ``svn checkout`` "
"``--revision`` option. In Subversion, branch or tag is part of ``url``."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Since Subversion does not support globally unique identifiers, this field is"
" the Subversion revision number in the corresponding repository."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:235
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "JSON Schema"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:237
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following JSON Schema can be used to validate the contents of "
"``direct_url.json``:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:359
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source archive:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:372
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Git URL with tag and commit-hash:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:385
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Local directory:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:394
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Local directory in editable mode:"
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:409
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"March 2020: This specification was approved through :pep:`610`, defining the"
" ``direct_url.json`` metadata file."
msgstr ""

#: ../source/specifications/direct-url-data-structure.rst:411
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"January 2023: Added the ``archive_info.hashes`` key (`discussion <archive-"
"info-hashes_>`_)."
msgstr ""

#: ../source/specifications/entry-points.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Entry points specification"
msgstr ""

#: ../source/specifications/entry-points.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"*Entry points* are a mechanism for an installed distribution to advertise "
"components it provides to be discovered and used by other code. For example:"
msgstr ""

#: ../source/specifications/entry-points.rst:11
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Distributions can specify ``console_scripts`` entry points, each referring "
"to a function. When *pip* (or another console_scripts aware installer) "
"installs the distribution, it will create a command-line wrapper for each "
"entry point."
msgstr ""

#: ../source/specifications/entry-points.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Applications can use entry points to load plugins; e.g. Pygments (a syntax "
"highlighting tool) can use additional lexers and styles from separately "
"installed packages. For more about this, see :doc:`/guides/creating-and-"
"discovering-plugins`."
msgstr ""

#: ../source/specifications/entry-points.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The entry point file format was originally developed to allow packages built"
" with setuptools to provide integration point metadata that would be read at"
" runtime with :py:mod:`importlib.metadata`. It is now defined as a PyPA "
"interoperability specification in order to allow build tools other than "
"``setuptools`` to publish :py:mod:`importlib.metadata` compatible entry "
"point metadata, and runtime libraries other than "
":py:mod:`importlib.metadata` to portably read published entry point metadata"
" (potentially with different caching and conflict resolution strategies)."
msgstr ""

#: ../source/specifications/entry-points.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Data model"
msgstr ""

#: ../source/specifications/entry-points.rst:30
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Conceptually, an entry point is defined by three required properties:"
msgstr ""

#: ../source/specifications/entry-points.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The **group** that an entry point belongs to indicates what sort of object "
"it provides. For instance, the group ``console_scripts`` is for entry points"
" referring to functions which can be used as a command, while "
"``pygments.styles`` is the group for classes defining pygments styles. The "
"consumer typically defines the expected interface. To avoid clashes, "
"consumers defining a new group should use names starting with a PyPI name "
"owned by the consumer project, followed by ``.``. Group names must be one or"
" more groups of letters, numbers and underscores, separated by dots (regex "
"``^\\w+(\\.\\w+)*$``)."
msgstr ""

#: ../source/specifications/entry-points.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The **name** identifies this entry point within its group. The precise "
"meaning of this is up to the consumer. For console scripts, the name of the "
"entry point is the command that will be used to launch it. Within a "
"distribution, entry point names should be unique. If different distributions"
" provide the same name, the consumer decides how to handle such conflicts. "
"The name may contain any characters except ``=``, but it cannot start or end"
" with any whitespace character, or start with ``[``. For new entry points, "
"it is recommended to use only letters, numbers, underscores, dots and dashes"
" (regex ``[\\w.-]+``)."
msgstr ""

#: ../source/specifications/entry-points.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The **object reference** points to a Python object. It is either in the form"
" ``importable.module``, or ``importable.module:object.attr``. Each of the "
"parts delimited by dots and the colon is a valid Python identifier. It is "
"intended to be looked up like this::"
msgstr ""

#: ../source/specifications/entry-points.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some tools call this kind of object reference by itself an 'entry point', "
"for want of a better term, especially where it points to a function to "
"launch a program."
msgstr ""

#: ../source/specifications/entry-points.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There is also an optional property: the **extras** are a set of strings "
"identifying optional features of the distribution providing the entry point."
" If these are specified, the entry point requires the dependencies of those "
"'extras'. See the metadata field :ref:`metadata_provides_extra`."
msgstr ""

#: ../source/specifications/entry-points.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Using extras for an entry point is no longer recommended. Consumers should "
"support parsing them from existing distributions, but may then ignore them. "
"New publishing tools need not support specifying extras. The functionality "
"of handling extras was tied to setuptools' model of managing 'egg' packages,"
" but newer tools such as pip and virtualenv use a different model."
msgstr ""

#: ../source/specifications/entry-points.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "File format"
msgstr ""

#: ../source/specifications/entry-points.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Entry points are defined in a file called :file:`entry_points.txt` in the "
":file:`*.dist-info` directory of the distribution. This is the directory "
"described in :ref:`recording-installed-packages` for installed "
"distributions, and in :ref:`binary-distribution-format` for wheels. The file"
" uses the UTF-8 character encoding."
msgstr ""

#: ../source/specifications/entry-points.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The file contents are in INI format, as read by Python's :mod:`configparser`"
" module. However, configparser treats names as case-insensitive by default, "
"whereas entry point names are case sensitive. A case-sensitive config parser"
" can be made like this::"
msgstr ""

#: ../source/specifications/entry-points.rst:98
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The entry points file must always use ``=`` to delimit names from values "
"(whereas configparser also allows using ``:``)."
msgstr ""

#: ../source/specifications/entry-points.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The sections of the config file represent entry point groups, the names are "
"names, and the values encode both the object reference and the optional "
"extras. If extras are used, they are a comma-separated list inside square "
"brackets."
msgstr ""

#: ../source/specifications/entry-points.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Within a value, readers must accept and ignore spaces (including multiple "
"consecutive spaces) before or after the colon, between the object reference "
"and the left square bracket, between the extra names and the square brackets"
" and colons delimiting them, and after the right square bracket. The syntax "
"for extras is formally specified as part of :pep:`508` (as ``extras``) and "
"restrictions on values specified in :pep:`685`. For tools writing the file, "
"it is recommended only to insert a space between the object reference and "
"the left square bracket."
msgstr ""

#: ../source/specifications/entry-points.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Use for scripts"
msgstr ""

#: ../source/specifications/entry-points.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Two groups of entry points have special significance in packaging: "
"``console_scripts`` and ``gui_scripts``. In both groups, the name of the "
"entry point should be usable as a command in a system shell after the "
"package is installed. The object reference points to a function which will "
"be called with no arguments when this command is run. The function may "
"return an integer to be used as a process exit code, and returning ``None`` "
"is equivalent to returning ``0``."
msgstr ""

#: ../source/specifications/entry-points.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For instance, the entry point ``mycmd = mymod:main`` would create a command "
"``mycmd`` launching a script like this::"
msgstr ""

#: ../source/specifications/entry-points.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The difference between ``console_scripts`` and ``gui_scripts`` only affects "
"Windows systems. ``console_scripts`` are wrapped in a console executable, so"
" they are attached to a console and can use :py:data:`sys.stdin`, "
":py:data:`sys.stdout` and :py:data:`sys.stderr` for input and output. "
"``gui_scripts`` are wrapped in a GUI executable, so they can be started "
"without a console, but cannot use standard streams unless application code "
"redirects them. Other platforms do not have the same distinction."
msgstr ""

#: ../source/specifications/entry-points.rst:153
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Install tools are expected to set up wrappers for both ``console_scripts`` "
"and ``gui_scripts`` in the scripts directory of the install scheme. They are"
" not responsible for putting this directory in the ``PATH`` environment "
"variable which defines where command-line tools are found."
msgstr ""

#: ../source/specifications/entry-points.rst:158
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As files are created from the names, and some filesystems are case-"
"insensitive, packages should avoid using names in these groups which differ "
"only in case. The behaviour of install tools when names differ only in case "
"is undefined."
msgstr ""

#: ../source/specifications/entry-points.rst:166
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"October 2017: This specification was written to formalize the existing entry"
" points feature of setuptools (discussion_)."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Externally Managed Environments"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While some Python installations are entirely managed by the user that "
"installed Python, others may be provided and managed by another means (such "
"as the operating system package manager in a Linux distribution, or as a "
"bundled Python environment in an application with a dedicated installer)."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Attempting to use conventional Python packaging tools to manipulate such "
"environments can be confusing at best and outright break the entire "
"underlying operating system at worst. Documentation and interoperability "
"guides only go so far in resolving such problems."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification defines an ``EXTERNALLY-MANAGED`` marker file that allows"
" a Python installation to indicate to Python-specific tools such as ``pip`` "
"that they neither install nor remove packages into the interpreter’s default"
" installation environment, and should instead guide the end user towards "
"using :ref:`virtual-environments`."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It also standardizes an interpretation of the ``sysconfig`` schemes so that,"
" if a Python-specific package manager is about to install a package in an "
"interpreter-wide context, it can do so in a manner that will avoid "
"conflicting with the external package manager and reduces the risk of "
"breaking software shipped by the external package manager."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Terminology"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:34
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A few terms used in this specification have multiple meanings in the "
"contexts that it spans. For clarity, this specification uses the following "
"terms in specific ways:"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "distro"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Short for \"distribution,\" a collection of various sorts of software, "
"ideally designed to work properly together, including (in contexts relevant "
"to this document) the Python interpreter itself, software written in Python,"
" and software written in other languages. That is, this is the sense used in"
" phrases such as \"Linux distro\" or \"Berkeley Software Distribution.\""
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A distro can be an operating system (OS) of its own, such as Debian, Fedora,"
" or FreeBSD. It can also be an overlay distribution that installs on top of "
"an existing OS, such as Homebrew or MacPorts."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document uses the short term \"distro,\" because the term "
"\"distribution\" has another meaning in Python packaging contexts: a source "
"or binary distribution package of a single piece of Python language "
"software, that is, in the sense of ``setuptools.dist.Distribution`` or "
"\"sdist\". To avoid confusion, this document does not use the plain term "
"\"distribution\" at all. In the Python packaging sense, it uses the full "
"phrase \"distribution package\" or just \"package\" (see below)."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The provider of a distro - the team or company that collects and publishes "
"the software and makes any needed modifications - is its **distributor**."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "package"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A unit of software that can be installed and used within Python. That is, "
"this refers to what Python-specific packaging tools tend to call a "
":term:`distribution package` or simply a \"distribution\"; the colloquial "
"abbreviation \"package\" is used in the sense of the Python Package Index."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document does not use \"package\" in the sense of an importable name "
"that contains Python modules, though in many cases, a distribution package "
"consists of a single importable package of the same name."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document generally does not use the term \"package\" to refer to units "
"of installation by a distro's package manager (such as ``.deb`` or ``.rpm`` "
"files). When needed, it uses phrasing such as \"a distro's package.\" "
"(Again, in many cases, a Python package is shipped inside a distro's package"
" named something like ``python-`` plus the Python package name.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python-specific package manager"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A tool for installing, upgrading, and/or removing Python packages in a "
"manner that conforms to Python packaging standards. The most popular Python-"
"specific package manager is pip_; other examples include the old `Easy "
"Install command <easy-install_>`_ as well as direct usage of a ``setup.py`` "
"command."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"(Note that the ``easy_install`` command was removed in setuptools version "
"52, released 23 January 2021.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"(Conda_ is a bit of a special case, as the ``conda`` command can install "
"much more than just Python packages, making it more like a distro package "
"manager in some senses. Since the ``conda`` command generally only operates "
"on Conda-created environments, most of the concerns in this document do not "
"apply to ``conda`` when acting as a Python-specific package manager.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "distro package manager"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A tool for installing, upgrading, and/or removing a distro's packages in an "
"installed instance of that distro, which is capable of installing Python "
"packages as well as non-Python packages, and therefore generally has its own"
" database of installed software unrelated to the :ref:`database of installed"
" distributions <recording-installed-packages>`. Examples include ``apt``, "
"``dpkg``, ``dnf``, ``rpm``, ``pacman``, and ``brew``. The salient feature is"
" that if a package was installed by a distro package manager, removing or "
"upgrading it in a way that would satisfy a Python-specific package manager "
"will generally leave a distro package manager in an inconsistent state."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document also uses phrases like \"external package manager\" or "
"\"system's package manager\" to refer to a distro package manager in certain"
" contexts."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "shadow"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To shadow an installed Python package is to cause some other package to be "
"preferred for imports without removing any files from the shadowed package. "
"This requires multiple entries on ``sys.path``: if package A 2.0 installs "
"module ``a.py`` in one ``sys.path`` entry, and package A 1.0 installs module"
" ``a.py`` in a later ``sys.path`` entry, then ``import a`` returns the "
"module from the former, and we say that A 2.0 shadows A 1.0."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This specification is twofold."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"First, it describes **a way for distributors of a Python interpreter to mark"
" that interpreter as having its packages managed by means external to "
"Python**, such that Python-specific tools like pip should not change the "
"installed packages in the interpreter's global ``sys.path`` in any way (add,"
" upgrade/downgrade, or remove) unless specifically overridden. It also "
"provides a means for the distributor to indicate how to use a virtual "
"environment as an alternative."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is an opt-in mechanism: by default, the Python interpreter compiled "
"from upstream sources will not be so marked, and so running ``pip install`` "
"with a self-compiled interpreter, or with a distro that has not explicitly "
"marked its interpreter, will work as it always has worked."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Second, it sets the rule that when installing packages to an interpreter's "
"global context (either to an unmarked interpreter, or if overriding the "
"marking), **Python-specific package managers should modify or delete files "
"only within the directories of the sysconfig scheme in which they would "
"create files**. This permits a distributor of a Python interpreter to set up"
" two directories, one for its own managed packages, and one for unmanaged "
"packages installed by the end user, and ensure that installing unmanaged "
"packages will not delete (or overwrite) files owned by the external package "
"manager."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Marking an interpreter as using an external package manager"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:162
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Before a Python-specific package installer (that is, a tool such as pip - "
"not an external tool such as apt) installs a package into a certain Python "
"context, it should make the following checks by default:"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:167
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Is it running outside of a virtual environment? It can determine this by "
"whether ``sys.prefix == sys.base_prefix``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:170
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Is there an ``EXTERNALLY-MANAGED`` file in the directory identified by "
"``sysconfig.get_path(\"stdlib\", sysconfig.get_default_scheme())``?"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:173
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If both of these conditions are true, the installer should exit with an "
"error message indicating that package installation into this Python "
"interpreter's directory are disabled outside of a virtual environment."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:177
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The installer should have a way for the user to override these rules, such "
"as a command-line flag ``--break-system-packages``. This option should not "
"be enabled by default and should carry some connotation that its use is "
"risky."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:182
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``EXTERNALLY-MANAGED`` file is an INI-style metadata file intended to be"
" parsable by the standard library configparser_ module. If the file can be "
"parsed by ``configparser.ConfigParser(interpolation=None)`` using the UTF-8 "
"encoding, and it contains a section ``[externally-managed]``, then the "
"installer should look for an error message specified in the file and output "
"it as part of its error. If the first element of the tuple returned by "
"``locale.getlocale(locale.LC_MESSAGES)``, i.e., the language code, is not "
"``None``, it should look for the error message as the value of a key named "
"``Error-`` followed by the language code. If that key does not exist, and if"
" the language code contains underscore or hyphen, it should look for a key "
"named ``Error-`` followed by the portion of the language code before the "
"underscore or hyphen. If it cannot find either of those, or if the language "
"code is ``None``, it should look for a key simply named ``Error``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:200
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the installer cannot find an error message in the file (either because "
"the file cannot be parsed or because no suitable error key exists), then the"
" installer should just use a pre-defined error message of its own, which "
"should suggest that the user create a virtual environment to install "
"packages."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:206
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Software distributors who have a non-Python-specific package manager that "
"manages libraries in the ``sys.path`` of their Python package should, in "
"general, ship an ``EXTERNALLY-MANAGED`` file in their standard library "
"directory. For instance, Debian may ship a file in "
"``/usr/lib/python3.9/EXTERNALLY-MANAGED`` consisting of something like"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"which provides useful and distro-relevant information to a user trying to "
"install a package. Optionally, translations can be provided in the same "
"file:"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:240
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In certain contexts, such as single-application container images that aren't"
" updated after creation, a distributor may choose not to ship an "
"``EXTERNALLY-MANAGED`` file, so that users can install whatever they like "
"(as they can today) without having to manually override this rule."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:247
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Writing to only the target ``sysconfig`` scheme"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:249
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Usually, a Python package installer installs to directories in a scheme "
"returned by the ``sysconfig`` standard library package. Ordinarily, this is "
"the scheme returned by ``sysconfig.get_default_scheme()``, but based on "
"configuration (e.g. ``pip install --user``), it may use a different scheme."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:255
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Whenever the installer is installing to a ``sysconfig`` scheme, this "
"specification declares that the installer should never modify or delete "
"files outside of that scheme. For instance, if it's upgrading a package, and"
" the package is already installed in a directory outside that scheme "
"(perhaps in a directory from another scheme), it should leave the existing "
"files alone."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:262
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the installer does end up shadowing an existing installation during an "
"upgrade, we recommend that it produces a warning at the end of its run."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:266
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the installer is installing to a location outside of a ``sysconfig`` "
"scheme (e.g., ``pip install --target``), then this subsection does not "
"apply."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Recommendations for distros"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:273
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section is non-normative. It provides best practices we believe distros"
" should follow unless they have a specific reason otherwise."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:277
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Mark the installation as externally managed"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:279
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Distros should create an ``EXTERNALLY-MANAGED`` file in their ``stdlib`` "
"directory."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:283
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Guide users towards virtual environments"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:285
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The file should contain a useful and distro-relevant error message "
"indicating both how to install system-wide packages via the distro's package"
" manager and how to set up a virtual environment. If your distro is often "
"used by users in a state where the ``python3`` command is available (and "
"especially where ``pip`` or ``get-pip`` is available) but ``python3 -m "
"venv`` does not work, the message should indicate clearly how to make "
"``python3 -m venv`` work properly."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:293
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Consider packaging pipx_, a tool for installing Python-language "
"applications, and suggesting it in the error. pipx automatically creates a "
"virtual environment for that application alone, which is a much better "
"default for end users who want to install some Python-language software "
"(which isn't available in the distro) but are not themselves Python users. "
"Packaging pipx in the distro avoids the irony of instructing users to ``pip "
"install --user --break-system-packages pipx`` to *avoid* breaking system "
"packages. Consider arranging things so your distro's package / environment "
"for Python for end users (e.g., ``python3`` on Fedora or ``python3-full`` on"
" Debian) depends on pipx."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:308
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Keep the marker file in container images"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:310
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Distros that produce official images for single-application containers "
"(e.g., Docker container images) should keep the ``EXTERNALLY-MANAGED`` file,"
" preferably in a way that makes it not go away if a user of that image "
"installs package updates inside their image (think ``RUN apt-get dist-"
"upgrade``)."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:317
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Create separate distro and local directories"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:319
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Distros should place two separate paths on the system interpreter's "
"``sys.path``, one for distro-installed packages and one for packages "
"installed by the local system administrator, and configure "
"``sysconfig.get_default_scheme()`` to point at the latter path. This ensures"
" that tools like pip will not modify distro-installed packages. The path for"
" the local system administrator should come before the distro path on "
"``sys.path`` so that local installs take preference over distro packages."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:328
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, Fedora and Debian (and their derivatives) both implement this "
"split by using ``/usr/local`` for locally-installed packages and ``/usr`` "
"for distro-installed packages. Fedora uses ``/usr/local/lib/python3.x/site-"
"packages`` vs. ``/usr/lib/python3.x/site-packages``. (Debian uses "
"``/usr/local/lib/python3/dist-packages`` vs. ``/usr/lib/python3/dist-"
"packages`` as an additional layer of separation from a locally-compiled "
"Python interpreter: if you build and install upstream CPython in "
"``/usr/local/bin``, it will look at ``/usr/local/lib/python3/site-"
"packages``, and Debian wishes to make sure that packages installed via the "
"locally-built interpreter don't show up on ``sys.path`` for the distro "
"interpreter.)"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:341
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that the ``/usr/local`` vs. ``/usr`` split is analogous to how the "
"``PATH`` environment variable typically includes ``/usr/local/bin:/usr/bin``"
" and non-distro software installs to ``/usr/local`` by default. This split "
"is `recommended by the Filesystem Hierarchy Standard`__."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:349
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are two ways you could do this. One is, if you are building and "
"packaging Python libraries directly (e.g., your packaging helpers unpack a "
"wheel or call ``setup.py install``), arrange for those tools to use a "
"directory that is not in a ``sysconfig`` scheme but is still on "
"``sys.path``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:355
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The other is to arrange for the default ``sysconfig`` scheme to change when "
"running inside a package build versus when running on an installed system. "
"The ``sysconfig`` customization hooks from bpo-43976_ should make this easy "
"(once accepted and implemented): make your packaging tool set an environment"
" variable or some other detectable configuration, and define a "
"``get_preferred_schemes`` function to return a different scheme when called "
"from inside a package build. Then you can use ``pip install`` as part of "
"your distro packaging."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:367
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"We propose adding a ``--scheme=...`` option to instruct pip to run against a"
" specific scheme. (See `Implementation Notes`_ below for how pip currently "
"determines schemes.) Once that's available, for local testing and possibly "
"for actual packaging, you would be able to run something like ``pip install "
"--scheme=posix_distro`` to explicitly install a package into your distro's "
"location (bypassing ``get_preferred_schemes``). One could also, if "
"absolutely needed, use ``pip uninstall --scheme=posix_distro`` to use pip to"
" remove packages from the system-managed directory."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:377
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To install packages with pip, you would also need to either suppress the "
"``EXTERNALLY-MANAGED`` marker file to allow pip to run or to override it on "
"the command line. You may want to use the same means for suppressing the "
"marker file in build chroots as you do in container images."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:383
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The advantage of setting these up to be automatic (suppressing the marker "
"file in your build environment and having ``get_preferred_schemes`` "
"automatically return your distro's scheme) is that an unadorned ``pip "
"install`` will work inside a package build, which generally means that an "
"unmodified upstream build script that happens to internally call ``pip "
"install`` will do the right thing. You can, of course, just ensure that your"
" packaging process always calls ``pip install --scheme=posix_distro --break-"
"system-packages``, which would work too."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:393
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The best approach here depends a lot on your distro's conventions and "
"mechanisms for packaging."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:396
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Similarly, the ``sysconfig`` paths that are not for importable Python code -"
" that is, ``include``, ``platinclude``, ``scripts``, and ``data`` - should "
"also have two variants, one for use by distro-packaged software and one for "
"use for locally-installed software, and the distro should be set up such "
"that both are usable. For instance, a typical FHS-compliant distro will use "
"``/usr/local/include`` for the default scheme's ``include`` and "
"``/usr/include`` for distro-packaged headers and place both on the "
"compiler's search path, and it will use ``/usr/local/bin`` for the default "
"scheme's ``scripts`` and ``/usr/bin`` for distro-packaged entry points and "
"place both on ``$PATH``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:410
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Implementation Notes"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:412
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section is non-normative and contains notes relevant to both the "
"specification and potential implementations."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:415
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Currently (as of May 2021), pip does not directly expose a way to choose a "
"target ``sysconfig`` scheme, but it has three ways of looking up schemes "
"when installing:"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:422
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pip install``"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:420
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Calls ``sysconfig.get_default_scheme()``, which is usually (in upstream "
"CPython and most current distros) the same as "
"``get_preferred_scheme('prefix')``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:425
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pip install --prefix=/some/path``"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:425
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Calls ``sysconfig.get_preferred_scheme('prefix')``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:428
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pip install --user``"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:428
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Calls ``sysconfig.get_preferred_scheme('user')``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:430
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Finally, ``pip install --target=/some/path`` writes directly to "
"``/some/path`` without looking up any schemes."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:433
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Debian currently carries a `patch to change the default install location "
"inside a virtual environment`__, using a few heuristics (including checking "
"for the ``VIRTUAL_ENV`` environment variable), largely so that the directory"
" used in a virtual environment remains ``site-packages`` and not ``dist-"
"packages``. This does not particularly affect this proposal, because the "
"implementation of that patch does not actually change the default "
"``sysconfig`` scheme, and notably does not change the result of "
"``sysconfig.get_path(\"stdlib\")``."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:445
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Fedora currently carries a `patch to change the default install location "
"when not running inside rpmbuild`__, which they use to implement the two-"
"system-wide-directories approach. This is conceptually the sort of hook "
"envisioned by bpo-43976_, except implemented as a code patch to "
"``distutils`` instead of as a changed ``sysconfig`` scheme."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:454
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The implementation of ``is_virtual_environment`` above, as well as the logic"
" to load the ``EXTERNALLY-MANAGED`` file and find the error message from it,"
" may as well get added to the standard library (``sys`` and ``sysconfig``, "
"respectively), to centralize their implementations, but they don't need to "
"be added yet."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:464
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Copyright"
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:466
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document is placed in the public domain or under the CC0-1.0-Universal "
"license, whichever is more permissive."
msgstr ""

#: ../source/specifications/externally-managed-environments.rst:474
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "June 2022: This specification was approved through :pep:`668`."
msgstr ""

#: ../source/specifications/index.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "PyPA specifications"
msgstr ""

#: ../source/specifications/index.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is a list of currently active interoperability specifications "
"maintained by the Python Packaging Authority. The process for updating these"
" standards, and for proposing new ones, is documented on `pypa.io "
"<https://www.pypa.io/en/latest/specifications/>`__."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Index hosted attestations"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This specification was originally defined in :pep:`740`."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:12
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":pep:`740` includes changes to the HTML and JSON index APIs. These changes "
"are documented in the :ref:`simple-repository-api` under :ref:`simple-"
"repository-api-base` and :ref:`json-serialization`."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Upload endpoint changes"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The \"legacy\" upload API is not standardized. See `PyPI's Upload API "
"documentation <https://docs.pypi.org/api/upload/>`_ for how attestations are"
" uploaded."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Attestation objects"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An attestation object is a JSON object with several required keys; "
"applications or signers may include additional keys so long as all "
"explicitly listed keys are provided. The required layout of an attestation "
"object is provided as pseudocode below."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A full data model for each object in ``transparency_entries`` is provided in"
" :ref:`appendix`. Attestation objects **SHOULD** include one or more "
"transparency log entries, and **MAY** include additional keys for other "
"sources of signed time (such as an :rfc:`3161` Time Stamping Authority or a "
"`Roughtime <https://blog.cloudflare.com/roughtime>`__ server)."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Attestation objects are versioned; this PEP specifies version 1. Each "
"version is tied to a single cryptographic suite to minimize unnecessary "
"cryptographic agility. In version 1, the suite is as follows:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:98
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Certificates are specified as X.509 certificates, and comply with the "
"profile in :rfc:`5280`."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The message signature algorithm is ECDSA, with the P-256 curve for public "
"keys and SHA-256 as the cryptographic digest function."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Future PEPs may change this suite (and the overall shape of the attestation "
"object) by selecting a new version number."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Attestation statement and signature generation"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The *attestation statement* is the actual claim that is cryptographically "
"signed over within the attestation object (i.e., the "
"``envelope.statement``)."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The attestation statement is encoded as a `v1 in-toto Statement object "
"<https://github.com/in-"
"toto/attestation/blob/v1.0/spec/v1.0/statement.md>`__, in JSON form. When "
"serialized the statement is treated as an opaque binary blob, avoiding the "
"need for canonicalization."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to being a v1 in-toto Statement, the attestation statement is "
"constrained in the following ways:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The in-toto ``subject`` **MUST** contain only a single subject."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``subject[0].name`` is the distribution's filename, which **MUST** be a "
"valid :ref:`source distribution <source-distribution-format>` or :ref:`wheel"
" distribution <binary-distribution-format>` filename."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``subject[0].digest`` **MUST** contain a SHA-256 digest. Other digests "
"**MAY** be present. The digests **MUST** be represented as hexadecimal "
"strings."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The following ``predicateType`` values are supported:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`SLSA Provenance <https://slsa.dev/provenance/v1>`__: "
"``https://slsa.dev/provenance/v1``"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:131
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`PyPI Publish Attestation "
"<https://docs.pypi.org/attestations/publish/v1>`__: "
"``https://docs.pypi.org/attestations/publish/v1``"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The signature over this statement is constructed using the `v1 DSSE "
"signature protocol <https://github.com/secure-systems-"
"lab/dsse/blob/v1.0.0/protocol.md>`__, with a ``PAYLOAD_TYPE`` of "
"``application/vnd.in-toto+json`` and a ``PAYLOAD_BODY`` of the JSON-encoded "
"statement above. No other ``PAYLOAD_TYPE`` is permitted."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:141
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Provenance objects"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The index will serve uploaded attestations along with metadata that can "
"assist in verifying them in the form of JSON serialized objects."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:146
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These *provenance objects* will be available via both the Simple Index and "
"JSON-based Simple API as described above, and will have the following "
"layout:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:169
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "or, as pseudocode:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:217
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``version`` is ``1``. Like attestation objects, provenance objects are "
"versioned, and this PEP only defines version ``1``."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:219
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``attestation_bundles`` is a **required** JSON array, containing one or more"
" \"bundles\" of attestations. Each bundle corresponds to a signing identity "
"(such as a Trusted Publishing identity), and contains one or more "
"attestation objects."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:224
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As noted in the ``Publisher`` model, each ``AttestationBundle.publisher`` "
"object is specific to its Trusted Publisher but must include at minimum:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:228
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A ``kind`` key, which **MUST** be a JSON string that uniquely identifies the"
" kind of Trusted Publisher."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A ``claims`` key, which **MUST** be a JSON object containing any context-"
"specific claims retained by the index during Trusted Publisher "
"authentication."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:233
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "All other keys in the publisher object are publisher-specific."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:235
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each array of attestation objects is a superset of the ``attestations`` "
"array supplied by the uploaded through the ``attestations`` field at upload "
"time, as described in :ref:`upload-endpoint` and :ref:`changes-to-"
"provenance-objects`."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:243
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Changes to provenance objects"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:245
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Provenance objects are *not* immutable, and may change over time. Reasons "
"for changes to the provenance object include but are not limited to:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Addition of new attestations for a pre-existing signing identity: the index "
"**MAY** choose to allow additional attestations by pre-existing signing "
"identities, such as newer attestation versions for already uploaded files."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:253
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Addition of new signing identities and associated attestations: the index "
"**MAY** choose to support attestations from sources other than the file's "
"uploader, such as third-party auditors or the index itself. These "
"attestations may be performed asynchronously, requiring the index to insert "
"them into the provenance object *post facto*."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:262
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Attestation verification"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:264
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Verifying an attestation object against a distribution file requires "
"verification of each of the following:"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:267
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``version`` is ``1``. The verifier **MUST** reject any other version."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:268
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``verification_material.certificate`` is a valid signing certificate, as "
"issued by an *a priori* trusted authority (such as a root of trust already "
"present within the verifying client)."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``verification_material.certificate`` identifies an appropriate signing "
"subject, such as the machine identity of the Trusted Publisher that "
"published the package."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:274
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``envelope.statement`` is a valid in-toto v1 Statement, with a subject and "
"digest that **MUST** match the distribution's filename and contents. For the"
" distribution's filename, matching **MUST** be performed by parsing using "
"the appropriate source distribution or wheel filename format, as the "
"statement's subject may be equivalent but normalized."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:279
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``envelope.signature`` is a valid signature for ``envelope.statement`` "
"corresponding to ``verification_material.certificate``, as reconstituted via"
" the `v1 DSSE signature protocol <https://github.com/secure-systems-"
"lab/dsse/blob/v1.0.0/protocol.md>`__."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:284
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to the above required steps, a verifier **MAY** additionally "
"verify ``verification_material.transparency_entries`` on a policy basis, "
"e.g. requiring at least one transparency log entry or a threshold of "
"entries. When verifying transparency entries, the verifier **MUST** confirm "
"that the inclusion time for each entry lies within the signing certificate's"
" validity period."
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:293
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Appendix: Data models for Transparency Log Entries"
msgstr ""

#: ../source/specifications/index-hosted-attestations.rst:295
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This appendix contains pseudocoded data models for transparency log entries "
"in attestation objects. Each transparency log entry serves as a source of "
"signed inclusion time, and can be verified either online or offline."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Inline script metadata"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification defines a metadata format that can be embedded in single-"
"file Python scripts to assist launchers, IDEs and other external tools which"
" may need to interact with such scripts."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification defines a metadata comment block format (loosely inspired"
" by `reStructuredText Directives`__)."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Any Python script may have top-level comment blocks that MUST start with the"
" line ``# /// TYPE`` where ``TYPE`` determines how to process the content. "
"That is: a single ``#``, followed by a single space, followed by three "
"forward slashes, followed by a single space, followed by the type of "
"metadata. Block MUST end with the line ``# ///``. That is: a single ``#``, "
"followed by a single space, followed by three forward slashes. The ``TYPE`` "
"MUST only consist of ASCII letters, numbers and hyphens."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Every line between these two lines (``# /// TYPE`` and ``# ///``) MUST be a "
"comment starting with ``#``. If there are characters after the ``#`` then "
"the first character MUST be a space. The embedded content is formed by "
"taking away the first two characters of each line if the second character is"
" a space, otherwise just the first character (which means the line consists "
"of only a single ``#``)."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Precedence for an ending line ``# ///`` is given when the next line is not a"
" valid embedded content line as described above. For example, the following "
"is a single fully valid block:"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A starting line MUST NOT be placed between another starting line and its "
"ending line. In such cases tools MAY produce an error. Unclosed blocks MUST "
"be ignored."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When there are multiple comment blocks of the same ``TYPE`` defined, tools "
"MUST produce an error."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools reading embedded metadata MAY respect the standard Python encoding "
"declaration. If they choose not to do so, they MUST process the file as "
"UTF-8."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is the canonical regular expression that MAY be used to parse the "
"metadata:"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:67
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In circumstances where there is a discrepancy between the text specification"
" and the regular expression, the text specification takes precedence."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:70
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools MUST NOT read from metadata blocks with types that have not been "
"standardized by this specification."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "script type"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:76
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The first type of metadata block is named ``script``, which contains script "
"metadata (dependency data and tool configuration)."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:79
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document MAY include the top-level fields ``dependencies`` and "
"``requires-python``, and MAY optionally include a ``[tool]`` table."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[tool]`` table MAY be used by any tool, script runner or otherwise, to"
" configure behavior. It has the same semantics as the :ref:`[tool] table in "
"pyproject.toml <pyproject-tool-table>`."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The top-level fields are:"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``dependencies``: A list of strings that specifies the runtime dependencies "
"of the script. Each entry MUST be a valid :ref:`dependency specifier "
"<dependency-specifiers>`."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``requires-python``: A string that specifies the Python version(s) with "
"which the script is compatible. The value of this field MUST be a valid "
":ref:`version specifier <version-specifiers>`."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Script runners MUST error if the specified ``dependencies`` cannot be "
"provided. Script runners SHOULD error if no version of Python that satisfies"
" the specified ``requires-python`` can be provided."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:100
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Example"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The following is an example of a script with embedded metadata:"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following is an example of how to read the metadata on Python 3.11 or "
"higher."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Often tools will edit dependencies like package managers or dependency "
"update automation in CI. The following is a crude example of modifying the "
"content using the ``tomlkit`` library__."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:182
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that this example used a library that preserves TOML formatting. This "
"is not a requirement for editing by any means but rather is a \"nice to "
"have\" feature."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:186
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following is an example of how to read a stream of arbitrary metadata "
"blocks."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:205
#: ../source/specifications/simple-repository-api.rst:829
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Recommendations"
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:207
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools that support managing different versions of Python should attempt to "
"use the highest available version of Python that is compatible with the "
"script's ``requires-python`` metadata, if defined."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:215
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"October 2023: This specification was conditionally approved through "
":pep:`723`."
msgstr ""

#: ../source/specifications/inline-script-metadata.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"January 2024: Through amendments to :pep:`723`, the ``pyproject`` metadata "
"block type was renamed to ``script``, and the ``[run]`` table was dropped, "
"making the ``dependencies`` and ``requires-python`` keys top-level. "
"Additionally, the specification is no longer provisional."
msgstr ""

#: ../source/specifications/name-normalization.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Names and normalization"
msgstr ""

#: ../source/specifications/name-normalization.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification defines the format that names for packages and extras are"
" required to follow. It also describes how to normalize them, which should "
"be done before lookups and comparisons."
msgstr ""

#: ../source/specifications/name-normalization.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Name format"
msgstr ""

#: ../source/specifications/name-normalization.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A valid name consists only of ASCII letters and numbers, period, underscore "
"and hyphen. It must start and end with a letter or number. This means that "
"valid project names are limited to those which match the following regex "
"(run with :py:data:`re.IGNORECASE`)::"
msgstr ""

#: ../source/specifications/name-normalization.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Name normalization"
msgstr ""

#: ../source/specifications/name-normalization.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The name should be lowercased with all runs of the characters ``.``, ``-``, "
"or ``_`` replaced with a single ``-`` character. This can be implemented in "
"Python with the re module:"
msgstr ""

#: ../source/specifications/name-normalization.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This means that the following names are all equivalent:"
msgstr ""

#: ../source/specifications/name-normalization.rst:41
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``friendly-bard`` (normalized form)"
msgstr ""

#: ../source/specifications/name-normalization.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Friendly-Bard``"
msgstr ""

#: ../source/specifications/name-normalization.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``FRIENDLY-BARD``"
msgstr ""

#: ../source/specifications/name-normalization.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``friendly.bard``"
msgstr ""

#: ../source/specifications/name-normalization.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``friendly_bard``"
msgstr ""

#: ../source/specifications/name-normalization.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``friendly--bard``"
msgstr ""

#: ../source/specifications/name-normalization.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``FrIeNdLy-._.-bArD`` (a *terrible* way to write a name, but it is valid)"
msgstr ""

#: ../source/specifications/name-normalization.rst:52
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"September 2015: The specification of name normalized was approved through "
":pep:`503 <503#normalized-names>`."
msgstr ""

#: ../source/specifications/name-normalization.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"November 2015: The specification of valid names was approved through "
":pep:`508 <508#names>`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Platform compatibility tags"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Platform compatibility tags allow build tools to mark distributions as being"
" compatible with specific platforms, and allows installers to understand "
"which distributions are compatible with the system they are running on."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:16
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The tag format is ``{python tag}-{abi tag}-{platform tag}``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "python tag"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "'py27', 'cp33'"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "'cp32dmu', 'none'"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:23
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "'linux_x86_64', 'any'"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, the tag ``py27-none-any`` indicates compatibility with Python "
"2.7 (any Python 2.7 implementation) with no abi requirement, on any "
"platform."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``wheel`` built package format includes these tags in its filenames, of "
"the form ``{distribution}-{version}(-{build tag})?-{python "
"tag}-{abitag}-{platform tag}.whl``. Other package formats may have their own"
" conventions."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Any potential spaces in any tag should be replaced with ``_``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python Tag"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The Python tag indicates the implementation and version required by a "
"distribution.  Major implementations have abbreviated codes, initially:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "py: Generic Python (does not require implementation-specific features)"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cp: CPython"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "ip: IronPython"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "pp: PyPy"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "jy: Jython"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Other Python implementations should use :py:data:`sys.implementation.name "
"<sys.implementation>`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:50
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The version is ``py_version_nodot``.  CPython gets away with no dot, but if "
"one is needed the underscore ``_`` is used instead.  PyPy should probably "
"use its own versions here ``pp18``, ``pp19``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The version can be just the major version ``2`` or ``3`` ``py2``, ``py3`` "
"for many pure-Python distributions."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Importantly, major-version-only tags like ``py2`` and ``py3`` are not "
"shorthand for ``py20`` and ``py30``.  Instead, these tags mean the packager "
"intentionally released a cross-version-compatible distribution."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A single-source Python 2/3 compatible distribution can use the compound tag "
"``py2.py3``.  See `Compressed Tag Sets`_, below."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "ABI Tag"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ABI tag indicates which Python ABI is required by any included extension"
" modules.  For implementation-specific ABIs, the implementation is "
"abbreviated in the same way as the Python Tag, e.g. ``cp33d`` would be the "
"CPython 3.3 ABI with debugging."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The CPython stable ABI is ``abi3`` as in the shared library suffix."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Implementations with a very unstable ABI may use the first 6 bytes (as 8 "
"base64-encoded characters) of the SHA-256 hash of their source code revision"
" and compiler flags, etc, but will probably not have a great need to "
"distribute binary distributions. Each implementation's community may decide "
"how to best use the ABI tag."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Platform Tag"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Basic platform tags"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In its simplest form, the platform tag is "
":py:func:`sysconfig.get_platform()` with all hyphens ``-`` and periods ``.``"
" replaced with underscore ``_``. Until the removal of :ref:`distutils` in "
"Python 3.12, this was ``distutils.util.get_platform()``. For example:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "win32"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:94
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "linux_i386"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "linux_x86_64"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``manylinux``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The simple scheme above is insufficient for public distribution of wheel "
"files to Linux platforms, due to the large ecosystem of Linux platforms and "
"subtle differences between them."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Instead, for those platforms, the ``manylinux`` standard represents a common"
" subset of Linux platforms, and allows building wheels tagged with the "
"``manylinux`` platform tag which can be used across most common Linux "
"distributions."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The current standard is the future-proof ``manylinux_x_y`` standard. It "
"defines tags of the form ``manylinux_x_y_arch``, where ``x`` and ``y`` are "
"glibc major and minor versions supported (e.g. ``manylinux_2_24_xxx`` should"
" work on any distro using glibc 2.24+), and ``arch`` is the architecture, "
"matching the value of :py:func:`sysconfig.get_platform()` on the system as "
"in the \"simple\" form above."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following older tags are still supported for backward compatibility:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``manylinux1`` supports glibc 2.5 on ``x86_64`` and ``i686`` architectures."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``manylinux2010`` supports glibc 2.12 on ``x86_64`` and ``i686``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``manylinux2014`` supports glibc 2.17 on ``x86_64``, ``i686``, ``aarch64``, "
"``armv7l``, ``ppc64``, ``ppc64le``, and ``s390x``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In general, distributions built for older versions of the specification are "
"forwards-compatible (meaning that ``manylinux1`` distributions should "
"continue to work on modern systems) but not backwards-compatible (meaning "
"that ``manylinux2010`` distributions are not expected to work on platforms "
"that existed before 2010)."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:131
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Package maintainers should attempt to target the most compatible "
"specification possible, with the caveat that the provided build environment "
"for ``manylinux1`` and ``manylinux2010`` have reached end-of-life meaning "
"that these images will no longer receive security updates."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following table shows the minimum versions of relevant projects to "
"support the various ``manylinux`` standards:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Tool"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:140
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``manylinux1``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:140
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``manylinux2010``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:140
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``manylinux2014``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:140
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``manylinux_x_y``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``>=8.1.0``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``>=19.0``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``>=19.3``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``>=20.3``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:143
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "auditwheel"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``>=1.0.0``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``>=2.0.0``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``>=3.0.0``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``>=3.3.0`` [#]_"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:146
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Only support for ``manylinux_2_24`` has been added in auditwheel 3.3.0"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``musllinux``"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:152
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``musllinux`` family of tags is similar to ``manylinux``, but for Linux "
"platforms that use the musl_ libc rather than glibc (a prime example being "
"Alpine Linux). The schema is ``musllinux_x_y_arch``, supporting musl ``x.y``"
" and higher on the architecture ``arch``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The musl version values can be obtained by executing the musl libc shared "
"library the Python interpreter is currently running on, and parsing the "
"output:"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:188
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are currently two possible ways to find the musl library’s location "
"that a Python interpreter is running on, either with the system ldd_ "
"command, or by parsing the ``PT_INTERP`` section’s value from the "
"executable’s ELF_ header."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:194
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Use"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The tags are used by installers to decide which built distribution (if any) "
"to download from a list of potential built distributions. The installer "
"maintains a list of (pyver, abi, arch) tuples that it will support.  If the "
"built distribution's tag is ``in`` the list, then it can be installed."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:202
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is recommended that installers try to choose the most feature complete "
"built distribution available (the one most specific to the installation "
"environment) by default before falling back to pure Python versions "
"published for older Python releases. Installers are also recommended to "
"provide a way to configure and re-order the list of allowed compatibility "
"tags; for example, a user might accept only the ``*-none-any`` tags to only "
"download built packages that advertise themselves as being pure Python."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:210
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Another desirable installer feature might be to include \"re-compile from "
"source if possible\" as more preferable than some of the compatible but "
"legacy pre-built options."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:214
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This example list is for an installer running under CPython 3.3 on a "
"linux_x86_64 system. It is in order from most-preferred (a distribution with"
" a compiled extension module, built for the current version of Python) to "
"least-preferred (a pure-Python distribution built with an older version of "
"Python):"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cp33-cp33m-linux_x86_64"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:221
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cp33-abi3-linux_x86_64"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:222
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cp3-abi3-linux_x86_64"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:223
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cp33-none-linux_x86_64*"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:224
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cp3-none-linux_x86_64*"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:225
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "py33-none-linux_x86_64*"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:226
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "py3-none-linux_x86_64*"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:227
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cp33-none-any"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:228
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "cp3-none-any"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "py33-none-any"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "py3-none-any"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:231
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "py32-none-any"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:232
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "py31-none-any"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:233
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "py30-none-any"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:235
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Built distributions may be platform specific for reasons other than C "
"extensions, such as by including a native executable invoked as a "
"subprocess."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:239
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Sometimes there will be more than one supported built distribution for a "
"particular version of a package.  For example, a packager could release a "
"package tagged ``cp33-abi3-linux_x86_64`` that contains an optional C "
"extension and the same distribution tagged ``py3-none-any`` that does not. "
"The index of the tag in the supported tags list breaks the tie, and the "
"package with the C extension is installed in preference to the package "
"without because that tag appears first in the list."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Compressed Tag Sets"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:250
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To allow for compact filenames of bdists that work with more than one "
"compatibility tag triple, each tag in a filename can instead be a "
"'.'-separated, sorted, set of tags.  For example, pip, a pure-Python package"
" that is written to run under Python 2 and 3 with the same source code, "
"could distribute a bdist with the tag ``py2.py3-none-any``. The full list of"
" simple tags is::"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:262
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A bdist format that implements this scheme should include the expanded tags "
"in bdist-specific metadata.  This compression scheme can generate large "
"numbers of unsupported tags and \"impossible\" tags that are supported by no"
" Python implementation e.g. \"cp33-cp31u-win64\", so use it sparingly."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:275
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "What tags are used by default?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools should use the most-preferred architecture dependent tag e.g. "
"``cp33-cp33m-win32`` or the most-preferred pure python tag e.g. ``py33-none-"
"any`` by default.  If the packager overrides the default it indicates that "
"they intended to provide cross-Python compatibility."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:285
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"What tag do I use if my distribution uses a feature exclusive to the newest "
"version of Python?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:278
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Compatibility tags aid installers in selecting the *most compatible* build "
"of a *single version* of a distribution. For example, when there is no "
"Python 3.3 compatible build of ``beaglevote-1.2.0`` (it uses a Python 3.4 "
"exclusive feature) it may still use the ``py3-none-any`` tag instead of the "
"``py34-none-any`` tag. A Python 3.3 user must combine other qualifiers, such"
" as a requirement for the older release ``beaglevote-1.1.0`` that does not "
"use the new feature, to get a compatible build."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:290
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Why isn't there a ``.`` in the Python version number?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:288
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"CPython has lasted 20+ years without a 3-digit major release. This should "
"continue for some time.  Other implementations may use _ as a delimiter, "
"since both - and . delimit the surrounding filename."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:296
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Why normalise hyphens and other non-alphanumeric characters to underscores?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:293
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To avoid conflicting with the ``.`` and ``-`` characters that separate "
"components of the filename, and for better compatibility with the widest "
"range of filesystem limitations for filenames (including being usable in URL"
" paths without quoting)."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:305
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Why not use special character <X> rather than ``.`` or ``-``?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:299
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Either because that character is inconvenient or potentially confusing in "
"some contexts (for example, ``+`` must be quoted in URLs, ``~`` is used to "
"denote the user's home directory in POSIX), or because the advantages "
"weren't sufficiently compelling to justify changing the existing reference "
"implementation for the wheel format defined in :pep:`427` (for example, "
"using ``,`` rather than ``.`` to separate components in a compressed tag)."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:310
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Who will maintain the registry of abbreviated implementations?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:308
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"New two-letter abbreviations can be requested on the python-dev mailing "
"list.  As a rule of thumb, abbreviations are reserved for the current 4 most"
" prominent implementations."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:315
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Does the compatibility tag go into METADATA or PKG-INFO?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:313
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"No.  The compatibility tag is part of the built distribution's metadata.  "
"METADATA / PKG-INFO should be valid for an entire distribution, not a single"
" build of that distribution."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:321
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Why didn't you mention my favorite Python implementation?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:318
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The abbreviated tags facilitate sharing compiled Python code in a public "
"index.  Your Python implementation can use this specification too, but with "
"longer tags. Recall that all \"pure Python\" built distributions just use "
"``py``."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:329
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Why is the ABI tag (the second tag) sometimes \"none\" in the reference "
"implementation?"
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:324
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Since Python 2 does not have an easy way to get to the SOABI (the concept "
"comes from newer versions of Python 3) the reference implementation at the "
"time of writing guesses \"none\".  Ideally it would detect \"py27(d|m|u)\" "
"analogous to newer versions of Python, but in the meantime \"none\" is a "
"good enough way to say \"don't know\"."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:334
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"February 2013: The original version of this specification was approved "
"through :pep:`425`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:336
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "January 2016: The ``manylinux1`` tag was approved through :pep:`513`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:337
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "April 2018: The ``manylinux2010`` tag was approved through :pep:`571`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:338
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "July 2019: The ``manylinux2014`` tag was approved through :pep:`599`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:339
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"November 2019: The ``manylinux_x_y`` perennial tag was approved through "
":pep:`600`."
msgstr ""

#: ../source/specifications/platform-compatibility-tags.rst:341
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "April 2021: The ``musllinux_x_y`` tag was approved through :pep:`656`."
msgstr ""

#: ../source/specifications/pypirc.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The :file:`.pypirc` file"
msgstr ""

#: ../source/specifications/pypirc.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A :file:`.pypirc` file allows you to define the configuration for "
":term:`package indexes <Package Index>` (referred to here as "
"\"repositories\"), so that you don't have to enter the URL, username, or "
"password whenever you upload a package with :ref:`twine` or :ref:`flit`."
msgstr ""

#: ../source/specifications/pypirc.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The format (originally defined by the :ref:`distutils` package) is:"
msgstr ""

#: ../source/specifications/pypirc.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``distutils`` section defines an ``index-servers`` field that lists the "
"name of all sections describing a repository."
msgstr ""

#: ../source/specifications/pypirc.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Each section describing a repository defines three fields:"
msgstr ""

#: ../source/specifications/pypirc.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``repository``: The URL of the repository."
msgstr ""

#: ../source/specifications/pypirc.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``username``: The registered username on the repository."
msgstr ""

#: ../source/specifications/pypirc.rst:39
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``password``: The password that will used to authenticate the username."
msgstr ""

#: ../source/specifications/pypirc.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Be aware that this stores your password in plain text. For better security, "
"consider an alternative like `keyring`_, setting environment variables, or "
"providing the password on the command line."
msgstr ""

#: ../source/specifications/pypirc.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Otherwise, set the permissions on :file:`.pypirc` so that only you can view "
"or modify it. For example, on Linux or macOS, run:"
msgstr ""

#: ../source/specifications/pypirc.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Common configurations"
msgstr ""

#: ../source/specifications/pypirc.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These examples apply to :ref:`twine`. Other projects (e.g. :ref:`flit`) also"
" use :file:`.pypirc`, but with different defaults. Please refer to each "
"project's documentation for more details and usage instructions."
msgstr ""

#: ../source/specifications/pypirc.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Twine's default configuration mimics a :file:`.pypirc` with repository "
"sections for PyPI and TestPyPI:"
msgstr ""

#: ../source/specifications/pypirc.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Twine will add additional configuration from :file:`$HOME/.pypirc`, the "
"command line, and environment variables to this default configuration."
msgstr ""

#: ../source/specifications/pypirc.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using a PyPI token"
msgstr ""

#: ../source/specifications/pypirc.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To set your `API token`_ for PyPI, you can create a :file:`$HOME/.pypirc` "
"similar to:"
msgstr ""

#: ../source/specifications/pypirc.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For :ref:`TestPyPI <using-test-pypi>`, add a ``[testpypi]`` section, using "
"the API token from your TestPyPI account."
msgstr ""

#: ../source/specifications/pypirc.rst:102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using another package index"
msgstr ""

#: ../source/specifications/pypirc.rst:104
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To configure an additional repository, you'll need to redefine the ``index-"
"servers`` field to include the repository name. Here is a complete example "
"of a :file:`$HOME/.pypirc` for PyPI, TestPyPI, and a private repository:"
msgstr ""

#: ../source/specifications/pypirc.rst:131
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Instead of using the ``password`` field, consider saving your API tokens and"
" passwords securely using `keyring`_ (which is installed by Twine):"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``pyproject.toml`` specification"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is a **technical, formal specification**. For a gentle, user-friendly "
"guide to ``pyproject.toml``, see :ref:`writing-pyproject-toml`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``pyproject.toml`` file acts as a configuration file for packaging-"
"related tools (as well as other tools)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification was originally defined in :pep:`518` and :pep:`621`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:19
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``pyproject.toml`` file is written in `TOML <https://toml.io>`_. Three "
"tables are currently specified, namely :ref:`[build-system] <pyproject-"
"build-system-table>`, :ref:`[project] <pyproject-project-table>` and "
":ref:`[tool] <pyproject-tool-table>`. Other tables are reserved for future "
"use (tool-specific configuration should use the ``[tool]`` table)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Declaring build system dependencies: the ``[build-system]`` table"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[build-system]`` table declares any Python level dependencies that "
"must be installed in order to run the project's build system successfully."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[build-system]`` table is used to store build-related data. Initially,"
" only one key of the table is valid and is mandatory for the table: "
"``requires``. This key must have a value of a list of strings representing "
"dependencies required to execute the build system. The strings in this list "
"follow the :ref:`version specifier specification <version-specifiers>`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An example ``[build-system]`` table for a project built with ``setuptools`` "
"is:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build tools are expected to use the example configuration file above as "
"their default semantics when a ``pyproject.toml`` file is not present."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools should not require the existence of the ``[build-system]`` table. A "
"``pyproject.toml`` file may be used to store configuration details other "
"than build-related data and thus lack a ``[build-system]`` table "
"legitimately. If the file exists but is lacking the ``[build-system]`` table"
" then the default values as specified above should be used. If the table is "
"specified but is missing required fields then the tool should consider it an"
" error."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To provide a type-specific representation of the resulting data from the "
"TOML file for illustrative purposes only, the following `JSON Schema "
"<https://json-schema.org>`_ would match the data format:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Declaring project metadata: the ``[project]`` table"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[project]`` table specifies the project's :ref:`core metadata <core-"
"metadata>`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are two kinds of metadata: *static* and *dynamic*. Static metadata is "
"specified in the ``pyproject.toml`` file directly and cannot be specified or"
" changed by a tool (this includes data *referred* to by the metadata, e.g. "
"the contents of files referenced by the metadata). Dynamic metadata is "
"listed via the ``dynamic`` key (defined later in this specification) and "
"represents metadata that a tool will later provide."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The lack of a ``[project]`` table implicitly means the :term:`build backend "
"<Build Backend>` will dynamically provide all keys."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The only keys required to be statically defined are:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The keys which are required but may be specified *either* statically or "
"listed as dynamic are:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All other keys are considered optional and may be specified statically, "
"listed as dynamic, or left unspecified."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The complete list of keys allowed in the ``[project]`` table are:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``authors``"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``dependencies``"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:136
#: ../source/specifications/pyproject-toml.rst:450
#, ignore-same, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``dynamic``"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``entry-points``"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``gui-scripts``"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``maintainers``"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:144
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``optional-dependencies``"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:155
#: ../source/specifications/pyproject-toml.rst:167
#: ../source/specifications/pyproject-toml.rst:180
#: ../source/specifications/pyproject-toml.rst:230
#: ../source/specifications/pyproject-toml.rst:240
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "TOML_ type: string"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:156
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Name <core-"
"metadata-name>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The name of the project."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:161
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools SHOULD :ref:`normalize <name-normalization>` this name, as soon as it "
"is read for internal consistency."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:168
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Version "
"<core-metadata-version>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The version of the project, as defined in the :ref:`Version specifier "
"specification <version-specifiers>`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Users SHOULD prefer to specify already-normalized versions."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:181
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Summary "
"<core-metadata-summary>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:184
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The summary description of the project in one line. Tools MAY error if this "
"includes multiple lines."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:191
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "TOML_ type: string or table"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Description "
"<core-metadata-description>` and :ref:`Description-Content-Type <core-"
"metadata-description-content-type>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The full description of the project (i.e. the README)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The key accepts either a string or a table. If it is a string then it is a "
"path relative to ``pyproject.toml`` to a text file containing the full "
"description. Tools MUST assume the file's encoding is UTF-8. If the file "
"path ends in a case-insensitive ``.md`` suffix, then tools MUST assume the "
"content-type is ``text/markdown``. If the file path ends in a case-"
"insensitive ``.rst``, then tools MUST assume the content-type is "
"``text/x-rst``. If a tool recognizes more extensions than this PEP, they MAY"
" infer the content-type for the user without specifying this key as "
"``dynamic``. For all unrecognized suffixes when a content-type is not "
"provided, tools MUST raise an error."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:209
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``readme`` key may also take a table. The ``file`` key has a string "
"value representing a path relative to ``pyproject.toml`` to a file "
"containing the full description. The ``text`` key has a string value which "
"is the full description. These keys are mutually-exclusive, thus tools MUST "
"raise an error if the metadata specifies both keys."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A table specified in the ``readme`` key also has a ``content-type`` key "
"which takes a string specifying the content-type of the full description. A "
"tool MUST raise an error if the metadata does not specify this key in the "
"table. If the metadata does not specify the ``charset`` parameter, then it "
"is assumed to be UTF-8. Tools MAY support other encodings if they choose to."
" Tools MAY support alternative content-types which they can transform to a "
"content-type as supported by the :ref:`core metadata <core-metadata>`. "
"Otherwise tools MUST raise an error for unsupported content-types."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:231
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Requires-"
"Python <core-metadata-requires-python>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:234
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The Python version requirements of the project."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License-"
"Expression <core-metadata-license-expression>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:244
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Text string that is a valid SPDX license expression as defined in "
":pep:`639`. Tools SHOULD validate and perform case normalization of the "
"expression."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:247
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The table subkeys of the ``license`` key are deprecated."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:253
#: ../source/specifications/pyproject-toml.rst:354
#: ../source/specifications/pyproject-toml.rst:364
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "TOML_ type: array of strings"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:254
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`License-"
"Expression <core-metadata-license-file>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:257
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An array specifying paths in the project source tree relative to the project"
" root directory (i.e. directory containing :file:`pyproject.toml` or legacy "
"project configuration files, e.g. :file:`setup.py`, :file:`setup.cfg`, etc.)"
" to file(s) containing licenses and other legal notices to be distributed "
"with the package."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:263
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The strings MUST contain valid glob patterns, as specified below:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:265
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Alphanumeric characters, underscores (``_``), hyphens (``-``) and dots "
"(``.``) MUST be matched verbatim."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:268
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Special glob characters: ``*``, ``?``, ``**`` and character ranges: ``[]`` "
"containing only the verbatim matched characters MUST be supported. Within "
"``[...]``, the hyphen indicates a locale-agnostic range (e.g. ``a-z``, order"
" based on Unicode code points). Hyphens at the start or end are matched "
"literally."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:274
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Path delimiters MUST be the forward slash character (``/``). Patterns are "
"relative to the directory containing :file:`pyproject.toml`, therefore the "
"leading slash character MUST NOT be used."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:278
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Parent directory indicators (``..``) MUST NOT be used."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:280
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Any characters or character sequences not covered by this specification are "
"invalid. Projects MUST NOT use such values. Tools consuming this field "
"SHOULD reject invalid values with an error."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:284
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools MUST assume that license file content is valid UTF-8 encoded text, and"
" SHOULD validate this and raise an error if it is not."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:287
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Literal paths (e.g. :file:`LICENSE`) are valid globs which means they can "
"also be defined."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:290
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Build tools:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:292
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"MUST treat each value as a glob pattern, and MUST raise an error if the "
"pattern contains invalid glob syntax."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:294
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"MUST include all files matched by a listed pattern in all distribution "
"archives."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:296
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"MUST list each matched file path under a License-File field in the Core "
"Metadata."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:298
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"MUST raise an error if any individual user-specified pattern does not match "
"at least one file."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:301
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the ``license-files`` key is present and is set to a value of an empty "
"array, then tools MUST NOT include any license files and MUST NOT raise an "
"error. If the ``license-files`` key is not defined, tools can decide how to "
"handle license files. For example they can choose not to include any files "
"or use their own logic to discover the appropriate files in the "
"distribution."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:312
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "TOML_ type: Array of inline tables with string keys and values"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:313
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Author "
"<core-metadata-author>`, :ref:`Author-email <core-metadata-author-email>`, "
":ref:`Maintainer <core-metadata-maintainer>`, and :ref:`Maintainer-email "
"<core-metadata-maintainer-email>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:319
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The people or organizations considered to be the \"authors\" of the project."
" The exact meaning is open to interpretation — it may list the original or "
"primary authors, current maintainers, or owners of the package."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:324
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The \"maintainers\" key is similar to \"authors\" in that its exact meaning "
"is open to interpretation."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:327
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These keys accept an array of tables with 2 keys: ``name`` and ``email``. "
"Both values must be strings. The ``name`` value MUST be a valid email name "
"(i.e. whatever can be put as a name, before an email, in :rfc:`822`) and not"
" contain commas. The ``email`` value MUST be a valid email address. Both "
"keys are optional, but at least one of the keys must be specified in the "
"table."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:334
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Using the data to fill in :ref:`core metadata <core-metadata>` is as "
"follows:"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:337
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If only ``name`` is provided, the value goes in :ref:`Author <core-metadata-"
"author>` or :ref:`Maintainer <core-metadata-maintainer>` as appropriate."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:340
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If only ``email`` is provided, the value goes in :ref:`Author-email <core-"
"metadata-author-email>` or :ref:`Maintainer-email <core-metadata-maintainer-"
"email>` as appropriate."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:344
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If both ``email`` and ``name`` are provided, the value goes in :ref:`Author-"
"email <core-metadata-author-email>` or :ref:`Maintainer-email <core-"
"metadata-maintainer-email>` as appropriate, with the format ``{name} "
"<{email}>``."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:348
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Multiple values should be separated by commas."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:355
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Keywords "
"<core-metadata-keywords>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:358
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The keywords for the project."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:365
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Classifier "
"<core-metadata-classifier>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:368
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Trove classifiers which apply to the project."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:370
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The use of ``License ::`` classifiers is deprecated and tools MAY issue a "
"warning informing users about that. Build tools MAY raise an error if both "
"the ``license`` string value (translating to ``License-Expression`` metadata"
" field) and the ``License ::`` classifiers are used."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:380
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "TOML_ type: table with keys and values of strings"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:381
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Project-URL "
"<core-metadata-project-url>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:384
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A table of URLs where the key is the URL label and the value is the URL "
"itself. See :ref:`well-known-project-urls` for normalization rules and well-"
"known rules when processing metadata for presentation."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:390
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Entry points"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:392
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"TOML_ type: table (``[project.scripts]``, ``[project.gui-scripts]``, and "
"``[project.entry-points]``)"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:394
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":ref:`Entry points specification <entry-points>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:396
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are three tables related to entry points. The ``[project.scripts]`` "
"table corresponds to the ``console_scripts`` group in the :ref:`entry points"
" specification <entry-points>`. The key of the table is the name of the "
"entry point and the value is the object reference."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:402
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[project.gui-scripts]`` table corresponds to the ``gui_scripts`` group"
" in the :ref:`entry points specification <entry-points>`. Its format is the "
"same as ``[project.scripts]``."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:406
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[project.entry-points]`` table is a collection of tables. Each sub-"
"table's name is an entry point group. The key and value semantics are the "
"same as ``[project.scripts]``. Users MUST NOT create nested sub-tables but "
"instead keep the entry point groups to only one level deep."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:412
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build back-ends MUST raise an error if the metadata defines a "
"``[project.entry-points.console_scripts]`` or ``[project.entry-"
"points.gui_scripts]`` table, as they would be ambiguous in the face of "
"``[project.scripts]`` and ``[project.gui-scripts]``, respectively."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:422
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"TOML_ type: Array of :pep:`508` strings (``dependencies``), and a table with"
" values of arrays of :pep:`508` strings (``optional-dependencies``)"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:425
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Requires-"
"Dist <core-metadata-requires-dist>` and :ref:`Provides-Extra <core-metadata-"
"provides-extra>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:429
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The (optional) dependencies of the project."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:431
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For ``dependencies``, it is a key whose value is an array of strings. Each "
"string represents a dependency of the project and MUST be formatted as a "
"valid :pep:`508` string. Each string maps directly to a :ref:`Requires-Dist "
"<core-metadata-requires-dist>` entry."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:436
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For ``optional-dependencies``, it is a table where each key specifies an "
"extra and whose value is an array of strings. The strings of the arrays must"
" be valid :pep:`508` strings. The keys MUST be valid values for "
":ref:`Provides-Extra <core-metadata-provides-extra>`. Each value in the "
"array thus becomes a corresponding :ref:`Requires-Dist <core-metadata-"
"requires-dist>` entry for the matching :ref:`Provides-Extra <core-metadata-"
"provides-extra>` metadata."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:452
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "TOML_ type: array of string"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:453
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Corresponding :ref:`core metadata <core-metadata>` field: :ref:`Dynamic "
"<core-metadata-dynamic>`"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:456
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Specifies which keys listed by this PEP were intentionally unspecified so "
"another tool can/will provide such metadata dynamically. This clearly "
"delineates which metadata is purposefully unspecified and expected to stay "
"unspecified compared to being provided via tooling later on."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:462
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A build back-end MUST honour statically-specified metadata (which means the "
"metadata did not list the key in ``dynamic``)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:464
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A build back-end MUST raise an error if the metadata specifies ``name`` in "
"``dynamic``."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:466
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the :ref:`core metadata <core-metadata>` specification lists a field as "
"\"Required\", then the metadata MUST specify the key statically or list it "
"in ``dynamic`` (build back-ends MUST raise an error otherwise, i.e. it "
"should not be possible for a required key to not be listed somehow in the "
"``[project]`` table)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:471
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the :ref:`core metadata <core-metadata>` specification lists a field as "
"\"Optional\", the metadata MAY list it in ``dynamic`` if the expectation is "
"a build back-end will provide the data for the key later."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:475
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build back-ends MUST raise an error if the metadata specifies a key "
"statically as well as being listed in ``dynamic``."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:477
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the metadata does not list a key in ``dynamic``, then a build back-end "
"CANNOT fill in the requisite metadata on behalf of the user (i.e. "
"``dynamic`` is the only way to allow a tool to fill in metadata and the user"
" must opt into the filling in)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:481
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build back-ends MUST raise an error if the metadata specifies a key in "
"``dynamic`` but the build back-end was unable to determine the data for it "
"(omitting the data, if determined to be the accurate value, is acceptable)."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:491
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Arbitrary tool configuration: the ``[tool]`` table"
msgstr ""

#: ../source/specifications/pyproject-toml.rst:493
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``[tool]`` table is where any tool related to your Python project, not "
"just build tools, can have users specify configuration data as long as they "
"use a sub-table within ``[tool]``, e.g. the `flit "
"<https://pypi.python.org/pypi/flit>`_ tool would store its configuration in "
"``[tool.flit]``."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:499
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A mechanism is needed to allocate names within the ``tool.*`` namespace, to "
"make sure that different projects do not attempt to use the same sub-table "
"and collide. Our rule is that a project can use the subtable ``tool.$NAME`` "
"if, and only if, they own the entry for ``$NAME`` in the Cheeseshop/PyPI."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:510
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"May 2016: The initial specification of the ``pyproject.toml`` file, with "
"just a ``[build-system]`` containing a ``requires`` key and a ``[tool]`` "
"table, was approved through :pep:`518`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:514
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"November 2020: The specification of the ``[project]`` table was approved "
"through :pep:`621`."
msgstr ""

#: ../source/specifications/pyproject-toml.rst:517
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"December 2024: The ``license`` key was redefined, the ``license-files`` key "
"was added and ``License::`` classifiers were deprecated through :pep:`639`."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Recording installed projects"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document specifies a common format of recording information about "
"Python :term:`projects <Project>` installed in an environment. A common "
"metadata format allows tools to query, manage or uninstall projects, "
"regardless of how they were installed."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Almost all information is optional. This allows tools outside the Python "
"ecosystem, such as Linux package managers, to integrate with Python tooling "
"as much as possible. For example, even if an installer cannot easily provide"
" a list of installed files in a format specific to Python tooling, it should"
" still record the name and version of the installed project."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each project installed from a distribution must, in addition to files, "
"install a \"``.dist-info``\" directory located alongside importable modules "
"and packages (commonly, the ``site-packages`` directory)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This directory is named as ``{name}-{version}.dist-info``, with ``name`` and"
" ``version`` fields corresponding to :ref:`core-metadata`. Both fields must "
"be normalized (see the :ref:`name normalization specification <name-"
"normalization>` and the :ref:`version normalization specification <version-"
"specifiers-normalization>`), and replace dash (``-``) characters with "
"underscore (``_``) characters, so the ``.dist-info`` directory always has "
"exactly one dash (``-``) character in its stem, separating the ``name`` and "
"``version`` fields."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Historically, tools have failed to replace dot characters or normalize case "
"in the ``name`` field, or not perform normalization in the ``version`` "
"field. Tools consuming ``.dist-info`` directories should expect those fields"
" to be unnormalized, and treat them as equivalent to their normalized "
"counterparts. New tools that write ``.dist-info`` directories MUST normalize"
" both ``name`` and ``version`` fields using the rules described above, and "
"existing tools are encouraged to start normalizing those fields."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:47
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``.dist-info`` directory's name is formatted to unambiguously represent "
"a distribution as a filesystem path. Tools presenting a distribution name to"
" a user should avoid using the normalized name, and instead present the "
"specified name (when needed prior to resolution to an installed package), or"
" read the respective fields in Core Metadata, since values listed there are "
"unescaped and accurately reflect the distribution. Libraries should provide "
"API for such tools to consume, so tools can have access to the unnormalized "
"name when displaying distribution information."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This ``.dist-info`` directory may contain the following files, described in "
"detail below:"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``METADATA``: contains project metadata"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:60
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``RECORD``: records the list of installed files."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``INSTALLER``: records the name of the tool used to install the project."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``entry_points.txt``: see :ref:`entry-points` for details"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:63
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``direct_url.json``: see :ref:`direct-url` for details"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``METADATA`` file is mandatory. All other files may be omitted at the "
"installing tool's discretion. Additional installer-specific files may be "
"present."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This :file:`.dist-info/` directory may contain the following directory, "
"described in detail below:"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:72
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ":file:`licenses/`: contains license files."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:76
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :ref:`binary-distribution-format` specification describes additional "
"files that may appear in the ``.dist-info`` directory of a :term:`Wheel`. "
"Such files may be copied to the ``.dist-info`` directory of an installed "
"project."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The previous versions of this specification also specified a ``REQUESTED`` "
"file. This file is now considered a tool-specific extension, but may be "
"standardized again in the future. See `PEP 376 "
"<https://www.python.org/dev/peps/pep-0376/#requested>`_ for its original "
"meaning."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The METADATA file"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:90
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``METADATA`` file contains metadata as described in the :ref:`core-"
"metadata` specification, version 1.1 or greater."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``METADATA`` file is mandatory. If it cannot be created, or if required "
"core metadata is not available, installers must report an error and fail to "
"install the project."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The RECORD file"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``RECORD`` file holds the list of installed files. It is a CSV file "
"containing one record (line) per installed file."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:104
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The CSV dialect must be readable with the default ``reader`` of Python's "
"``csv`` module:"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "field delimiter: ``,`` (comma),"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "quoting char: ``\"`` (straight double quote),"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "line terminator: either ``\\r\\n`` or ``\\n``."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Each record is composed of three elements: the file's **path**, the **hash**"
" of the contents, and its **size**."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The *path* may be either absolute, or relative to the directory containing "
"the ``.dist-info`` directory (commonly, the ``site-packages`` directory). On"
" Windows, directories may be separated either by forward- or backslashes "
"(``/`` or ``\\``)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The *hash* is either an empty string or the name of a hash algorithm from "
":py:data:`hashlib.algorithms_guaranteed`, followed by the equals character "
"``=`` and the digest of the file's contents, encoded with the urlsafe-"
"base64-nopad encoding (:py:func:`base64.urlsafe_b64encode(digest) "
"<base64.urlsafe_b64encode()>` with trailing ``=`` removed)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The *size* is either the empty string, or file's size in bytes, as a base 10"
" integer."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For any file, either or both of the *hash* and *size* fields may be left "
"empty. Commonly, entries for ``.pyc`` files and the ``RECORD`` file itself "
"have empty *hash* and *size*. For other files, leaving the information out "
"is discouraged, as it prevents verifying the integrity of the installed "
"project."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the ``RECORD`` file is present, it must list all installed files of the "
"project, except ``.pyc`` files corresponding to ``.py`` files listed in "
"``RECORD``, which are optional. Notably, the contents of the ``.dist-info`` "
"directory (including the ``RECORD`` file itself) must be listed. Directories"
" should not be listed."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To completely uninstall a package, a tool needs to remove all files listed "
"in ``RECORD``, all ``.pyc`` files (of all optimization levels) corresponding"
" to removed ``.py`` files, and any directories emptied by the "
"uninstallation."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Here is an example snippet of a possible ``RECORD`` file::"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:164
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the ``RECORD`` file is missing, tools that rely on ``.dist-info`` must "
"not attempt to uninstall or upgrade the package. (This restriction does not "
"apply to tools that rely on other sources of information, such as system "
"package managers in Linux distros.)"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:171
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is *strongly discouraged* for an installed package to modify itself "
"(e.g., store cache files under its namespace in ``site-packages``). Changes "
"inside ``site-packages`` should be left to specialized installer tools such "
"as pip. If a package is nevertheless modified in this way, then the "
"``RECORD`` must be updated, otherwise uninstalling the package will leave "
"unlisted files in place (possibly resulting in a zombie namespace package)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:180
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The INSTALLER file"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:182
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If present, ``INSTALLER`` is a single-line text file naming the tool used to"
" install the project. If the installer is executable from the command line, "
"``INSTALLER`` should contain the command name. Otherwise, it should contain "
"a printable ASCII string."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:188
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The file can be terminated by zero or more ASCII whitespace characters."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:190
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Here are examples of two possible ``INSTALLER`` files::"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This value should be used for informational purposes only. For example, if a"
" tool is asked to uninstall a project but finds no ``RECORD`` file, it may "
"suggest that the tool named in ``INSTALLER`` may be able to do the "
"uninstallation."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:205
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The entry_points.txt file"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:207
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This file MAY be created by installers to indicate when packages contain "
"components intended for discovery and use by other code, including console "
"scripts and other applications that the installer has made available for "
"execution."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:212
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Its detailed specification is at :ref:`entry-points`."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:216
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The direct_url.json file"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:218
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This file MUST be created by installers when installing a distribution from "
"a requirement specifying a direct URL reference (including a VCS URL)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:224
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Its detailed specification is at :ref:`direct-url`."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:228
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The :file:`licenses/` subdirectory"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the metadata version is 2.4 or greater and one or more ``License-File`` "
"fields is specified, the :file:`.dist-info/` directory MUST contain a "
":file:`licenses/` subdirectory which MUST contain the files listed in the "
"``License-File`` fields in the :file:`METADATA` file at their respective "
"paths relative to the :file:`licenses/` directory. Any files in this "
"directory MUST be copied from wheels by the install tools."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:239
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Intentionally preventing changes to installed packages"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In some cases (such as when needing to manage external dependencies in "
"addition to Python ecosystem dependencies), it is desirable for a tool that "
"installs packages into a Python environment to ensure that other tools are "
"not used to uninstall or otherwise modify that installed package, as doing "
"so may cause compatibility problems with the wider environment."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:247
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To achieve this, affected tools should take the following steps:"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:249
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Rename or remove the ``RECORD`` file to prevent changes via other tools "
"(e.g. appending a suffix to create a non-standard ``RECORD.tool`` file if "
"the tool itself needs the information, or omitting the file entirely if the "
"package contents are tracked and managed via other means)"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:253
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Write an ``INSTALLER`` file indicating the name of the tool that should be "
"used to manage the package (this allows ``RECORD``-aware tools to provide "
"better error notices when asked to modify affected packages)"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:257
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python runtime providers may also prevent inadvertent modification of "
"platform provided packages by modifying the default Python package "
"installation scheme to use a location other than that used by platform "
"provided packages (while also ensuring both locations appear on the default "
"Python import path)."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:262
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In some circumstances, it may be desirable to block even installation of "
"additional packages via Python-specific tools. For these cases refer to "
":ref:`externally-managed-environments`"
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:270
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"June 2009: The original version of this specification was approved through "
":pep:`376`.  At the time, it was known as the *Database of Installed Python "
"Distributions*."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:273
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"March 2020: The specification of the ``direct_url.json`` file was approved "
"through :pep:`610`. It is only mentioned on this page; see :ref:`direct-url`"
" for the full definition."
msgstr ""

#: ../source/specifications/recording-installed-packages.rst:276
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"September 2020: Various amendments and clarifications were approved through "
":pep:`627`."
msgstr ""

#: ../source/specifications/section-distribution-formats.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package Distribution File Formats"
msgstr ""

#: ../source/specifications/section-distribution-metadata.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package Distribution Metadata"
msgstr ""

#: ../source/specifications/section-installation-metadata.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package Installation Metadata"
msgstr ""

#: ../source/specifications/section-package-indices.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Package Index Interfaces"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Simple repository API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The interface for querying available package versions and retrieving "
"packages from an index server comes in two forms: HTML and JSON."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Base HTML API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A repository that implements the simple API is defined by its base URL, this"
" is the top level URL that all additional URLs are below. The API is named "
"the \"simple\" repository due to the fact that PyPI's base URL is "
"``https://pypi.org/simple/``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All subsequent URLs in this document will be relative to this base URL (so "
"given PyPI's URL, a URL of ``/foo/`` would be "
"``https://pypi.org/simple/foo/``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Within a repository, the root URL (``/`` for this spec which represents the "
"base URL) **MUST** be a valid HTML5 page with a single anchor element per "
"project in the repository. The text of the anchor tag **MUST** be the name "
"of the project and the href attribute **MUST** link to the URL for that "
"particular project. As an example::"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:41
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Below the root URL is another URL for each individual project contained "
"within a repository. The format of this URL is ``/<project>/`` where the "
"``<project>`` is replaced by the normalized name for that project, so a "
"project named \"HolyGrail\" would have a URL like ``/holygrail/``. This URL "
"must respond with a valid HTML5 page with a single anchor element per file "
"for the project. The href attribute **MUST** be a URL that links to the "
"location of the file for download, and the text of the anchor tag **MUST** "
"match the final path component (the filename) of the URL. The URL **SHOULD**"
" include a hash in the form of a URL fragment with the following syntax: "
"``#<hashname>=<hashvalue>``, where ``<hashname>`` is the lowercase name of "
"the hash function (such as ``sha256``) and ``<hashvalue>`` is the hex "
"encoded digest."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to the above, the following constraints are placed on the API:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:55
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All URLs which respond with an HTML5 page **MUST** end with a ``/`` and the "
"repository **SHOULD** redirect the URLs without a ``/`` to add a ``/`` to "
"the end."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"URLs may be either absolute or relative as long as they point to the correct"
" location."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There are no constraints on where the files must be hosted relative to the "
"repository."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There may be any other HTML elements on the API pages as long as the "
"required anchor elements exist."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Repositories **MAY** redirect unnormalized URLs to the canonical normalized "
"URL (e.g. ``/Foobar/`` may redirect to ``/foobar/``), however clients **MUST"
" NOT** rely on this redirection and **MUST** request the normalized URL."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Repositories **SHOULD** choose a hash function from one of the ones "
"guaranteed to be available via the :py:mod:`hashlib` module in the Python "
"standard library (currently ``md5``, ``sha1``, ``sha224``, ``sha256``, "
"``sha384``, ``sha512``). The current recommendation is to use ``sha256``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If there is a GPG signature for a particular distribution file it **MUST** "
"live alongside that file with the same name with a ``.asc`` appended to it. "
"So if the file ``/packages/HolyGrail-1.0.tar.gz`` existed and had an "
"associated signature, the signature would be located at "
"``/packages/HolyGrail-1.0.tar.gz.asc``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:84
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A repository **MAY** include a ``data-gpg-sig`` attribute on a file link "
"with a value of either ``true`` or ``false`` to indicate whether or not "
"there is a GPG signature. Repositories that do this **SHOULD** include it on"
" every link."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:88
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A repository **MAY** include a ``data-requires-python`` attribute on a file "
"link. This exposes the :ref:`core-metadata-requires-python` metadata field "
"for the corresponding release. Where this is present, installer tools "
"**SHOULD** ignore the download when installing to a Python version that "
"doesn't satisfy the requirement. For example::"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In the attribute value, < and > have to be HTML encoded as ``&lt;`` and "
"``&gt;``, respectively."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A repository **MAY** include a ``data-provenance`` attribute on a file link."
" The value of this attribute **MUST** be a fully qualified URL, signaling "
"that the file's provenance can be found at that URL. This URL **MUST** "
"represent a `secure origin <https://www.chromium.org/Home/chromium-"
"security/prefer-secure-origins-for-powerful-new-features/>`_."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The format of the linked provenance is defined in :ref:`index-hosted-"
"attestations`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Normalized Names"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This spec references the concept of a \"normalized\" project name. As per "
":ref:`the name normalization specification <name-normalization>` the only "
"valid characters in a name are the ASCII alphabet, ASCII numbers, ``.``, "
"``-``, and ``_``. The name should be lowercased with all runs of the "
"characters ``.``, ``-``, or ``_`` replaced with a single ``-`` character. "
"This can be implemented in Python with the ``re`` module::"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Adding \"Yank\" Support to the Simple API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Links in the simple repository **MAY** have a ``data-yanked`` attribute "
"which may have no value, or may have an arbitrary string as a value. The "
"presence of a ``data-yanked`` attribute **SHOULD** be interpreted as "
"indicating that the file pointed to by this particular link has been "
"\"Yanked\", and should not generally be selected by an installer, except "
"under specific scenarios."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:135
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The value of the ``data-yanked`` attribute, if present, is an arbitrary "
"string that represents the reason for why the file has been yanked. Tools "
"that process the simple repository API **MAY** surface this string to end "
"users."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:140
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The yanked attribute is not immutable once set, and may be rescinded in the "
"future (and once rescinded, may be reset as well). Thus API users **MUST** "
"be able to cope with a yanked file being \"unyanked\" (and even yanked "
"again)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:147
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installers"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:149
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The desirable experience for users is that once a file is yanked, when a "
"human being is currently trying to directly install a yanked file, that it "
"fails as if that file had been deleted. However, when a human did that "
"awhile ago, and now a computer is just continuing to mechanically follow the"
" original order to install the now yanked file, then it acts as if it had "
"not been yanked."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:156
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An installer **MUST** ignore yanked releases, if the selection constraints "
"can be satisfied with a non-yanked version, and **MAY** refuse to use a "
"yanked release even if it means that the request cannot be satisfied at all."
" An implementation **SHOULD** choose a policy that follows the spirit of the"
" intention above, and that prevents \"new\" dependencies on yanked "
"releases/files."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"What this means is left up to the specific installer, to decide how to best "
"fit into the overall usage of their installer. However, there are two "
"suggested approaches to take:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:167
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Yanked files are always ignored, unless they are the only file that matches "
"a version specifier that \"pins\" to an exact version using either ``==`` "
"(without any modifiers that make it a range, such as ``.*``) or ``===``. "
"Matching this version specifier should otherwise be done as per :ref:`the "
"version specifiers specification <version-specifiers>` for things like local"
" versions, zero padding, etc."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Yanked files are always ignored, unless they are the only file that matches "
"what a lock file (such as ``Pipfile.lock`` or ``poetry.lock``) specifies to "
"be installed. In this case, a yanked file **SHOULD** not be used when "
"creating or updating a lock file from some input file or command."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:180
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Regardless of the specific strategy that an installer chooses for deciding "
"when to install yanked files, an installer **SHOULD** emit a warning when it"
" does decide to install a yanked file. That warning **MAY** utilize the "
"value of the ``data-yanked`` attribute (if it has a value) to provide more "
"specific feedback to the user about why that file had been yanked."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:188
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Mirrors"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:190
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Mirrors can generally treat yanked files one of two ways:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"They may choose to omit them from their simple repository API completely, "
"providing a view over the repository that shows only \"active\", unyanked "
"files."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:195
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"They may choose to include yanked files, and additionally mirror the ``data-"
"yanked`` attribute as well."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Mirrors **MUST NOT** mirror a yanked file without also mirroring the ``data-"
"yanked`` attribute for it."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Versioning PyPI's Simple API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:206
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This spec proposes the inclusion of a meta tag on the responses of every "
"successful request to a simple API page, which contains a name attribute of "
"\"pypi:repository-version\", and a content that is a :ref:`version "
"specifiers specification <version-specifiers>` compatible version number, "
"which is further constrained to ONLY be Major.Minor, and none of the "
"additional features supported by :ref:`the version specifiers specification "
"<version-specifiers>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:214
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This would end up looking like::"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:218
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "When interpreting the repository version:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Incrementing the major version is used to signal a backwards incompatible "
"change such that existing clients would no longer be expected to be able to "
"meaningfully use the API."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:223
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Incrementing the minor version is used to signal a backwards compatible "
"change such that existing clients would still be expected to be able to "
"meaningfully use the API."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:227
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is left up to the discretion of any future specs as to what specifically "
"constitutes a backwards incompatible vs compatible change beyond the broad "
"suggestion that existing clients will be able to \"meaningfully\" continue "
"to use the API, and can include adding, modifying, or removing existing "
"features."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:233
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is expectation of this spec that the major version will never be "
"incremented, and any future major API evolutions would utilize a different "
"mechanism for API evolution. However the major version is included to "
"disambiguate with future versions (e.g. a hypothetical simple api v2 that "
"lived at /v2/, but which would be confusing if the repository-version was "
"set to a version >= 2)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:240
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This spec sets the current API version to \"1.0\", and expects that future "
"specs that further evolve the simple API will increment the minor version "
"number."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:246
#: ../source/specifications/simple-repository-api.rst:971
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Clients"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Clients interacting with the simple API **SHOULD** introspect each response "
"for the repository version, and if that data does not exist **MUST** assume "
"that it is version 1.0."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:252
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When encountering a major version greater than expected, clients **MUST** "
"hard fail with an appropriate error message for the user."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:255
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When encountering a minor version greater than expected, clients **SHOULD** "
"warn users with an appropriate message."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:258
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Clients **MAY** still continue to use feature detection in order to "
"determine what features a repository uses."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:264
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Serve Distribution Metadata in the Simple Repository API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:266
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In a simple repository's project page, each anchor tag pointing to a "
"distribution **MAY** have a ``data-dist-info-metadata`` attribute. The "
"presence of the attribute indicates the distribution represented by the "
"anchor tag **MUST** contain a Core Metadata file that will not be modified "
"when the distribution is processed and/or installed."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:272
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If a ``data-dist-info-metadata`` attribute is present, the repository "
"**MUST** serve the distribution's Core Metadata file alongside the "
"distribution with a ``.metadata`` appended to the distribution's file name. "
"For example, the Core Metadata of a distribution served at "
"``/files/distribution-1.0-py3.none.any.whl`` would be located at "
"``/files/distribution-1.0-py3.none.any.whl.metadata``. This is similar to "
"how :ref:`the base HTML API specification <simple-repository-api-base>` "
"specifies the GPG signature file's location."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:281
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The repository **SHOULD** provide the hash of the Core Metadata file as the "
"``data-dist-info-metadata`` attribute's value using the syntax "
"``<hashname>=<hashvalue>``, where ``<hashname>`` is the lower cased name of "
"the hash function used, and ``<hashvalue>`` is the hex encoded digest. The "
"repository **MAY** use ``true`` as the attribute's value if a hash is "
"unavailable."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:289
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Backwards Compatibility"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:291
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If an anchor tag lacks the ``data-dist-info-metadata`` attribute, tools are "
"expected to revert to their current behaviour of downloading the "
"distribution to inspect the metadata."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:295
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Older tools not supporting the new ``data-dist-info-metadata`` attribute are"
" expected to ignore the attribute and maintain their current behaviour of "
"downloading the distribution to inspect the metadata. This is similar to how"
" prior ``data-`` attribute additions expect existing tools to operate."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:304
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "JSON-based Simple API for Python Package Indexes"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:306
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To enable response parsing with only the standard library, this spec "
"specifies that all responses (besides the files themselves, and the HTML "
"responses from :ref:`the base HTML API specification <simple-repository-api-"
"base>`) should be serialized using `JSON <https://www.json.org/>`_."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:311
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To enable zero configuration discovery and to minimize the amount of "
"additional HTTP requests, this spec extends :ref:`the base HTML API "
"specification <simple-repository-api-base>` such that all of the API "
"endpoints (other than the files themselves) will utilize HTTP content "
"negotiation to allow client and server to select the correct serialization "
"format to serve, i.e. either HTML or JSON."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:321
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Versioning will adhere to :ref:`the API versioning specification <simple-"
"repository-api-versioning>` format (``Major.Minor``), which has defined the "
"existing HTML responses to be ``1.0``. Since this spec does not introduce "
"new features into the API, rather it describes a different serialization "
"format for the existing features, this spec does not change the existing "
"``1.0`` version, and instead just describes how to serialize that into JSON."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:328
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Similar to :ref:`the API versioning specification <simple-repository-api-"
"versioning>`, the major version number **MUST** be incremented if any "
"changes to the new format would result in no longer being able to expect "
"existing clients to meaningfully understand the format."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:334
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Likewise, the minor version **MUST** be incremented if features are added or"
" removed from the format, but existing clients would be expected to continue"
" to meaningfully understand the format."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:338
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Changes that would not result in existing clients being unable to "
"meaningfully understand the format and which do not represent features being"
" added or removed may occur without changing the version number."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:342
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This is intentionally vague, as this spec believes it is best left up to "
"future specs that make any changes to the API to investigate and decide "
"whether or not that change should increment the major or minor version."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:346
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Future versions of the API may add things that can only be represented in a "
"subset of the available serializations of that version. All serializations "
"version numbers, within a major version, **SHOULD** be kept in sync, but the"
" specifics of how a feature serializes into each format may differ, "
"including whether or not that feature is present at all."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:352
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is the intent of this spec that the API should be thought of as URL "
"endpoints that return data, whose interpretation is defined by the version "
"of that data, and then serialized into the target serialization format."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:360
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "JSON Serialization"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:362
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The URL structure from :ref:`the base HTML API specification <simple-"
"repository-api-base>` still applies, as this spec only adds an additional "
"serialization format for the already existing API."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:366
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following constraints apply to all JSON serialized responses described "
"in this spec:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:369
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All JSON responses will *always* be a JSON object rather than an array or "
"other type."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:372
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While JSON doesn't natively support a URL type, any value that represents an"
" URL in this API may be either absolute or relative as long as they point to"
" the correct location. If relative, they are relative to the current URL as "
"if it were HTML."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:377
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Additional keys may be added to any dictionary objects in the API responses "
"and clients **MUST** ignore keys that they don't understand."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:380
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All JSON responses will have a ``meta`` key, which contains information "
"related to the response itself, rather than the content of the response."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:383
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All JSON responses will have a ``meta.api-version`` key, which will be a "
"string that contains the :ref:`API versioning specification <simple-"
"repository-api-versioning>` ``Major.Minor`` version number, with the same "
"fail/warn semantics as defined in :ref:`the API versioning specification "
"<simple-repository-api-versioning>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:389
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All requirements of :ref:`the base HTML API specification <simple-"
"repository-api-base>` that are not HTML specific still apply."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:394
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project List"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:396
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The root URL ``/`` for this spec (which represents the base URL) will be a "
"JSON encoded dictionary which has a two keys:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:399
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``projects``: An array where each entry is a dictionary with a single key, "
"``name``, which represents string of the project name."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:400
#: ../source/specifications/simple-repository-api.rst:449
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``meta``: The general response metadata as `described earlier <json-"
"serialization_>`__."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:402
#: ../source/specifications/simple-repository-api.rst:512
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "As an example:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:419
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``name`` field is the same as the one from :ref:`the base HTML API "
"specification <simple-repository-api-base>`, which does not specify whether "
"it is the non-normalized display name or the normalized name. In practice "
"different implementations of these specs are choosing differently here, so "
"relying on it being either non-normalized or normalized is relying on an "
"implementation detail of the repository in question."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:429
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While the ``projects`` key is an array, and thus is required to be in some "
"kind of an order, neither :ref:`the base HTML API specification <simple-"
"repository-api-base>` nor this spec requires any specific ordering nor that "
"the ordering is consistent from one request to the next. Mentally this is "
"best thought of as a set, but both JSON and HTML lack the functionality to "
"have sets."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:438
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Project Detail"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:440
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The format of this URL is ``/<project>/`` where the ``<project>`` is "
"replaced by the :ref:`the base HTML API specification <simple-repository-"
"api-base>` normalized name for that project, so a project named "
"\"Silly_Walk\" would have a URL like ``/silly-walk/``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:445
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This URL must respond with a JSON encoded dictionary that has three keys:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:447
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``name``: The normalized name of the project."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:448
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``files``: A list of dictionaries, each one representing an individual file."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:451
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Each individual file dictionary has the following keys:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:453
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``filename``: The filename that is being represented."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:454
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``url``: The URL that the file can be fetched from."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:455
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``hashes``: A dictionary mapping a hash name to a hex encoded digest of the "
"file. Multiple hashes can be included, and it is up to the client to decide "
"what to do with multiple hashes (it may validate all of them or a subset of "
"them, or nothing at all). These hash names **SHOULD** always be normalized "
"to be lowercase."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:460
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``hashes`` dictionary **MUST** be present, even if no hashes are "
"available for the file, however it is **HIGHLY** recommended that at least "
"one secure, guaranteed-to-be-available hash is always included."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:464
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"By default, any hash algorithm available via :py:mod:`hashlib` (specifically"
" any that can be passed to :py:func:`hashlib.new()` and do not require "
"additional parameters) can be used as a key for the hashes dictionary. At "
"least one secure algorithm from :py:data:`hashlib.algorithms_guaranteed` "
"**SHOULD** always be included. At the time of this spec, ``sha256`` "
"specifically is recommended."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:469
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``requires-python``: An **optional** key that exposes the :ref:`core-"
"metadata-requires-python` metadata field. Where this is present, installer "
"tools **SHOULD** ignore the download when installing to a Python version "
"that doesn't satisfy the requirement."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:475
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Unlike ``data-requires-python`` in :ref:`the base HTML API specification "
"<simple-repository-api-base>`, the ``requires-python`` key does not require "
"any special escaping other than anything JSON does naturally."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:478
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``dist-info-metadata``: An **optional** key that indicates that metadata for"
" this file is available, via the same location as specified in :ref:`the API"
" metadata file specification <simple-repository-api-metadata-file>` "
"(``{file_url}.metadata``). Where this is present, it **MUST** be either a "
"boolean to indicate if the file has an associated metadata file, or a "
"dictionary mapping hash names to a hex encoded digest of the metadata's "
"hash."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:486
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When this is a dictionary of hashes instead of a boolean, then all the same "
"requirements and recommendations as the ``hashes`` key hold true for this "
"key as well."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:490
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If this key is missing then the metadata file may or may not exist. If the "
"key value is truthy, then the metadata file is present, and if it is falsey "
"then it is not."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:494
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is recommended that servers make the hashes of the metadata file "
"available if possible."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:496
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``gpg-sig``: An **optional** key that acts a boolean to indicate if the file"
" has an associated GPG signature or not. The URL for the signature file "
"follows what is specified in :ref:`the base HTML API specification <simple-"
"repository-api-base>` (``{file_url}.asc``). If this key does not exist, then"
" the signature may or may not exist."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:501
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``yanked``: An **optional** key which may be either a boolean to indicate if"
" the file has been yanked, or a non empty, but otherwise arbitrary, string "
"to indicate that a file has been yanked with a specific reason. If the "
"``yanked`` key is present and is a truthy value, then it **SHOULD** be "
"interpreted as indicating that the file pointed to by the ``url`` field has "
"been \"Yanked\" as per :ref:`the API yank specification <simple-repository-"
"api-yank>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:507
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``provenance``: An **optional** key which, if present **MUST** be either a "
"JSON string or ``null``. If not ``null``, it **MUST** be a URL to the file's"
" associated provenance, with the same rules as ``data-provenance`` in the "
":ref:`base HTML API specification <simple-repository-api-base>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:543
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While the ``files`` key is an array, and thus is required to be in some kind"
" of an order, neither :ref:`the base HTML API specification <simple-"
"repository-api-base>` nor this spec requires any specific ordering nor that "
"the ordering is consistent from one request to the next. Mentally this is "
"best thought of as a set, but both JSON and HTML lack the functionality to "
"have sets."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:552
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Content-Types"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:554
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This spec proposes that all responses from the Simple API will have a "
"standard content type that describes what the response is (a Simple API "
"response), what version of the API it represents, and what serialization "
"format has been used."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:558
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The structure of this content type will be:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:564
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Since only major versions should be disruptive to clients attempting to "
"understand one of these API responses, only the major version will be "
"included in the content type, and will be prefixed with a ``v`` to clarify "
"that it is a version number."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:569
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Which means that for the existing 1.0 API, the content types would be:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:571
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**JSON:** ``application/vnd.pypi.simple.v1+json``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:572
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "**HTML:** ``application/vnd.pypi.simple.v1+html``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:574
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In addition to the above, a special \"meta\" version is supported named "
"``latest``, whose purpose is to allow clients to request the absolute latest"
" version, without having to know ahead of time what that version is. It is "
"recommended however, that clients be explicit about what versions they "
"support."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:579
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To support existing clients which expect the existing :ref:`the base HTML "
"API specification <simple-repository-api-base>` API responses to use the "
"``text/html`` content type, this spec further defines ``text/html`` as an "
"alias for the ``application/vnd.pypi.simple.v1+html`` content type."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:586
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Version + Format Selection"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:588
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now that there is multiple possible serializations, we need a mechanism to "
"allow clients to indicate what serialization formats they're able to "
"understand. In addition, it would be beneficial if any possible new major "
"version to the API can be added without disrupting existing clients "
"expecting the previous API version."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:593
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To enable this, this spec standardizes on the use of HTTP's `Server-Driven "
"Content Negotiation <https://developer.mozilla.org/en-"
"US/docs/Web/HTTP/Content_negotiation>`_."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:596
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While this spec won't fully describe the entirety of server-driven content "
"negotiation, the flow is roughly:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:599
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The client makes an HTTP request containing an ``Accept`` header listing all"
" of the version+format content types that they are able to understand."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:601
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The server inspects that header, selects one of the listed content types, "
"then returns a response using that content type (treating the absence of an "
"``Accept`` header as ``Accept: */*``)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:604
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the server does not support any of the content types in the ``Accept`` "
"header then they are able to choose between 3 different options for how to "
"respond:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:608
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Select a default content type other than what the client has requested and "
"return a response with that."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:610
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Return a HTTP ``406 Not Acceptable`` response to indicate that none of the "
"requested content types were available, and the server was unable or "
"unwilling to select a default content type to respond with."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:613
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Return a HTTP ``300 Multiple Choices`` response that contains a list of all "
"of the possible responses that could have been chosen."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:615
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The client interprets the response, handling the different types of "
"responses that the server may have responded with."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:618
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This spec does not specify which choices the server makes in regards to "
"handling a content type that it isn't able to return, and clients **SHOULD**"
" be prepared to handle all of the possible responses in whatever way makes "
"the most sense for that client."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:623
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, as there is no standard format for how a ``300 Multiple Choices`` "
"response can be interpreted, this spec highly discourages servers from "
"utilizing that option, as clients will have no way to understand and select "
"a different content-type to request. In addition, it's unlikely that the "
"client *could* understand a different content type anyways, so at best this "
"response would likely just be treated the same as a ``406 Not Acceptable`` "
"error."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:630
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This spec **does** require that if the meta version ``latest`` is being "
"used, the server **MUST** respond with the content type for the actual "
"version that is contained in the response (i.e. an ``Accept: "
"application/vnd.pypi.simple.latest+json`` request that returns a ``v1.x`` "
"response should have a ``Content-Type`` of "
"``application/vnd.pypi.simple.v1+json``)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:637
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``Accept`` header is a comma separated list of content types that the "
"client understands and is able to process. It supports three different "
"formats for each content type that is being requested:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:641
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``$type/$subtype``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:642
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``$type/*``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:643
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``*/*``"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:645
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For the use of selecting a version+format, the most useful of these is "
"``$type/$subtype``, as that is the only way to actually specify the version "
"and format you want."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:649
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The order of the content types listed in the ``Accept`` header does not have"
" any specific meaning, and the server **SHOULD** consider all of them to be "
"equally valid to respond with. If a client wishes to specify that they "
"prefer a specific content type over another, they may use the ``Accept`` "
"header's `quality value <https://developer.mozilla.org/en-"
"US/docs/Glossary/Quality_values>`_ syntax."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:656
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This allows a client to specify a priority for a specific entry in their "
"``Accept`` header, by appending a ``;q=`` followed by a value between ``0`` "
"and ``1`` inclusive, with up to 3 decimal digits. When interpreting this "
"value, an entry with a higher quality has priority over an entry with a "
"lower quality, and any entry without a quality present will default to a "
"quality of ``1``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:662
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, clients should keep in mind that a server is free to select **any**"
" of the content types they've asked for, regardless of their requested "
"priority, and it may even return a content type that they did **not** ask "
"for."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:666
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To aid clients in determining the content type of the response that they "
"have received from an API request, this spec requires that servers always "
"include a ``Content-Type`` header indicating the content type of the "
"response. This is technically a backwards incompatible change, however in "
"practice `pip has been enforcing this requirement "
"<https://github.com/pypa/pip/blob/cf3696a81b341925f82f20cb527e656176987565/src/pip/_internal/index/collector.py#L123-L150>`_"
" so the risks for actual breakages is low."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:673
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "An example of how a client can operate would look like:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:724
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If a client wishes to only support HTML or only support JSON, then they "
"would just remove the content types that they do not want from the "
"``Accept`` header, and turn receiving them into an error."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:730
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Alternative Negotiation Mechanisms"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:732
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While using HTTP's Content negotiation is considered the standard way for a "
"client and server to coordinate to ensure that the client is getting an HTTP"
" response that it is able to understand, there are situations where that "
"mechanism may not be sufficient. For those cases this spec has alternative "
"negotiation mechanisms that may *optionally* be used instead."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:740
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "URL Parameter"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:742
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Servers that implement the Simple API may choose to support a URL parameter "
"named ``format`` to allow the clients to request a specific version of the "
"URL."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:745
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The value of the ``format`` parameter should be **one** of the valid content"
" types. Passing multiple content types, wild cards, quality values, etc... "
"is **not** supported."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:749
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Supporting this parameter is optional, and clients **SHOULD NOT** rely on it"
" for interacting with the API. This negotiation mechanism is intended to "
"allow for easier human based exploration of the API within a browser, or to "
"allow documentation or notes to link to a specific version+format."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:754
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Servers that do not support this parameter may choose to return an error "
"when it is present, or they may simple ignore its presence."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:757
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When a server does implement this parameter, it **SHOULD** take precedence "
"over any values in the client's ``Accept`` header, and if the server does "
"not support the requested format, it may choose to fall back to the "
"``Accept`` header, or choose any of the error conditions that standard "
"server-driven content negotiation typically has (e.g. ``406 Not Available``,"
" ``303 Multiple Choices``, or selecting a default type to return)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:766
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Endpoint Configuration"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:768
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This option technically is not a special option at all, it is just a natural"
" consequence of using content negotiation and allowing servers to select "
"which of the available content types is their default."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:772
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If a server is unwilling or unable to implement the server-driven content "
"negotiation, and would instead rather require users to explicitly configure "
"their client to select the version they want, then that is a supported "
"configuration."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:776
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To enable this, a server should make multiple endpoints (for instance, "
"``/simple/v1+html/`` and/or ``/simple/v1+json/``) for each version+format "
"that they wish to support. Under that endpoint, they can host a copy of "
"their repository that only supports one (or a subset) of the content-types. "
"When a client makes a request using the ``Accept`` header, the server can "
"ignore it and return the content type that corresponds to that endpoint."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:783
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For clients that wish to require specific configuration, they can keep track"
" of which version+format a specific repository URL was configured for, and "
"when making a request to that server, emit an ``Accept`` header that *only* "
"includes the correct content type."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:790
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "TUF Support - PEP 458"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:792
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":pep:`458` requires that all API responses are hashable and that they can be"
" uniquely identified by a path relative to the repository root. For a Simple"
" API repository, the target path is the Root of our API (e.g. ``/simple/`` "
"on PyPI). This creates challenges when accessing the API using a TUF client "
"instead of directly using a standard HTTP client, as the TUF client cannot "
"handle the fact that a target could have multiple different representations "
"that all hash differently."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:799
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":pep:`458` does not specify what the target path should be for the Simple "
"API, but TUF requires that the target paths be \"file-like\", in other "
"words, a path like ``simple/PROJECT/`` is not acceptable, because it "
"technically points to a directory."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:804
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The saving grace is that the target path does not *have* to actually match "
"the URL being fetched from the Simple API, and it can just be a sigil that "
"the fetching code knows how to transform into the actual URL that needs to "
"be fetched. This same thing can hold true for other aspects of the actual "
"HTTP request, such as the ``Accept`` header."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:810
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Ultimately figuring out how to map a directory to a filename is out of scope"
" for this spec (but it would be in scope for :pep:`458`), and this spec "
"defers making a decision about how exactly to represent this inside of "
":pep:`458` metadata."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:814
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, it appears that the current WIP branch against pip that attempts to"
" implement :pep:`458` is using a target path like "
"``simple/PROJECT/index.html``. This could be modified to include the API "
"version and serialization format using something like "
"``simple/PROJECT/vnd.pypi.simple.vN.FORMAT``. So the v1 HTML format would be"
" ``simple/PROJECT/vnd.pypi.simple.v1.html`` and the v1 JSON format would be "
"``simple/PROJECT/vnd.pypi.simple.v1.json``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:821
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In this case, since ``text/html`` is an alias to "
"``application/vnd.pypi.simple.v1+html`` when interacting through TUF, it "
"likely will make the most sense to normalize to the more explicit name."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:825
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Likewise the ``latest`` metaversion should not be included in the targets, "
"only explicitly declared versions should be supported."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:831
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section is non-normative, and represents what the spec authors believe "
"to be the best default implementation decisions for something implementing "
"this spec, but it does **not** represent any sort of requirement to match "
"these decisions."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:835
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"These decisions have been chosen to maximize the number of requests that can"
" be moved onto the newest version of an API, while maintaining the greatest "
"amount of compatibility. In addition, they've also tried to make using the "
"API provide guardrails that attempt to push clients into making the best "
"choices it can."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:840
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "It is recommended that servers:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:842
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Support all 3 content types described in this spec, using server-driven "
"content negotiation, for as long as they reasonably can, or at least as long"
" as they're receiving non trivial traffic that uses the HTML responses."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:846
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When encountering an ``Accept`` header that does not contain any content "
"types that it knows how to work with, the server should not ever return a "
"``300 Multiple Choice`` response, and instead return a ``406 Not "
"Acceptable`` response."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:851
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, if choosing to use the endpoint configuration, you should prefer to"
" return a ``200 OK`` response in the expected content type for that "
"endpoint."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:854
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When selecting an acceptable version, the server should choose the highest "
"version that the client supports, with the most expressive/featureful "
"serialization format, taking into account the specificity of the client "
"requests as well as any quality priority values they have expressed, and it "
"should only use the ``text/html`` content type as a last resort."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:860
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "It is recommended that clients:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:862
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Support all 3 content types described in this spec, using server-driven "
"content negotiation, for as long as they reasonably can."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:865
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When constructing an ``Accept`` header, include all of the content types "
"that you support."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:868
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You should generally *not* include a quality priority value for your content"
" types, unless you have implementation specific reasons that you want the "
"server to take into account (for example, if you're using the standard "
"library HTML parser and you're worried that there may be some kinds of HTML "
"responses that you're unable to parse in some edge cases)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:874
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The one exception to this recommendation is that it is recommended that you "
"*should* include a ``;q=0.01`` value on the legacy ``text/html`` content "
"type, unless it is the only content type that you are requesting."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:878
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Explicitly select what versions they are looking for, rather than using the "
"``latest`` meta version during normal operation."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:881
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Check the ``Content-Type`` of the response and ensure it matches something "
"that you were expecting."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:885
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Additional Fields for the Simple API for Package Indexes"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:887
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification defines version 1.1 of the simple repository API. For the"
" HTML version of the API, there is no change from version 1.0. For the JSON "
"version of the API, the following changes are made:"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:891
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The ``api-version`` must specify version 1.1 or later."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:892
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A new ``versions`` key is added at the top level."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:893
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Two new \"file information\" keys, ``size`` and ``upload-time``, are added "
"to the ``files`` data."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:895
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Keys (at any level) with a leading underscore are reserved as private for "
"index server use. No future standard will assign a meaning to any such key."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:898
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``versions`` and ``size`` keys are mandatory. The ``upload-time`` key is"
" optional."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:904
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An additional key, ``versions`` MUST be present at the top level, in "
"addition to the keys ``name``, ``files`` and ``meta`` defined in :ref:`the "
"JSON API specification <simple-repository-api-json>`. This key MUST contain "
"a list of version strings specifying all of the project versions uploaded "
"for this project. The value is logically a set, and as such may not contain "
"duplicates, and the order of the values is not significant."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:911
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All of the files listed in the ``files`` key MUST be associated with one of "
"the versions in the ``versions`` key. The ``versions`` key MAY contain "
"versions with no associated files (to represent versions with no files "
"uploaded, if the server has such a concept)."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:916
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that because servers may hold \"legacy\" data from before the adoption "
"of :ref:`the version specifiers specification (VSS) <version-specifiers>`, "
"version strings currently cannot be required to be valid VSS versions, and "
"therefore cannot be assumed to be orderable using the VSS rules. However, "
"servers SHOULD use normalised VSS versions where possible."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:925
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Additional file information"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:927
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Two new keys are added to the ``files`` key."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:929
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``size``: This field is mandatory. It MUST contain an integer which is the "
"file size in bytes."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:931
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``upload-time``: This field is optional. If present, it MUST contain a valid"
" ISO 8601 date/time string, in the format ``yyyy-mm-ddThh:mm:ss.ffffffZ``, "
"which represents the time the file was uploaded to the index. As indicated "
"by the ``Z`` suffix, the upload time MUST use the UTC timezone. The "
"fractional seconds part of the timestamp (the ``.ffffff`` part) is optional,"
" and if present may contain up to 6 digits of precision. If a server does "
"not record upload time information for a file, it MAY omit the ``upload-"
"time`` key."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:940
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Rename dist-info-metadata in the Simple API"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:943
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The keywords \"**MUST**\", \"**MUST NOT**\", \"**REQUIRED**\", "
"\"**SHALL**\", \"**SHALL NOT**\", \"**SHOULD**\", \"**SHOULD NOT**\", "
"\"**RECOMMENDED**\", \"**MAY**\", and \"**OPTIONAL**\"\" in this document "
"are to be interpreted as described in :rfc:`RFC 2119 <2119>`."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:950
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Servers"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:952
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :ref:`the API metadata file specification <simple-repository-api-"
"metadata-file>` metadata, when used in the HTML representation of the Simple"
" API, **MUST** be emitted using the attribute name ``data-core-metadata``, "
"with the supported values remaining the same."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:958
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :ref:`the API metadata file specification <simple-repository-api-"
"metadata-file>` metadata, when used in the :ref:`the JSON API specification "
"<simple-repository-api-base>` JSON representation of the Simple API, "
"**MUST** be emitted using the key ``core-metadata``, with the supported "
"values remaining the same."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:964
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To support clients that used the previous key names, the HTML representation"
" **MAY** also be emitted using the ``data-dist-info-metadata``, and if it "
"does so it **MUST** match the value of ``data-core-metadata``."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:973
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Clients consuming any of the HTML representations of the Simple API **MUST**"
" read the :ref:`the API metadata file specification <simple-repository-api-"
"metadata-file>` metadata from the key ``data-core-metadata`` if it is "
"present. They **MAY** optionally use the legacy ``data-dist-info-metadata`` "
"if it is present but ``data-core-metadata`` is not."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:980
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Clients consuming the JSON representation of the Simple API **MUST** read "
"the :ref:`the API metadata file specification <simple-repository-api-"
"metadata-file>` metadata from the key ``core-metadata`` if it is present. "
"They **MAY** optionally use the legacy ``dist-info-metadata`` key if it is "
"present but ``core-metadata`` is not."
msgstr ""

#: ../source/specifications/simple-repository-api.rst:990
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "September 2015: initial form of the HTML format, in :pep:`503`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:991
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "July 2016: Requires-Python metadata, in an update to :pep:`503`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:992
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "May 2019: \"yank\" support, in :pep:`592`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:993
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"July 2020: API versioning convention and metadata, and declaring the HTML "
"format as API v1, in :pep:`629`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:995
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"May 2021: providing package metadata independently from a package, in "
":pep:`658`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:997
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"May 2022: initial form of the JSON format, with a mechanism for clients to "
"choose between them, and declaring both formats as API v1, in :pep:`691`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:999
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"October 2022: project versions and file size and upload-time in the JSON "
"format, in :pep:`700`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1001
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"June 2023: renaming the field which provides package metadata independently "
"from a package, in :pep:`714`"
msgstr ""

#: ../source/specifications/simple-repository-api.rst:1003
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"November 2024: provenance metadata in the HTML and JSON formats, in "
":pep:`740`"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source distribution format"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The current standard format of source distribution format is identified by "
"the presence of a :file:`pyproject.toml` file in the distribution archive.  "
"The layout of such a distribution was originally specified in :pep:`517` and"
" is formally documented here."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"There is also the legacy source distribution format, implicitly defined by "
"the behaviour of ``distutils`` module in the standard library, when "
"executing :command:`setup.py sdist`. This document does not attempt to "
"standardise this format, except to note that if a legacy source distribution"
" contains a ``PKG-INFO`` file using metadata version 2.2 or later, then it "
"MUST follow the rules applicable to source distributions defined in the "
"metadata specification."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source distributions are also known as *sdists* for short."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source trees"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A *source tree* is a collection of files and directories -- like a version "
"control system checkout -- which contains a :file:`pyproject.toml` file that"
" can be use to build a source distribution from the contained files and "
"directories. :pep:`517` and :pep:`518` specify what is required to meet the "
"definition of what :file:`pyproject.toml` must contain for something to be "
"deemed a source tree."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:38
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source distribution file name"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The file name of a sdist was standardised in :pep:`625`. The file name must "
"be in the form ``{name}-{version}.tar.gz``, where ``{name}`` is normalised "
"according to the same rules as for binary distributions (see :ref:`binary-"
"distribution-format`), and ``{version}`` is the canonicalized form of the "
"project version (see :ref:`version-specifiers`)."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The name and version components of the filename MUST match the values stored"
" in the metadata contained in the file."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Code that produces a source distribution file MUST give the file a name that"
" matches this specification. This includes the ``build_sdist`` hook of a "
":term:`build backend <Build Backend>`."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Code that processes source distribution files MAY recognise source "
"distribution files by the ``.tar.gz`` suffix and the presence of precisely "
"*one* hyphen in the filename. Code that does this may then use the "
"distribution name and version from the filename without further "
"verification."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source distribution file format"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:61
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A ``.tar.gz`` source distribution (sdist) contains a single top-level "
"directory called ``{name}-{version}`` (e.g. ``foo-1.0``), containing the "
"source files of the package. The name and version MUST match the metadata "
"stored in the file. This directory must also contain a "
":file:`pyproject.toml` in the format defined in :ref:`pyproject-toml-spec`, "
"and a :file:`PKG-INFO` file containing metadata in the format described in "
"the :ref:`core-metadata` specification. The metadata MUST conform to at "
"least version 2.2 of the metadata specification."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:69
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the metadata version is 2.4 or greater, the source distribution MUST "
"contain any license files specified by the ``License-File`` field in the "
":file:`PKG-INFO` at their respective paths relative to the root directory of"
" the sdist (containing the :file:`pyproject.toml` and the :file:`PKG-INFO` "
"metadata)."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"No other content of a sdist is required or defined. Build systems can store "
"whatever information they need in the sdist to build the project."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:77
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The tarball should use the modern POSIX.1-2001 pax tar format, which "
"specifies UTF-8 based file names. In particular, source distribution files "
"must be readable using the standard library tarfile module with the open "
"flag 'r:gz'."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source distribution archive features"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Because extracting tar files as-is is dangerous, and the results are "
"platform-specific, archive features of source distributions are limited."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:91
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Unpacking with the data filter"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:93
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When extracting a source distribution, tools MUST either use "
":py:func:`tarfile.data_filter` (e.g. :py:meth:`TarFile.extractall(..., "
"filter='data') <tarfile.TarFile.extractall>`), OR follow the *Unpacking "
"without the data filter* section below."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:97
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As an exception, on Python interpreters without :py:func:`hasattr(tarfile, "
"'data_filter') <tarfile.data_filter>` (:pep:`706`), tools that normally use "
"that filter (directly on indirectly) MAY warn the user and ignore this "
"specification. The trade-off between usability (e.g. fully trusting the "
"archive) and security (e.g. refusing to unpack) is left up to the tool in "
"this case."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Unpacking without the data filter"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools that do not use the ``data`` filter directly (e.g. for backwards "
"compatibility, allowing additional features, or not using Python) MUST "
"follow this section. (At the time of this writing, the ``data`` filter also "
"follows this section, but it may get out of sync in the future.)"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following files are invalid in an *sdist* archive. Upon encountering "
"such an entry, tools SHOULD notify the user, MUST NOT unpack the entry, and "
"MAY abort with a failure:"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Files that would be placed outside the destination directory."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Links (symbolic or hard) pointing outside the destination directory."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Device files (including pipes)."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following are also invalid. Tools MAY treat them as above, but are NOT "
"REQUIRED to do so:"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Files with a ``..`` component in the filename or link target."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Links pointing to a file that is not part of the archive."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools MAY unpack links (symbolic or hard) as regular files, using content "
"from the archive."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "When extracting *sdist* archives:"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Leading slashes in file names MUST be dropped. (This is nowadays standard "
"behaviour for ``tar`` unpacking.)"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For each ``mode`` (Unix permission) bit, tools MUST either:"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "use the platform's default for a new file/directory (respectively),"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "set the bit according to the archive, or"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"use the bit from ``rw-r--r--`` (``0o644``) for non-executable files or "
"``rwxr-xr-x`` (``0o755``) for executable files and directories."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:141
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "High ``mode`` bits (setuid, setgid, sticky) MUST be cleared."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "It is RECOMMENDED to preserve the user *executable* bit."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:146
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Further hints"
msgstr ""

#: ../source/specifications/source-distribution-format.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tool authors are encouraged to consider how *hints for further verification*"
" in ``tarfile`` documentation apply to their tool."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:155
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"November 2020: The original version of this specification was approved "
"through :pep:`643`."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "July 2021: Defined what a source tree is."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:158
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"September 2022: The filename of a source distribution was standardized "
"through :pep:`625`."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"August 2023: Source distribution archive features were standardized through "
":pep:`721`."
msgstr ""

#: ../source/specifications/source-distribution-format.rst:162
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"December 2024: License files inclusion into source distribution was "
"standardized through :pep:`639`."
msgstr ""

#: ../source/specifications/version-specifiers.rst:7
#: ../source/specifications/version-specifiers.rst:782
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Version specifiers"
msgstr ""

#: ../source/specifications/version-specifiers.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification describes a scheme for identifying versions of Python "
"software distributions, and declaring dependencies on particular versions."
msgstr ""

#: ../source/specifications/version-specifiers.rst:15
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Definitions"
msgstr ""

#: ../source/specifications/version-specifiers.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The key words \"MUST\", \"MUST NOT\", \"REQUIRED\", \"SHALL\", \"SHALL "
"NOT\", \"SHOULD\", \"SHOULD NOT\", \"RECOMMENDED\",  \"MAY\", and "
"\"OPTIONAL\" in this document are to be interpreted as described in "
":rfc:`2119`."
msgstr ""

#: ../source/specifications/version-specifiers.rst:21
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"Build tools\" are automated tools intended to run on development systems, "
"producing source and binary distribution archives. Build tools may also be "
"invoked by integration tools in order to build software distributed as "
"sdists rather than prebuilt binary archives."
msgstr ""

#: ../source/specifications/version-specifiers.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"Index servers\" are active distribution registries which publish version "
"and dependency metadata and place constraints on the permitted metadata."
msgstr ""

#: ../source/specifications/version-specifiers.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"Publication tools\" are automated tools intended to run on development "
"systems and upload source and binary distribution archives to index servers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:32
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"Installation tools\" are integration tools specifically intended to run on"
" deployment targets, consuming source and binary distribution archives from "
"an index server or other designated location and deploying them to the "
"target system."
msgstr ""

#: ../source/specifications/version-specifiers.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"Automated tools\" is a collective term covering build tools, index "
"servers, publication tools, integration tools and any other software that "
"produces or consumes distribution version and dependency metadata."
msgstr ""

#: ../source/specifications/version-specifiers.rst:43
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Version scheme"
msgstr ""

#: ../source/specifications/version-specifiers.rst:45
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Distributions are identified by a public version identifier which supports "
"all defined version comparison operations"
msgstr ""

#: ../source/specifications/version-specifiers.rst:48
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The version scheme is used both to describe the distribution version "
"provided by a particular distribution archive, as well as to place "
"constraints on the version of dependencies needed in order to build or run "
"the software."
msgstr ""

#: ../source/specifications/version-specifiers.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Public version identifiers"
msgstr ""

#: ../source/specifications/version-specifiers.rst:59
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The canonical public version identifiers MUST comply with the following "
"scheme::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Public version identifiers MUST NOT include leading or trailing whitespace."
msgstr ""

#: ../source/specifications/version-specifiers.rst:66
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Public version identifiers MUST be unique within a given distribution."
msgstr ""

#: ../source/specifications/version-specifiers.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Installation tools SHOULD ignore any public versions which do not comply "
"with this scheme but MUST also include the normalizations specified below. "
"Installation tools MAY warn the user when non-compliant or ambiguous "
"versions are detected."
msgstr ""

#: ../source/specifications/version-specifiers.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See also :ref:`version-specifiers-regex` which provides a regular expression"
" to check strict conformance with the canonical format, as well as a more "
"permissive regular expression accepting inputs that may require subsequent "
"normalization."
msgstr ""

#: ../source/specifications/version-specifiers.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Public version identifiers are separated into up to five segments:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Epoch segment: ``N!``"
msgstr ""

#: ../source/specifications/version-specifiers.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Release segment: ``N(.N)*``"
msgstr ""

#: ../source/specifications/version-specifiers.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pre-release segment: ``{a|b|rc}N``"
msgstr ""

#: ../source/specifications/version-specifiers.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Post-release segment: ``.postN``"
msgstr ""

#: ../source/specifications/version-specifiers.rst:84
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Development release segment: ``.devN``"
msgstr ""

#: ../source/specifications/version-specifiers.rst:86
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Any given release will be a \"final release\", \"pre-release\", \"post-"
"release\" or \"developmental release\" as defined in the following sections."
msgstr ""

#: ../source/specifications/version-specifiers.rst:89
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All numeric components MUST be non-negative integers represented as "
"sequences of ASCII digits."
msgstr ""

#: ../source/specifications/version-specifiers.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All numeric components MUST be interpreted and ordered according to their "
"numeric value, not as text strings."
msgstr ""

#: ../source/specifications/version-specifiers.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All numeric components MAY be zero. Except as described below for the "
"release segment, a numeric component of zero has no special significance "
"aside from always being the lowest possible value in the version ordering."
msgstr ""

#: ../source/specifications/version-specifiers.rst:101
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some hard to read version identifiers are permitted by this scheme in order "
"to better accommodate the wide range of versioning practices across existing"
" public and private Python projects."
msgstr ""

#: ../source/specifications/version-specifiers.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Accordingly, some of the versioning practices which are technically "
"permitted by the specification are strongly discouraged for new projects. "
"Where this is the case, the relevant details are noted in the following "
"sections."
msgstr ""

#: ../source/specifications/version-specifiers.rst:116
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Local version identifiers MUST comply with the following scheme::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"They consist of a normal public version identifier (as defined in the "
"previous section), along with an arbitrary \"local version label\", "
"separated from the public version identifier by a plus. Local version labels"
" have no specific semantics assigned, but some syntactic restrictions are "
"imposed."
msgstr ""

#: ../source/specifications/version-specifiers.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Local version identifiers are used to denote fully API (and, if applicable, "
"ABI) compatible patched versions of upstream projects. For example, these "
"may be created by application developers and system integrators by applying "
"specific backported bug fixes when upgrading to a new upstream release would"
" be too disruptive to the application or other integrated system (such as a "
"Linux distribution)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:132
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The inclusion of the local version label makes it possible to differentiate "
"upstream releases from potentially altered rebuilds by downstream "
"integrators. The use of a local version identifier does not affect the kind "
"of a release but, when applied to a source distribution, does indicate that "
"it may not contain the exact same code as the corresponding upstream "
"release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:138
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To ensure local version identifiers can be readily incorporated as part of "
"filenames and URLs, and to avoid formatting inconsistencies in hexadecimal "
"hash representations, local version labels MUST be limited to the following "
"set of permitted characters:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:143
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "ASCII letters (``[a-zA-Z]``)"
msgstr ""

#: ../source/specifications/version-specifiers.rst:144
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "ASCII digits (``[0-9]``)"
msgstr ""

#: ../source/specifications/version-specifiers.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "periods (``.``)"
msgstr ""

#: ../source/specifications/version-specifiers.rst:147
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Local version labels MUST start and end with an ASCII letter or digit."
msgstr ""

#: ../source/specifications/version-specifiers.rst:149
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Comparison and ordering of local versions considers each segment of the "
"local version (divided by a ``.``) separately. If a segment consists "
"entirely of ASCII digits then that section should be considered an integer "
"for comparison purposes and if a segment contains any ASCII letters then "
"that segment is compared lexicographically with case insensitivity. When "
"comparing a numeric and lexicographic segment, the numeric section always "
"compares as greater than the lexicographic segment. Additionally a local "
"version with a great number of segments will always compare as greater than "
"a local version with fewer segments, as long as the shorter local version's "
"segments match the beginning of the longer local version's segments exactly."
msgstr ""

#: ../source/specifications/version-specifiers.rst:160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An \"upstream project\" is a project that defines its own public versions. A"
" \"downstream project\" is one which tracks and redistributes an upstream "
"project, potentially backporting security and bug fixes from later versions "
"of the upstream project."
msgstr ""

#: ../source/specifications/version-specifiers.rst:165
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Local version identifiers SHOULD NOT be used when publishing upstream "
"projects to a public index server, but MAY be used to identify private "
"builds created directly from the project source. Local version identifiers "
"SHOULD be used by downstream projects when releasing a version that is API "
"compatible with the version of the upstream project identified by the public"
" version identifier, but contains additional changes (such as bug fixes). As"
" the Python Package Index is intended solely for indexing and hosting "
"upstream projects, it MUST NOT allow the use of local version identifiers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:175
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Source distributions using a local version identifier SHOULD provide the "
"``python.integrator`` extension metadata (as defined in :pep:`459`)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:180
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Final releases"
msgstr ""

#: ../source/specifications/version-specifiers.rst:182
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version identifier that consists solely of a release segment and "
"optionally an epoch identifier is termed a \"final release\"."
msgstr ""

#: ../source/specifications/version-specifiers.rst:185
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The release segment consists of one or more non-negative integer values, "
"separated by dots::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:190
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Final releases within a project MUST be numbered in a consistently "
"increasing fashion, otherwise automated tools will not be able to upgrade "
"them correctly."
msgstr ""

#: ../source/specifications/version-specifiers.rst:194
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Comparison and ordering of release segments considers the numeric value of "
"each component of the release segment in turn. When comparing release "
"segments with different numbers of components, the shorter segment is padded"
" out with additional zeros as necessary."
msgstr ""

#: ../source/specifications/version-specifiers.rst:199
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While any number of additional components after the first are permitted "
"under this scheme, the most common variants are to use two components "
"(\"major.minor\") or three components (\"major.minor.micro\")."
msgstr ""

#: ../source/specifications/version-specifiers.rst:203
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For example::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:218
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A release series is any set of final release numbers that start with a "
"common prefix. For example, ``3.3.1``, ``3.3.5`` and ``3.3.9.45`` are all "
"part of the ``3.3`` release series."
msgstr ""

#: ../source/specifications/version-specifiers.rst:224
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``X.Y`` and ``X.Y.0`` are not considered distinct release numbers, as the "
"release segment comparison rules implicit expand the two component form to "
"``X.Y.0`` when comparing it to any release segment that includes three "
"components."
msgstr ""

#: ../source/specifications/version-specifiers.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Date based release segments are also permitted. An example of a date based "
"release scheme using the year and month of the release::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:243
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pre-releases"
msgstr ""

#: ../source/specifications/version-specifiers.rst:245
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some projects use an \"alpha, beta, release candidate\" pre-release cycle to"
" support testing by their users prior to a final release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:248
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If used as part of a project's development cycle, these pre-releases are "
"indicated by including a pre-release segment in the version identifier::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:256
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version identifier that consists solely of a release segment and a pre-"
"release segment is termed a \"pre-release\"."
msgstr ""

#: ../source/specifications/version-specifiers.rst:259
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The pre-release segment consists of an alphabetical identifier for the pre-"
"release phase, along with a non-negative integer value. Pre-releases for a "
"given release are ordered first by phase (alpha, beta, release candidate) "
"and then by the numerical component within that phase."
msgstr ""

#: ../source/specifications/version-specifiers.rst:264
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Installation tools MAY accept both ``c`` and ``rc`` releases for a common "
"release segment in order to handle some existing legacy distributions."
msgstr ""

#: ../source/specifications/version-specifiers.rst:267
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Installation tools SHOULD interpret ``c`` versions as being equivalent to "
"``rc`` versions (that is, ``c1`` indicates the same version as ``rc1``)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:270
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Build tools, publication tools and index servers SHOULD disallow the "
"creation of both ``rc`` and ``c`` releases for a common release segment."
msgstr ""

#: ../source/specifications/version-specifiers.rst:275
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Post-releases"
msgstr ""

#: ../source/specifications/version-specifiers.rst:277
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some projects use post-releases to address minor errors in a final release "
"that do not affect the distributed software (for example, correcting an "
"error in the release notes)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:281
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If used as part of a project's development cycle, these post-releases are "
"indicated by including a post-release segment in the version identifier::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:286
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version identifier that includes a post-release segment without a "
"developmental release segment is termed a \"post-release\"."
msgstr ""

#: ../source/specifications/version-specifiers.rst:289
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The post-release segment consists of the string ``.post``, followed by a "
"non-negative integer value. Post-releases are ordered by their numerical "
"component, immediately following the corresponding release, and ahead of any"
" subsequent release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:296
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The use of post-releases to publish maintenance releases containing actual "
"bug fixes is strongly discouraged. In general, it is better to use a longer "
"release number and increment the final component for each maintenance "
"release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:301
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Post-releases are also permitted for pre-releases::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:309
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Creating post-releases of pre-releases is strongly discouraged, as it makes "
"the version identifier difficult to parse for human readers. In general, it "
"is substantially clearer to simply create a new pre-release by incrementing "
"the numeric component."
msgstr ""

#: ../source/specifications/version-specifiers.rst:316
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Developmental releases"
msgstr ""

#: ../source/specifications/version-specifiers.rst:318
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some projects make regular developmental releases, and system packagers "
"(especially for Linux distributions) may wish to create early releases "
"directly from source control which do not conflict with later project "
"releases."
msgstr ""

#: ../source/specifications/version-specifiers.rst:323
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If used as part of a project's development cycle, these developmental "
"releases are indicated by including a developmental release segment in the "
"version identifier::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:329
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version identifier that includes a developmental release segment is termed"
" a \"developmental release\"."
msgstr ""

#: ../source/specifications/version-specifiers.rst:332
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The developmental release segment consists of the string ``.dev``, followed "
"by a non-negative integer value. Developmental releases are ordered by their"
" numerical component, immediately before the corresponding release (and "
"before any pre-releases with the same release segment), and following any "
"previous release (including any post-releases)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:338
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Developmental releases are also permitted for pre-releases and post-"
"releases::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:348
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While they may be useful for continuous integration purposes, publishing "
"developmental releases of pre-releases to general purpose public index "
"servers is strongly discouraged, as it makes the version identifier "
"difficult to parse for human readers. If such a release needs to be "
"published, it is substantially clearer to instead create a new pre-release "
"by incrementing the numeric component."
msgstr ""

#: ../source/specifications/version-specifiers.rst:355
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Developmental releases of post-releases are also strongly discouraged, but "
"they may be appropriate for projects which use the post-release notation for"
" full maintenance releases which may include code changes."
msgstr ""

#: ../source/specifications/version-specifiers.rst:361
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Version epochs"
msgstr ""

#: ../source/specifications/version-specifiers.rst:363
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If included in a version identifier, the epoch appears before all other "
"components, separated from the release segment by an exclamation mark::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:368
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "If no explicit epoch is given, the implicit epoch is ``0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:370
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Most version identifiers will not include an epoch, as an explicit epoch is "
"only needed if a project *changes* the way it handles version numbering in a"
" way that means the normal version ordering rules will give the wrong "
"answer. For example, if a project is using date based versions like "
"``2014.04`` and would like to switch to semantic versions like ``1.0``, then"
" the new releases would be identified as *older* than the date based "
"releases when using the normal sorting scheme::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:384
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, by specifying an explicit epoch, the sort order can be changed "
"appropriately, as all versions from a later epoch are sorted after versions "
"from an earlier epoch::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:398
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Normalization"
msgstr ""

#: ../source/specifications/version-specifiers.rst:400
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to maintain better compatibility with existing versions there are a"
" number of \"alternative\" syntaxes that MUST be taken into account when "
"parsing versions. These syntaxes MUST be considered when parsing a version, "
"however they should be \"normalized\" to the standard syntax defined above."
msgstr ""

#: ../source/specifications/version-specifiers.rst:407
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Case sensitivity"
msgstr ""

#: ../source/specifications/version-specifiers.rst:409
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All ascii letters should be interpreted case insensitively within a version "
"and the normal form is lowercase. This allows versions such as ``1.1RC1`` "
"which would be normalized to ``1.1rc1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:415
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Integer Normalization"
msgstr ""

#: ../source/specifications/version-specifiers.rst:417
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All integers are interpreted via the ``int()`` built in and normalize to the"
" string form of the output. This means that an integer version of ``00`` "
"would normalize to ``0`` while ``09000`` would normalize to ``9000``. This "
"does not hold true for integers inside of an alphanumeric segment of a local"
" version such as ``1.0+foo0100`` which is already in its normalized form."
msgstr ""

#: ../source/specifications/version-specifiers.rst:425
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pre-release separators"
msgstr ""

#: ../source/specifications/version-specifiers.rst:427
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pre-releases should allow a ``.``, ``-``, or ``_`` separator between the "
"release segment and the pre-release segment. The normal form for this is "
"without a separator. This allows versions such as ``1.1.a1`` or ``1.1-a1`` "
"which would be normalized to ``1.1a1``. It should also allow a separator to "
"be used between the pre-release signifier and the numeral. This allows "
"versions such as ``1.0a.1`` which would be normalized to ``1.0a1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:436
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Pre-release spelling"
msgstr ""

#: ../source/specifications/version-specifiers.rst:438
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pre-releases allow the additional spellings of ``alpha``, ``beta``, ``c``, "
"``pre``, and ``preview`` for ``a``, ``b``, ``rc``, ``rc``, and ``rc`` "
"respectively. This allows versions such as ``1.1alpha1``, ``1.1beta2``, or "
"``1.1c3`` which normalize to ``1.1a1``, ``1.1b2``, and ``1.1rc3``. In every "
"case the additional spelling should be considered equivalent to their normal"
" forms."
msgstr ""

#: ../source/specifications/version-specifiers.rst:447
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Implicit pre-release number"
msgstr ""

#: ../source/specifications/version-specifiers.rst:449
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pre releases allow omitting the numeral in which case it is implicitly "
"assumed to be ``0``. The normal form for this is to include the ``0`` "
"explicitly. This allows versions such as ``1.2a`` which is normalized to "
"``1.2a0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:455
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Post release separators"
msgstr ""

#: ../source/specifications/version-specifiers.rst:457
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Post releases allow a ``.``, ``-``, or ``_`` separator as well as omitting "
"the separator all together. The normal form of this is with the ``.`` "
"separator. This allows versions such as ``1.2-post2`` or ``1.2post2`` which "
"normalize to ``1.2.post2``. Like the pre-release separator this also allows "
"an optional separator between the post release signifier and the numeral. "
"This allows versions like ``1.2.post-2`` which would normalize to "
"``1.2.post2``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:466
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Post release spelling"
msgstr ""

#: ../source/specifications/version-specifiers.rst:468
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Post-releases allow the additional spellings of ``rev`` and ``r``. This "
"allows versions such as ``1.0-r4`` which normalizes to ``1.0.post4``. As "
"with the pre-releases the additional spellings should be considered "
"equivalent to their normal forms."
msgstr ""

#: ../source/specifications/version-specifiers.rst:475
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Implicit post release number"
msgstr ""

#: ../source/specifications/version-specifiers.rst:477
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Post releases allow omitting the numeral in which case it is implicitly "
"assumed to be ``0``. The normal form for this is to include the ``0`` "
"explicitly. This allows versions such as ``1.2.post`` which is normalized to"
" ``1.2.post0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:483
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Implicit post releases"
msgstr ""

#: ../source/specifications/version-specifiers.rst:485
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Post releases allow omitting the ``post`` signifier all together. When using"
" this form the separator MUST be ``-`` and no other form is allowed. This "
"allows versions such as ``1.0-1`` to be normalized to ``1.0.post1``. This "
"particular normalization MUST NOT be used in conjunction with the implicit "
"post release number rule. In other words, ``1.0-`` is *not* a valid version "
"and it does *not* normalize to ``1.0.post0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:494
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Development release separators"
msgstr ""

#: ../source/specifications/version-specifiers.rst:496
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Development releases allow a ``.``, ``-``, or a ``_`` separator as well as "
"omitting the separator all together. The normal form of this is with the "
"``.`` separator. This allows versions such as ``1.2-dev2`` or ``1.2dev2`` "
"which normalize to ``1.2.dev2``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:503
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Implicit development release number"
msgstr ""

#: ../source/specifications/version-specifiers.rst:505
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Development releases allow omitting the numeral in which case it is "
"implicitly assumed to be ``0``. The normal form for this is to include the "
"``0`` explicitly. This allows versions such as ``1.2.dev`` which is "
"normalized to ``1.2.dev0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:512
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Local version segments"
msgstr ""

#: ../source/specifications/version-specifiers.rst:514
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"With a local version, in addition to the use of ``.`` as a separator of "
"segments, the use of ``-`` and ``_`` is also acceptable. The normal form is "
"using the ``.`` character. This allows versions such as ``1.0+ubuntu-1`` to "
"be normalized to ``1.0+ubuntu.1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:521
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Preceding v character"
msgstr ""

#: ../source/specifications/version-specifiers.rst:523
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In order to support the common version notation of ``v1.0`` versions may be "
"preceded by a single literal ``v`` character. This character MUST be ignored"
" for all purposes and should be omitted from all normalized forms of the "
"version. The same version with and without the ``v`` is considered "
"equivalent."
msgstr ""

#: ../source/specifications/version-specifiers.rst:530
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Leading and Trailing Whitespace"
msgstr ""

#: ../source/specifications/version-specifiers.rst:532
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Leading and trailing whitespace must be silently ignored and removed from "
"all normalized forms of a version. This includes ``\" \"``, ``\\t``, "
"``\\n``, ``\\r``, ``\\f``, and ``\\v``. This allows accidental whitespace to"
" be handled sensibly, such as a version like ``1.0\\n`` which normalizes to "
"``1.0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:539
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Examples of compliant version schemes"
msgstr ""

#: ../source/specifications/version-specifiers.rst:541
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The standard version scheme is designed to encompass a wide range of "
"identification practices across public and private Python projects. In "
"practice, a single project attempting to use the full flexibility offered by"
" the scheme would create a situation where human users had difficulty "
"figuring out the relative order of versions, even though the rules above "
"ensure all compliant tools will order them consistently."
msgstr ""

#: ../source/specifications/version-specifiers.rst:548
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following examples illustrate a small selection of the different "
"approaches projects may choose to identify their releases, while still "
"ensuring that the \"latest release\" and the \"latest stable release\" can "
"be easily determined, both by human users and automated tools."
msgstr ""

#: ../source/specifications/version-specifiers.rst:553
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Simple \"major.minor\" versioning::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:562
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Simple \"major.minor.micro\" versioning::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:570
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "\"major.minor\" versioning with alpha, beta and candidate pre-releases::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:582
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"major.minor\" versioning with developmental releases, release candidates "
"and post-releases for minor corrections::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:597
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Date based releases, using an incrementing serial within each year, skipping"
" zero::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:611
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Summary of permitted suffixes and relative ordering"
msgstr ""

#: ../source/specifications/version-specifiers.rst:615
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section is intended primarily for authors of tools that automatically "
"process distribution metadata, rather than developers of Python "
"distributions deciding on a versioning scheme."
msgstr ""

#: ../source/specifications/version-specifiers.rst:619
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The epoch segment of version identifiers MUST be sorted according to the "
"numeric value of the given epoch. If no epoch segment is present, the "
"implicit numeric value is ``0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:623
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The release segment of version identifiers MUST be sorted in the same order "
"as Python's tuple sorting when the normalized release segment is parsed as "
"follows::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:629
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All release segments involved in the comparison MUST be converted to a "
"consistent length by padding shorter segments with zeros as needed."
msgstr ""

#: ../source/specifications/version-specifiers.rst:632
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Within a numeric release (``1.0``, ``2.7.3``), the following suffixes are "
"permitted and MUST be ordered as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:637
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that ``c`` is considered to be semantically equivalent to ``rc`` and "
"must be sorted as if it were ``rc``. Tools MAY reject the case of having the"
" same ``N`` for both a ``c`` and a ``rc`` in the same release segment as "
"ambiguous and remain in compliance with the specification."
msgstr ""

#: ../source/specifications/version-specifiers.rst:642
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Within an alpha (``1.0a1``), beta (``1.0b1``), or release candidate "
"(``1.0rc1``, ``1.0c1``), the following suffixes are permitted and MUST be "
"ordered as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:648
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Within a post-release (``1.0.post1``), the following suffixes are permitted "
"and MUST be ordered as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:653
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that ``devN`` and ``postN`` MUST always be preceded by a dot, even when"
" used immediately following a numeric version (e.g. ``1.0.dev456``, "
"``1.0.post1``)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:657
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Within a pre-release, post-release or development release segment with a "
"shared prefix, ordering MUST be by the value of the numeric component."
msgstr ""

#: ../source/specifications/version-specifiers.rst:660
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The following example covers many of the possible combinations::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:685
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Version ordering across different metadata versions"
msgstr ""

#: ../source/specifications/version-specifiers.rst:687
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Metadata v1.0 (:pep:`241`) and metadata v1.1 (:pep:`314`) do not specify a "
"standard version identification or ordering scheme. However metadata v1.2 "
"(:pep:`345`) does specify a scheme which is defined in :pep:`386`."
msgstr ""

#: ../source/specifications/version-specifiers.rst:691
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Due to the nature of the simple installer API it is not possible for an "
"installer to be aware of which metadata version a particular distribution "
"was using. Additionally installers required the ability to create a "
"reasonably prioritized list that includes all, or as many as possible, "
"versions of a project to determine which versions it should install. These "
"requirements necessitate a standardization across one parsing mechanism to "
"be used for all versions of a project."
msgstr ""

#: ../source/specifications/version-specifiers.rst:699
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Due to the above, this specification MUST be used for all versions of "
"metadata and supersedes :pep:`386` even for metadata v1.2. Tools SHOULD "
"ignore any versions which cannot be parsed by the rules in this "
"specification, but MAY fall back to implementation defined version parsing "
"and ordering schemes if no versions complying with this specification are "
"available."
msgstr ""

#: ../source/specifications/version-specifiers.rst:705
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Distribution users may wish to explicitly remove non-compliant versions from"
" any private package indexes they control."
msgstr ""

#: ../source/specifications/version-specifiers.rst:710
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Compatibility with other version schemes"
msgstr ""

#: ../source/specifications/version-specifiers.rst:712
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some projects may choose to use a version scheme which requires translation "
"in order to comply with the public version scheme defined in this "
"specification. In such cases, the project specific version can be stored in "
"the metadata while the translated public version is published in the version"
" field."
msgstr ""

#: ../source/specifications/version-specifiers.rst:717
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This allows automated distribution tools to provide consistently correct "
"ordering of published releases, while still allowing developers to use the "
"internal versioning scheme they prefer for their projects."
msgstr ""

#: ../source/specifications/version-specifiers.rst:725
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Semantic versioning`_ is a popular version identification scheme that is "
"more prescriptive than this specification regarding the significance of "
"different elements of a release number. Even if a project chooses not to "
"abide by the details of semantic versioning, the scheme is worth "
"understanding as it covers many of the issues that can arise when depending "
"on other distributions, and when publishing a distribution that others rely "
"on."
msgstr ""

#: ../source/specifications/version-specifiers.rst:732
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The \"Major.Minor.Patch\" (described in this specification as "
"\"major.minor.micro\") aspects of semantic versioning (clauses 1-8 in the "
"2.0.0 specification) are fully compatible with the version scheme defined in"
" this specification, and abiding by these aspects is encouraged."
msgstr ""

#: ../source/specifications/version-specifiers.rst:737
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Semantic versions containing a hyphen (pre-releases - clause 10) or a plus "
"sign (builds - clause 11) are *not* compatible with this specification and "
"are not permitted in the public version field."
msgstr ""

#: ../source/specifications/version-specifiers.rst:741
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"One possible mechanism to translate such semantic versioning based source "
"labels to compatible public versions is to use the ``.devN`` suffix to "
"specify the appropriate version order."
msgstr ""

#: ../source/specifications/version-specifiers.rst:745
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Specific build information may also be included in local version labels."
msgstr ""

#: ../source/specifications/version-specifiers.rst:751
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "DVCS based version labels"
msgstr ""

#: ../source/specifications/version-specifiers.rst:753
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Many build tools integrate with distributed version control systems like Git"
" and Mercurial in order to add an identifying hash to the version "
"identifier. As hashes cannot be ordered reliably such versions are not "
"permitted in the public version field."
msgstr ""

#: ../source/specifications/version-specifiers.rst:758
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As with semantic versioning, the public ``.devN`` suffix may be used to "
"uniquely identify such releases for publication, while the original DVCS "
"based label can be stored in the project metadata."
msgstr ""

#: ../source/specifications/version-specifiers.rst:762
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Identifying hash information may also be included in local version labels."
msgstr ""

#: ../source/specifications/version-specifiers.rst:766
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Olson database versioning"
msgstr ""

#: ../source/specifications/version-specifiers.rst:768
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``pytz`` project inherits its versioning scheme from the corresponding "
"Olson timezone database versioning scheme: the year followed by a lowercase "
"character indicating the version of the database within that year."
msgstr ""

#: ../source/specifications/version-specifiers.rst:772
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This can be translated to a compliant public version identifier as "
"``<year>.<serial>``, where the serial starts at zero or one (for the "
"'<year>a' release) and is incremented with each subsequent database update "
"within the year."
msgstr ""

#: ../source/specifications/version-specifiers.rst:777
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As with other translated version identifiers, the corresponding Olson "
"database version could be recorded in the project metadata."
msgstr ""

#: ../source/specifications/version-specifiers.rst:784
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version specifier consists of a series of version clauses, separated by "
"commas. For example::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:789
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The comparison operator determines the kind of version clause:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:791
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``~=``: `Compatible release`_ clause"
msgstr ""

#: ../source/specifications/version-specifiers.rst:792
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``==``: `Version matching`_ clause"
msgstr ""

#: ../source/specifications/version-specifiers.rst:793
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``!=``: `Version exclusion`_ clause"
msgstr ""

#: ../source/specifications/version-specifiers.rst:794
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``<=``, ``>=``: `Inclusive ordered comparison`_ clause"
msgstr ""

#: ../source/specifications/version-specifiers.rst:795
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``<``, ``>``: `Exclusive ordered comparison`_ clause"
msgstr ""

#: ../source/specifications/version-specifiers.rst:796
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``===``: `Arbitrary equality`_ clause."
msgstr ""

#: ../source/specifications/version-specifiers.rst:798
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The comma (\",\") is equivalent to a logical **and** operator: a candidate "
"version must match all given version clauses in order to match the specifier"
" as a whole."
msgstr ""

#: ../source/specifications/version-specifiers.rst:802
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Whitespace between a conditional operator and the following version "
"identifier is optional, as is the whitespace around the commas."
msgstr ""

#: ../source/specifications/version-specifiers.rst:805
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When multiple candidate versions match a version specifier, the preferred "
"version SHOULD be the latest version as determined by the consistent "
"ordering defined by the standard `Version scheme`_. Whether or not pre-"
"releases are considered as candidate versions SHOULD be handled as described"
" in `Handling of pre-releases`_."
msgstr ""

#: ../source/specifications/version-specifiers.rst:811
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Except where specifically noted below, local version identifiers MUST NOT be"
" permitted in version specifiers, and local version labels MUST be ignored "
"entirely when checking if candidate versions match a given version "
"specifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:820
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Compatible release"
msgstr ""

#: ../source/specifications/version-specifiers.rst:822
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A compatible release clause consists of the compatible release operator "
"``~=`` and a version identifier. It matches any candidate version that is "
"expected to be compatible with the specified version."
msgstr ""

#: ../source/specifications/version-specifiers.rst:826
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The specified version identifier must be in the standard format described in"
" `Version scheme`_. Local version identifiers are NOT permitted in this "
"version specifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:830
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For a given release identifier ``V.N``, the compatible release clause is "
"approximately equivalent to the pair of comparison clauses::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:835
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This operator MUST NOT be used with a single segment version number such as "
"``~=1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:838
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For example, the following groups of version clauses are equivalent::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:846
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If a pre-release, post-release or developmental release is named in a "
"compatible release clause as ``V.N.suffix``, then the suffix is ignored when"
" determining the required prefix match::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:856
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The padding rules for release segment comparisons means that the assumed "
"degree of forward compatibility in a compatible release clause can be "
"controlled by appending additional zeros to the version specifier::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:868
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Version matching"
msgstr ""

#: ../source/specifications/version-specifiers.rst:870
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version matching clause includes the version matching operator ``==`` and "
"a version identifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:873
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The specified version identifier must be in the standard format described in"
" `Version scheme`_, but a trailing ``.*`` is permitted on public version "
"identifiers as described below."
msgstr ""

#: ../source/specifications/version-specifiers.rst:877
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"By default, the version matching operator is based on a strict equality "
"comparison: the specified version must be exactly the same as the requested "
"version. The *only* substitution performed is the zero padding of the "
"release segment to ensure the release segments are compared with the same "
"length."
msgstr ""

#: ../source/specifications/version-specifiers.rst:883
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Whether or not strict version matching is appropriate depends on the "
"specific use case for the version specifier. Automated tools SHOULD at least"
" issue warnings and MAY reject them entirely when strict version matches are"
" used inappropriately."
msgstr ""

#: ../source/specifications/version-specifiers.rst:888
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Prefix matching may be requested instead of strict comparison, by appending "
"a trailing ``.*`` to the version identifier in the version matching clause. "
"This means that additional trailing segments will be ignored when "
"determining whether or not a version identifier matches the clause. If the "
"specified version includes only a release segment, then trailing components "
"(or the lack thereof) in the release segment are also ignored."
msgstr ""

#: ../source/specifications/version-specifiers.rst:895
#: ../source/specifications/version-specifiers.rst:956
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For example, given the version ``1.1.post1``, the following clauses would "
"match or not as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:902
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For purposes of prefix matching, the pre-release segment is considered to "
"have an implied preceding ``.``, so given the version ``1.1a1``, the "
"following clauses would match or not as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:910
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An exact match is also considered a prefix match (this interpretation is "
"implied by the usual zero padding rules for the release segment of version "
"identifiers). Given the version ``1.1``, the following clauses would match "
"or not as shown::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:922
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is invalid to have a prefix match containing a development or local "
"release such as ``1.0.dev1.*`` or ``1.0+foo1.*``. If present, the "
"development release segment is always the final segment in the public "
"version, and the local version is ignored for comparison purposes, so using "
"either in a prefix match wouldn't make any sense."
msgstr ""

#: ../source/specifications/version-specifiers.rst:928
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The use of ``==`` (without at least the wildcard suffix) when defining "
"dependencies for published distributions is strongly discouraged as it "
"greatly complicates the deployment of security fixes. The strict version "
"comparison operator is intended primarily for use when defining dependencies"
" for repeatable *deployments of applications* while using a shared "
"distribution index."
msgstr ""

#: ../source/specifications/version-specifiers.rst:935
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the specified version identifier is a public version identifier (no local"
" version label), then the local version label of any candidate versions MUST"
" be ignored when matching versions."
msgstr ""

#: ../source/specifications/version-specifiers.rst:939
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If the specified version identifier is a local version identifier, then the "
"local version labels of candidate versions MUST be considered when matching "
"versions, with the public version identifier being matched as described "
"above, and the local version label being checked for equivalence using a "
"strict string equality comparison."
msgstr ""

#: ../source/specifications/version-specifiers.rst:947
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Version exclusion"
msgstr ""

#: ../source/specifications/version-specifiers.rst:949
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A version exclusion clause includes the version exclusion operator ``!=`` "
"and a version identifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:952
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The allowed version identifiers and comparison semantics are the same as "
"those of the `Version matching`_ operator, except that the sense of any "
"match is inverted."
msgstr ""

#: ../source/specifications/version-specifiers.rst:965
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Inclusive ordered comparison"
msgstr ""

#: ../source/specifications/version-specifiers.rst:967
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An inclusive ordered comparison clause includes a comparison operator and a "
"version identifier, and will match any version where the comparison is "
"correct based on the relative position of the candidate version and the "
"specified version given the consistent ordering defined by the standard "
"`Version scheme`_."
msgstr ""

#: ../source/specifications/version-specifiers.rst:973
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The inclusive ordered comparison operators are ``<=`` and ``>=``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:975
#: ../source/specifications/version-specifiers.rst:1005
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As with version matching, the release segment is zero padded as necessary to"
" ensure the release segments are compared with the same length."
msgstr ""

#: ../source/specifications/version-specifiers.rst:978
#: ../source/specifications/version-specifiers.rst:1008
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Local version identifiers are NOT permitted in this version specifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:982
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Exclusive ordered comparison"
msgstr ""

#: ../source/specifications/version-specifiers.rst:984
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The exclusive ordered comparisons ``>`` and ``<`` are similar to the "
"inclusive ordered comparisons in that they rely on the relative position of "
"the candidate version and the specified version given the consistent "
"ordering defined by the standard `Version scheme`_. However, they "
"specifically exclude pre-releases, post-releases, and local versions of the "
"specified version."
msgstr ""

#: ../source/specifications/version-specifiers.rst:990
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The exclusive ordered comparison ``>V`` **MUST NOT** allow a post-release of"
" the given version unless ``V`` itself is a post release. You may mandate "
"that releases are later than a particular post release, including additional"
" post releases, by using ``>V.postN``. For example, ``>1.7`` will allow "
"``1.7.1`` but not ``1.7.0.post1`` and ``>1.7.post2`` will allow ``1.7.1`` "
"and ``1.7.0.post3`` but not ``1.7.0``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:997
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The exclusive ordered comparison ``>V`` **MUST NOT** match a local version "
"of the specified version."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1000
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The exclusive ordered comparison ``<V`` **MUST NOT** allow a pre-release of "
"the specified version unless the specified version is itself a pre-release. "
"Allowing pre-releases that are earlier than, but not equal to a specific "
"pre-release may be accomplished by using ``<V.rc1`` or similar."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1012
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Arbitrary equality"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1014
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Arbitrary equality comparisons are simple string equality operations which "
"do not take into account any of the semantic information such as zero "
"padding or local versions. This operator also does not support prefix "
"matching as the ``==`` operator does."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1019
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The primary use case for arbitrary equality is to allow for specifying a "
"version which cannot otherwise be represented by this specification. This "
"operator is special and acts as an escape hatch to allow someone using a "
"tool which implements this specification to still install a legacy version "
"which is otherwise incompatible with this specification."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1025
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"An example would be ``===foobar`` which would match a version of ``foobar``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1027
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This operator may also be used to explicitly require an unpatched version of"
" a project such as ``===1.0`` which would not match for a version "
"``1.0+downstream1``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1031
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Use of this operator is heavily discouraged and tooling MAY display a "
"warning when it is used."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1036
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Handling of pre-releases"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1038
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pre-releases of any kind, including developmental releases, are implicitly "
"excluded from all version specifiers, *unless* they are already present on "
"the system, explicitly requested by the user, or if the only available "
"version that satisfies the version specifier is a pre-release."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1043
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "By default, dependency resolution tools SHOULD:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1045
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "accept already installed pre-releases for all version specifiers"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1046
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"accept remotely available pre-releases for version specifiers where there is"
" no final or post release that satisfies the version specifier"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1048
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "exclude all other pre-releases from consideration"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1050
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Dependency resolution tools MAY issue a warning if a pre-release is needed "
"to satisfy a version specifier."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1053
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Dependency resolution tools SHOULD also allow users to request the following"
" alternative behaviours:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1056
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "accepting pre-releases for all version specifiers"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1057
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"excluding pre-releases for all version specifiers (reporting an error or "
"warning if a pre-release is already installed locally, or if a pre-release "
"is the only way to satisfy a particular specifier)"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1061
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Dependency resolution tools MAY also allow the above behaviour to be "
"controlled on a per-distribution basis."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1064
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Post-releases and final releases receive no special treatment in version "
"specifiers - they are always included unless explicitly excluded."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1071
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``~=3.1``: version 3.1 or later, but not version 4.0 or later."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1072
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``~=3.1.2``: version 3.1.2 or later, but not version 3.2.0 or later."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1073
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``~=3.1a1``: version 3.1a1 or later, but not version 4.0 or later."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1074
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``== 3.1``: specifically version 3.1 (or 3.1.0), excludes all pre-releases, "
"post releases, developmental releases and any 3.1.x maintenance releases."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1076
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``== 3.1.*``: any version that starts with 3.1. Equivalent to the "
"``~=3.1.0`` compatible release clause."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1078
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``~=3.1.0, != 3.1.3``: version 3.1.0 or later, but not version 3.1.3 and not"
" version 3.2.0 or later."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1083
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Direct references"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1085
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some automated tools may permit the use of a direct reference as an "
"alternative to a normal version specifier. A direct reference consists of "
"the specifier ``@`` and an explicit URL."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1089
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Whether or not direct references are appropriate depends on the specific use"
" case for the version specifier. Automated tools SHOULD at least issue "
"warnings and MAY reject them entirely when direct references are used "
"inappropriately."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1094
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Public index servers SHOULD NOT allow the use of direct references in "
"uploaded distributions. Direct references are intended as a tool for "
"software integrators rather than publishers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1098
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Depending on the use case, some appropriate targets for a direct URL "
"reference may be an sdist or a wheel binary archive. The exact URLs and "
"targets supported will be tool dependent."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1102
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "For example, a local source archive may be referenced directly::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1106
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Alternatively, a prebuilt archive may also be referenced::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1110
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"All direct references that do not refer to a local file URL SHOULD specify a"
" secure transport mechanism (such as ``https``) AND include an expected hash"
" value in the URL for verification purposes. If a direct reference is "
"specified without any hash information, with hash information that the tool "
"doesn't understand, or with a selected hash algorithm that the tool "
"considers too weak to trust, automated tools SHOULD at least emit a warning "
"and MAY refuse to rely on the URL. If such a direct reference also uses an "
"insecure transport, automated tools SHOULD NOT rely on the URL."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It is RECOMMENDED that only hashes which are unconditionally provided by the"
" latest version of the standard library's :py:mod:`hashlib` module be used "
"for source archive hashes. At time of writing, that list consists of "
"``'md5'``, ``'sha1'``, ``'sha224'``, ``'sha256'``, ``'sha384'``, and "
"``'sha512'``."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For source archive and wheel references, an expected hash value may be "
"specified by including a ``<hash-algorithm>=<expected-hash>`` entry as part "
"of the URL fragment."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For version control references, the ``VCS+protocol`` scheme SHOULD be used "
"to identify both the version control system and the secure transport, and a "
"version control system with hash based commit identifiers SHOULD be used. "
"Automated tools MAY omit warnings about missing hashes for version control "
"systems that do not provide hash based commit identifiers."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1135
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To handle version control systems that do not support including commit or "
"tag references directly in the URL, that information may be appended to the "
"end of the URL using the ``@<commit-hash>`` or the ``@<tag>#<commit-hash>`` "
"notation."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This isn't *quite* the same as the existing VCS reference notation supported"
" by pip. Firstly, the distribution name is moved in front rather than "
"embedded as part of the URL. Secondly, the commit hash is included even when"
" retrieving based on a tag, in order to meet the requirement above that "
"*every* link should include a hash to make things harder to forge (creating "
"a malicious repo with a particular tag is easy, creating one with a specific"
" *hash*, less so)."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1150
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Remote URL examples::"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1158
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "File URLs"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1160
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"File URLs take the form of ``file://<host>/<path>``. If the ``<host>`` is "
"omitted it is assumed to be ``localhost`` and even if the ``<host>`` is "
"omitted the third slash MUST still exist. The ``<path>`` defines what the "
"file path on the filesystem that is to be accessed."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1165
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On the various \\*nix operating systems the only allowed values for "
"``<host>`` is for it to be omitted, ``localhost``, or another FQDN that the "
"current machine believes matches its own host. In other words, on \\*nix the"
" ``file://`` scheme can only be used to access paths on the local machine."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1170
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On Windows the file format should include the drive letter if applicable as "
"part of the ``<path>`` (e.g. ``file:///c:/path/to/a/file``). Unlike \\*nix "
"on Windows the ``<host>`` parameter may be used to specify a file residing "
"on a network share. In other words, in order to translate "
"``\\\\machine\\volume\\file`` to a ``file://`` url, it would end up as "
"``file://machine/volume/file``. For more information on ``file://`` URLs on "
"Windows see `MSDN "
"<https://web.archive.org/web/20130321051043/http://blogs.msdn.com/b/ie/archive/2006/12/06/file-"
"uris-in-windows.aspx>`_."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1181
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Summary of differences from pkg_resources.parse_version"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1183
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note: this comparison is to ``pkg_resources.parse_version`` as it existed at"
" the time :pep:`440` was written. After the PEP was accepted, setuptools 6.0"
" and later versions adopted the behaviour described here."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1187
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Local versions sort differently, this specification requires that they sort "
"as greater than the same version without a local version, whereas "
"``pkg_resources.parse_version`` considers it a pre-release marker."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1191
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This specification purposely restricts the syntax which constitutes a valid "
"version while ``pkg_resources.parse_version`` attempts to provide some "
"meaning from *any* arbitrary string."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1195
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``pkg_resources.parse_version`` allows arbitrarily deeply nested version "
"signifiers like ``1.0.dev1.post1.dev5``. This specification however allows "
"only a single use of each type and they must exist in a certain order."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1204
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Appendix: Parsing version strings with regular expressions"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1206
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As noted earlier in the :ref:`public-version-identifiers` section, published"
" version identifiers SHOULD use the canonical format. This section provides "
"regular expressions that can be used to test whether a version is already in"
" that form, and if it's not, extract the various components for subsequent "
"normalization."
msgstr ""

#: ../source/specifications/version-specifiers.rst:1212
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To test whether a version identifier is in the canonical format, you can use"
" the following function:"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1221
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To extract the components of a version identifier, use the following regular"
" expression (as defined by the `packaging "
"<https://github.com/pypa/packaging>`_ project):"
msgstr ""

#: ../source/specifications/version-specifiers.rst:1268
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "August 2014: This specification was approved through :pep:`440`."
msgstr ""

#: ../source/specifications/virtual-environments.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Python Virtual Environments"
msgstr ""

#: ../source/specifications/virtual-environments.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For Python 3.3 and later versions, :pep:`405` introduced interpreter level "
"support for the concept of \"Python Virtual Environments\". Each virtual "
"environment has its own Python binary (allowing creation of environments "
"with various Python versions) and can have its own independent set of "
"installed Python packages in its site directories, but shares the standard "
"library with the base installed Python. While the concept of virtual "
"environments existed prior to this update, there was no previously "
"standardised mechanism for declaring or discovering them."
msgstr ""

#: ../source/specifications/virtual-environments.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Runtime detection of virtual environments"
msgstr ""

#: ../source/specifications/virtual-environments.rst:20
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"At runtime, virtual environments can be identified by virtue of "
":py:data:`sys.prefix` (the filesystem location of the running interpreter) "
"having a different value from :py:data:`sys.base_prefix` (the default "
"filesystem location of the standard library directories)."
msgstr ""

#: ../source/specifications/virtual-environments.rst:25
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`venv-explanation` in the Python standard library documentation for the"
" :py:mod:`venv` module covers this along with the concept of \"activating\" "
"a virtual environment in an interactive operating system shell (this "
"activation step is optional and hence the changes it makes can't be reliably"
" used to detect whether a Python program is running in a virtual environment"
" or not)."
msgstr ""

#: ../source/specifications/virtual-environments.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Declaring installation environments as Python virtual environments"
msgstr ""

#: ../source/specifications/virtual-environments.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"As described in :pep:`405`, a Python virtual environment in its simplest "
"form consists of nothing more than a copy or symlink of the Python binary "
"accompanied by a ``site-packages`` directory and a ``pyvenv.cfg`` file with "
"a ``home`` key that indicates where to find the Python standard library "
"modules."
msgstr ""

#: ../source/specifications/virtual-environments.rst:40
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While designed to meet the needs of the standard :py:mod:`venv` module, this"
" split installation and ``pyvenv.cfg`` file approach can be used by *any* "
"Python installation provider that desires Python-specific tools to be aware "
"that they are already operating in a virtual environment and no further "
"environment nesting is required or desired."
msgstr ""

#: ../source/specifications/virtual-environments.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Even in the absence of a ``pyvenv.cfg`` file, any approach (e.g. "
"``sitecustomize.py``, patching the installed Python runtime) that results in"
" :py:data:`sys.prefix` and :py:data:`sys.base_prefix` having different "
"values, while still providing a matching default package installation scheme"
" in :py:mod:`sysconfig`, will be detected and behave as a Python virtual "
"environment."
msgstr ""

#: ../source/specifications/virtual-environments.rst:56
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "May 2012: This specification was approved through :pep:`405`."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Well-known Project URLs in Metadata"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This document is primarily of interest to metadata *consumers*, who should "
"use the normalization rules and well-known list below to make their "
"presentation of project URLs consistent across the Python ecosystem."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:14
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Metadata *producers* (such as build tools and individual package "
"maintainers) may continue to use any labels they please, within the overall "
"``Project-URL`` length restrictions. However, when possible, users are "
"*encouraged* to pick meaningful labels that normalize to well-known labels."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:22
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See :ref:`Writing your pyproject.toml - urls <writing-pyproject-toml-urls>` "
"for user-oriented guidance on choosing project URL labels in your package's "
"metadata."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "This specification was originally defined in :pep:`753`."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:28
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":pep:`753` deprecates the :ref:`core-metadata-home-page` and :ref:`core-"
"metadata-download-url` metadata fields in favor of :ref:`core-metadata-"
"project-url`, and defines a normalization and lookup procedure for "
"determining whether a ``Project-URL`` is \"well-known,\" i.e. has the "
"semantics assigned to ``Home-page``, ``Download-URL``, or other common "
"project URLs."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This allows indices (such as the Python Package Index) and other downstream "
"metadata consumers to present project URLs in a consistent manner."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:42
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Label normalization"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:46
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Label normalization is performed by metadata *consumers*, not metadata "
"producers."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To determine whether a ``Project-URL`` label is \"well-known,\" metadata "
"consumers should normalize the label before comparing it to the :ref:`list "
"of well-known labels <well-known-labels>`."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The normalization procedure for ``Project-URL`` labels is defined by the "
"following Python function:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:65
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In plain language: a label is *normalized* by deleting all ASCII punctuation"
" and whitespace, and then converting the result to lowercase."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following table shows examples of labels before (raw) and after "
"normalization:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:74
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Raw"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Normalized"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:76
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Homepage``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:77
#: ../source/specifications/well-known-project-urls.rst:79
#: ../source/specifications/well-known-project-urls.rst:81
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``homepage``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Home-page``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:80
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Home page``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:82
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Change_Log``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``changelog``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:84
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``What's New?``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``whatsnew``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:86
#: ../source/specifications/well-known-project-urls.rst:87
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``github``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:92
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Well-known labels"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:96
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The list of well-known labels is a living standard, maintained as part of "
"this document."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:99
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following table lists labels that are well-known for the purpose of "
"specializing the presentation of ``Project-URL`` metadata:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Label (Human-readable equivalent)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:107
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Aliases"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:108
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``homepage`` (Homepage)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The project's home page"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:110
#: ../source/specifications/well-known-project-urls.rst:116
#: ../source/specifications/well-known-project-urls.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "*(none)*"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``source`` (Source Code)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The project's hosted source code or repository"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``repository``, ``sourcecode``, ``github``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:114
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``download`` (Download)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:115
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"A download URL for the current distribution, equivalent to ``Download-URL``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:117
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``changelog`` (Changelog)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:118
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The project's comprehensive changelog"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``changes``, ``whatsnew``, ``history``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:120
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``releasenotes`` (Release Notes)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:121
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The project's curated release notes"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:123
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``documentation`` (Documentation)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:124
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The project's online documentation"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:125
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``docs``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:126
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``issues`` (Issue Tracker)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:127
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The project's bug tracker"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``bugs``, ``issue``, ``tracker``, ``issuetracker``, ``bugtracker``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``funding`` (Funding)"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:130
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Funding Information"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:131
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``sponsor``, ``donate``, ``donation``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:133
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Package metadata consumers may choose to render aliased labels the same as "
"their \"parent\" well known label, or further specialize them."
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:137
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Example behavior"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The following shows the flow of project URL metadata from ``pyproject.toml``"
" to core metadata to a potential index presentation:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Example project URLs in standard configuration"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:151
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Core metadata representation"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Potential rendering"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:167
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Observe that the core metadata appears in the form provided by the user "
"(since metadata *producers* do not perform normalization), but the metadata "
"*consumer* normalizes and identifies appropriate human-readable equivalents "
"based on the normalized form:"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:172
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``Home page`` becomes ``homepage``, which is rendered as ``Homepage``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:173
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``DOCUMENTATION`` becomes ``documentation``, which is rendered as "
"``Documentation``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:174
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``Repository`` becomes ``repository``, which is rendered as ``Source Code``"
msgstr ""

#: ../source/specifications/well-known-project-urls.rst:175
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``GitHub`` becomes ``github``, which is rendered as ``Source Code (GitHub)``"
" (as a specialization of ``Source Code``)"
msgstr ""

#: ../source/support.rst:3
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "How to Get Support"
msgstr ""

#: ../source/support.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For support related to a specific project, see the links on the "
":doc:`Projects <key_projects>` page."
msgstr ""

#: ../source/support.rst:8
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For something more general, or when you're just not sure, please `open an "
"issue <https://github.com/pypa/packaging-"
"problems/issues/new?template=general_issue.yml>`_ on the `packaging-problems"
" <https://github.com/pypa/packaging-problems>`_ repository on GitHub."
msgstr ""

#: ../source/tutorials/creating-documentation.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating documentation"
msgstr ""

#: ../source/tutorials/creating-documentation.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This tutorial has been removed since it is not related to packaging and was "
"unmaintained. Please see the `Sphinx tutorial <https://www.sphinx-"
"doc.org/en/master/tutorial>`_ instead."
msgstr ""

#: ../source/tutorials/index.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Tutorials** are opinionated step-by-step guides to help you get familiar "
"with packaging concepts. For more detailed information on specific packaging"
" topics, see :doc:`/guides/index`."
msgstr ""

#: ../source/tutorials/installing-packages.rst:5
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing Packages"
msgstr ""

#: ../source/tutorials/installing-packages.rst:7
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section covers the basics of how to install Python :term:`packages "
"<Distribution Package>`."
msgstr ""

#: ../source/tutorials/installing-packages.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's important to note that the term \"package\" in this context is being "
"used to describe a bundle of software to be installed (i.e. as a synonym for"
" a :term:`distribution <Distribution Package>`). It does not refer to the "
"kind of :term:`package <Import Package>` that you import in your Python "
"source code (i.e. a container of modules). It is common in the Python "
"community to refer to a :term:`distribution <Distribution Package>` using "
"the term \"package\".  Using the term \"distribution\" is often not "
"preferred, because it can easily be confused with a Linux distribution, or "
"another larger software distribution like Python itself."
msgstr ""

#: ../source/tutorials/installing-packages.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Requirements for Installing Packages"
msgstr ""

#: ../source/tutorials/installing-packages.rst:26
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This section describes the steps to follow before installing other Python "
"packages."
msgstr ""

#: ../source/tutorials/installing-packages.rst:31
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Ensure you can run Python from the command line"
msgstr ""

#: ../source/tutorials/installing-packages.rst:33
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Before you go any further, make sure you have Python and that the expected "
"version is available from your command line. You can check this by running:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:49
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You should get some output like ``Python 3.6.3``. If you do not have Python,"
" please install the latest 3.x version from `python.org`_ or refer to the "
":ref:`Installing Python <python-guide:installation>` section of the "
"Hitchhiker's Guide to Python."
msgstr ""

#: ../source/tutorials/installing-packages.rst:53
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "If you're a newcomer and you get an error like this:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's because this command and other suggested commands in this tutorial are "
"intended to be run in a *shell* (also called a *terminal* or *console*). See"
" the Python for Beginners `getting started tutorial`_ for an introduction to"
" using your operating system's shell and interacting with Python."
msgstr ""

#: ../source/tutorials/installing-packages.rst:68
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you're using an enhanced shell like IPython or the Jupyter notebook, you "
"can run system commands like those in this tutorial by prefacing them with a"
" ``!`` character:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:78
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's recommended to write ``{sys.executable}`` rather than plain ``python`` "
"in order to ensure that commands are run in the Python installation matching"
" the currently running notebook (which may not be the same Python "
"installation that the ``python`` command refers to)."
msgstr ""

#: ../source/tutorials/installing-packages.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Due to the way most Linux distributions are handling the Python 3 migration,"
" Linux users using the system Python without creating a virtual environment "
"first should replace the ``python`` command in this tutorial with "
"``python3`` and the ``python -m pip`` command with ``python3 -m pip "
"--user``. Do *not* run any of the commands in this tutorial with ``sudo``: "
"if you get a permissions error, come back to the section on creating virtual"
" environments, set one up, and then continue with the tutorial as written."
msgstr ""

#: ../source/tutorials/installing-packages.rst:95
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Ensure you can run pip from the command line"
msgstr ""

#: ../source/tutorials/installing-packages.rst:97
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Additionally, you'll need to make sure you have :ref:`pip` available. You "
"can check this by running:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:112
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you installed Python from source, with an installer from `python.org`_, "
"or via `Homebrew`_ you should already have pip. If you're on Linux and "
"installed using your OS package manager, you may have to install pip "
"separately, see :doc:`/guides/installing-using-linux-tools`."
msgstr ""

#: ../source/tutorials/installing-packages.rst:119
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If ``pip`` isn't already installed, then first try to bootstrap it from the "
"standard library:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "If that still doesn't allow you to run ``python -m pip``:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:136
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Securely Download `get-pip.py <https://bootstrap.pypa.io/get-pip.py>`_ [1]_"
msgstr ""

#: ../source/tutorials/installing-packages.rst:139
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Run ``python get-pip.py``. [2]_  This will install or upgrade pip. "
"Additionally, it will install :ref:`setuptools` and :ref:`wheel` if they're "
"not installed already."
msgstr ""

#: ../source/tutorials/installing-packages.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Be cautious if you're using a Python install that's managed by your "
"operating system or another package manager. get-pip.py does not coordinate "
"with those tools, and may leave your system in an inconsistent state. You "
"can use ``python get-pip.py --prefix=/usr/local/`` to install in "
"``/usr/local`` which is designed for locally-installed software."
msgstr ""

#: ../source/tutorials/installing-packages.rst:154
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Ensure pip, setuptools, and wheel are up to date"
msgstr ""

#: ../source/tutorials/installing-packages.rst:156
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"While ``pip`` alone is sufficient to install from pre-built binary archives,"
" up to date copies of the ``setuptools`` and ``wheel`` projects are useful "
"to ensure you can also install from source archives:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:173
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Optionally, create a virtual environment"
msgstr ""

#: ../source/tutorials/installing-packages.rst:175
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See :ref:`section below <Creating and using Virtual Environments>` for "
"details, but here's the basic :doc:`venv <python:library/venv>` [3]_ command"
" to use on a typical Linux system:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:192
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This will create a new virtual environment in the ``tutorial_env`` "
"subdirectory, and configure the current shell to use it as the default "
"``python`` environment."
msgstr ""

#: ../source/tutorials/installing-packages.rst:199
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating Virtual Environments"
msgstr ""

#: ../source/tutorials/installing-packages.rst:201
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Python \"Virtual Environments\" allow Python :term:`packages <Distribution "
"Package>` to be installed in an isolated location for a particular "
"application, rather than being installed globally. If you are looking to "
"safely install global command line tools, see :doc:`/guides/installing-"
"stand-alone-command-line-tools`."
msgstr ""

#: ../source/tutorials/installing-packages.rst:207
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Imagine you have an application that needs version 1 of LibFoo, but another "
"application requires version 2. How can you use both these applications? If "
"you install everything into /usr/lib/python3.6/site-packages (or whatever "
"your platform’s standard location is), it’s easy to end up in a situation "
"where you unintentionally upgrade an application that shouldn’t be upgraded."
msgstr ""

#: ../source/tutorials/installing-packages.rst:213
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Or more generally, what if you want to install an application and leave it "
"be? If an application works, any change in its libraries or the versions of "
"those libraries can break the application."
msgstr ""

#: ../source/tutorials/installing-packages.rst:217
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Also, what if you can’t install :term:`packages <Distribution Package>` into"
" the global site-packages directory? For instance, on a shared host."
msgstr ""

#: ../source/tutorials/installing-packages.rst:220
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In all these cases, virtual environments can help you. They have their own "
"installation directories and they don’t share libraries with other virtual "
"environments."
msgstr ""

#: ../source/tutorials/installing-packages.rst:224
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Currently, there are two common tools for creating Python virtual "
"environments:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:226
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":doc:`venv <python:library/venv>` is available by default in Python 3.3 and "
"later, and installs :ref:`pip` into created virtual environments in Python "
"3.4 and later (Python versions prior to 3.12 also installed "
":ref:`setuptools`)."
msgstr ""

#: ../source/tutorials/installing-packages.rst:229
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`virtualenv` needs to be installed separately, but supports Python 2.7+"
" and Python 3.3+, and :ref:`pip`, :ref:`setuptools` and :ref:`wheel` are "
"always installed into created virtual environments by default (regardless of"
" Python version)."
msgstr ""

#: ../source/tutorials/installing-packages.rst:234
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "The basic usage is like so:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:236
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using :doc:`venv <python:library/venv>`:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:252
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using :ref:`virtualenv`:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:268
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more information, see the :doc:`venv <python:library/venv>` docs or the "
":doc:`virtualenv <virtualenv:index>` docs."
msgstr ""

#: ../source/tutorials/installing-packages.rst:271
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The use of :command:`source` under Unix shells ensures that the virtual "
"environment's variables are set within the current shell, and not in a "
"subprocess (which then disappears, having no useful effect)."
msgstr ""

#: ../source/tutorials/installing-packages.rst:276
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In both of the above cases, Windows users should *not* use the "
":command:`source` command, but should rather run the :command:`activate` "
"script directly from the command shell like so:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:286
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Managing multiple virtual environments directly can become tedious, so the "
":ref:`dependency management tutorial <managing-dependencies>` introduces a "
"higher level tool, :ref:`Pipenv`, that automatically manages a separate "
"virtual environment for each project and application that you work on."
msgstr ""

#: ../source/tutorials/installing-packages.rst:293
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Use pip for Installing"
msgstr ""

#: ../source/tutorials/installing-packages.rst:295
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`pip` is the recommended installer.  Below, we'll cover the most common"
" usage scenarios. For more detail, see the :doc:`pip docs <pip:index>`, "
"which includes a complete :doc:`Reference Guide <pip:cli/index>`."
msgstr ""

#: ../source/tutorials/installing-packages.rst:301
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing from PyPI"
msgstr ""

#: ../source/tutorials/installing-packages.rst:303
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The most common usage of :ref:`pip` is to install from the :term:`Python "
"Package Index <Python Package Index (PyPI)>` using a :term:`requirement "
"specifier <Requirement Specifier>`. Generally speaking, a requirement "
"specifier is composed of a project name followed by an optional "
":term:`version specifier <Version Specifier>`.  A full description of the "
"supported specifiers can be found in the :ref:`Version specifier "
"specification <version-specifiers>`. Below are some examples."
msgstr ""

#: ../source/tutorials/installing-packages.rst:311
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To install the latest version of \"SomeProject\":"
msgstr ""

#: ../source/tutorials/installing-packages.rst:325
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To install a specific version:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:339
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "To install greater than or equal to one version and less than another:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:354
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To install a version that's :ref:`compatible <version-specifiers-compatible-"
"release>` with a certain version: [4]_"
msgstr ""

#: ../source/tutorials/installing-packages.rst:369
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"In this case, this means to install any version \"==1.4.*\" version that's "
"also \">=1.4.2\"."
msgstr ""

#: ../source/tutorials/installing-packages.rst:374
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Source Distributions vs Wheels"
msgstr ""

#: ../source/tutorials/installing-packages.rst:376
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`pip` can install from either :term:`Source Distributions (sdist) "
"<Source Distribution (or \"sdist\")>` or :term:`Wheels <Wheel>`, but if both"
" are present on PyPI, pip will prefer a compatible :term:`wheel <Wheel>`. "
"You can override pip`s default behavior by e.g. using its :ref:`--no-binary "
"<pip:install_--no-binary>` option."
msgstr ""

#: ../source/tutorials/installing-packages.rst:382
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":term:`Wheels <Wheel>` are a pre-built :term:`distribution <Distribution "
"Package>` format that provides faster installation compared to :term:`Source"
" Distributions (sdist) <Source Distribution (or \"sdist\")>`, especially "
"when a project contains compiled extensions."
msgstr ""

#: ../source/tutorials/installing-packages.rst:387
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If :ref:`pip` does not find a wheel to install, it will locally build a "
"wheel and cache it for future installs, instead of rebuilding the source "
"distribution in the future."
msgstr ""

#: ../source/tutorials/installing-packages.rst:395
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Upgrade an already installed ``SomeProject`` to the latest from PyPI."
msgstr ""

#: ../source/tutorials/installing-packages.rst:412
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing to the User Site"
msgstr ""

#: ../source/tutorials/installing-packages.rst:414
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To install :term:`packages <Distribution Package>` that are isolated to the "
"current user, use the ``--user`` flag:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:429
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For more information see the `User Installs "
"<https://pip.pypa.io/en/latest/user_guide/#user-installs>`_ section from the"
" pip docs."
msgstr ""

#: ../source/tutorials/installing-packages.rst:433
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that the ``--user`` flag has no effect when inside a virtual "
"environment - all installation commands will affect the virtual environment."
msgstr ""

#: ../source/tutorials/installing-packages.rst:436
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If ``SomeProject`` defines any command-line scripts or console entry points,"
" ``--user`` will cause them to be installed inside the `user base`_'s binary"
" directory, which may or may not already be present in your shell's "
":envvar:`PATH`.  (Starting in version 10, pip displays a warning when "
"installing any scripts to a directory outside :envvar:`PATH`.)  If the "
"scripts are not available in your shell after installation, you'll need to "
"add the directory to your :envvar:`PATH`:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:444
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On Linux and macOS you can find the user base binary directory by running "
"``python -m site --user-base`` and adding ``bin`` to the end. For example, "
"this will typically print ``~/.local`` (with ``~`` expanded to the absolute "
"path to your home directory) so you'll need to add ``~/.local/bin`` to your "
"``PATH``.  You can set your ``PATH`` permanently by `modifying ~/.profile`_."
msgstr ""

#: ../source/tutorials/installing-packages.rst:450
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"On Windows you can find the user base binary directory by running ``py -m "
"site --user-site`` and replacing ``site-packages`` with ``Scripts``. For "
"example, this could return "
"``C:\\Users\\Username\\AppData\\Roaming\\Python36\\site-packages`` so you "
"would need to set your ``PATH`` to include "
"``C:\\Users\\Username\\AppData\\Roaming\\Python36\\Scripts``. You can set "
"your user ``PATH`` permanently in the `Control Panel`_. You may need to log "
"out for the ``PATH`` changes to take effect."
msgstr ""

#: ../source/tutorials/installing-packages.rst:466
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Install a list of requirements specified in a :ref:`Requirements File "
"<pip:Requirements Files>`."
msgstr ""

#: ../source/tutorials/installing-packages.rst:482
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing from VCS"
msgstr ""

#: ../source/tutorials/installing-packages.rst:484
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Install a project from VCS in \"editable\" mode.  For a full breakdown of "
"the syntax, see pip's section on :ref:`VCS Support <pip:VCS Support>`."
msgstr ""

#: ../source/tutorials/installing-packages.rst:506
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing from other Indexes"
msgstr ""

#: ../source/tutorials/installing-packages.rst:508
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install from an alternate index"
msgstr ""

#: ../source/tutorials/installing-packages.rst:522
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Search an additional index during install, in addition to :term:`PyPI "
"<Python Package Index (PyPI)>`"
msgstr ""

#: ../source/tutorials/installing-packages.rst:538
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing from a local src tree"
msgstr ""

#: ../source/tutorials/installing-packages.rst:541
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Installing from local src in :doc:`Development Mode "
"<setuptools:userguide/development_mode>`, i.e. in such a way that the "
"project appears to be installed, but yet is still editable from the src "
"tree."
msgstr ""

#: ../source/tutorials/installing-packages.rst:558
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "You can also install normally from src"
msgstr ""

#: ../source/tutorials/installing-packages.rst:573
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing from local archives"
msgstr ""

#: ../source/tutorials/installing-packages.rst:575
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Install a particular source archive file."
msgstr ""

#: ../source/tutorials/installing-packages.rst:589
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Install from a local directory containing archives (and don't check "
":term:`PyPI <Python Package Index (PyPI)>`)"
msgstr ""

#: ../source/tutorials/installing-packages.rst:609
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing from other sources"
msgstr ""

#: ../source/tutorials/installing-packages.rst:611
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To install from other data sources (for example Amazon S3 storage) you can "
"create a helper application that presents the data in a format compliant "
"with the :ref:`simple repository API <simple-repository-api>`:, and use the "
"``--extra-index-url`` flag to direct pip to use that index."
msgstr ""

#: ../source/tutorials/installing-packages.rst:623
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing Prereleases"
msgstr ""

#: ../source/tutorials/installing-packages.rst:625
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Find pre-release and development versions, in addition to stable versions.  "
"By default, pip only finds stable versions."
msgstr ""

#: ../source/tutorials/installing-packages.rst:641
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing \"Extras\""
msgstr ""

#: ../source/tutorials/installing-packages.rst:643
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Extras are optional \"variants\" of a package, which may include additional "
"dependencies, and thereby enable additional functionality from the package."
"  If you wish to install an extra for a package which you know publishes "
"one, you can include it in the pip installation command:"
msgstr ""

#: ../source/tutorials/installing-packages.rst:666
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"\"Secure\" in this context means using a modern browser or a tool like "
":command:`curl` that verifies SSL certificates when downloading from https "
"URLs."
msgstr ""

#: ../source/tutorials/installing-packages.rst:675
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Beginning with Python 3.4, ``venv`` (a stdlib alternative to "
":ref:`virtualenv`) will create virtualenv environments with ``pip`` pre-"
"installed, thereby making it an equal alternative to :ref:`virtualenv`."
msgstr ""

#: ../source/tutorials/installing-packages.rst:680
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The compatible release specifier was accepted in :pep:`440` and support was "
"released in :ref:`setuptools` v8.0 and :ref:`pip` v6.0"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Managing Application Dependencies"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:6
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :ref:`package installation tutorial <installing-packages>` covered the "
"basics of getting set up to install and update Python packages."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:9
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"However, running these commands interactively can get tedious even for your "
"own personal projects, and things get even more difficult when trying to set"
" up development environments automatically for projects with multiple "
"contributors."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:13
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This tutorial walks you through the use of :ref:`Pipenv` to manage "
"dependencies for an application. It will show you how to install and use the"
" necessary tools and make strong recommendations on best practices."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:17
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Keep in mind that Python is used for a great many different purposes, and "
"precisely how you want to manage your dependencies may change based on how "
"you decide to publish your software. The guidance presented here is most "
"directly applicable to the development and deployment of network services "
"(including web applications), but is also very well suited to managing "
"development and testing environments for any kind of project."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:24
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"For alternatives, see `Other Tools for Application Dependency Management`_."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:27
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing Pipenv"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:29
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":ref:`Pipenv` is a dependency manager for Python projects. If you're "
"familiar with Node.js' `npm`_ or Ruby's `bundler`_, it is similar in spirit "
"to those tools. While :ref:`pip` alone is often sufficient for personal use,"
" Pipenv is recommended for collaborative projects as it's a higher-level "
"tool that simplifies dependency management for common use cases."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Use ``pip`` to install Pipenv:"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:51
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This does a `user installation`_ to prevent breaking any system-wide "
"packages. If ``pipenv`` isn't available in your shell after installation, "
"you'll need to add the :py:data:`user base <python:site.USER_BASE>`'s binary"
" directory to your ``PATH``. See :ref:`Installing to the User Site` for more"
" information."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing packages for your project"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:64
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pipenv manages dependencies on a per-project basis. To install packages, "
"change into your project's directory (or just an empty directory for this "
"tutorial) and run:"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:73
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Pipenv will install the `Requests`_ library and create a ``Pipfile`` for you"
" in your project's directory. The :ref:`Pipfile` is used to track which "
"dependencies your project needs in case you need to re-install them, such as"
" when you share your project with others. You should get output similar to "
"this (although the exact paths shown will vary):"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:109
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Using installed packages"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now that Requests is installed you can create a simple :file:`main.py` file "
"to use it:"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Then you can run this script using ``pipenv run``:"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:128
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "You should get output similar to this:"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Using ``pipenv run`` ensures that your installed packages are available to "
"your script. It's also possible to spawn a new shell that ensures all "
"commands have access to your installed packages with ``pipenv shell``."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:140
#: ../source/tutorials/packaging-projects.rst:513
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Next steps"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:142
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Congratulations, you now know how to effectively manage dependencies and "
"development environments on a collaborative Python project! ✨ 🍰 ✨"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:145
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you're interested in creating and distributing your own Python packages, "
"see the :ref:`tutorial on packaging and distributing packages <distributing-"
"packages>`."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:148
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Note that when your application includes definitions of Python source "
"packages, they (and their dependencies) can be added to your ``pipenv`` "
"environment with ``pipenv install -e <relative-path-to-source-directory>`` "
"(e.g. ``pipenv install -e .`` or ``pipenv install -e src``)."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:157
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Other Tools for Application Dependency Management"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:159
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you find this particular approach to managing application dependencies "
"isn't working well for you or your use case, you may want to explore these "
"other tools and techniques, listed in alphabetical order, to see if one of "
"them is a better fit:"
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:163
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`hatch <https://github.com/pypa/hatch>`_ for opinionated coverage of even "
"more steps in the project management workflow, such as incrementing versions"
" and creating new skeleton projects from project templates."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:166
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`micropipenv <https://github.com/thoth-station/micropipenv>`_ for a "
"lightweight wrapper around pip that supports ``requirements.txt``, Pipenv "
"and Poetry lock files, or converting them to pip-tools compatible output. "
"Designed for containerized Python applications, but not limited to them."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:170
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`PDM <https://github.com/pdm-project/pdm>`_ for a modern Python package "
"management relying on standards such as :pep:`517` and :pep:`621`."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:172
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`pip-tools <https://github.com/jazzband/pip-tools>`_ for creating a lock "
"file of all dependencies from a list of packages directly used in a project,"
" and ensuring that only those dependencies are installed."
msgstr ""

#: ../source/tutorials/managing-dependencies.rst:175
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"`Poetry <https://github.com/python-poetry/poetry>`__ for a tool comparable "
"in scope to Pipenv that focuses more directly on use cases where the project"
" being managed is structured as a distributable Python package with a valid "
"``pyproject.toml`` file. By contrast, Pipenv explicitly avoids making the "
"assumption that the application being worked on will support distribution as"
" a ``pip``-installable Python package."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:2
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Packaging Python Projects"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:4
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This tutorial walks you through how to package a simple Python project. It "
"will show you how to add the necessary files and structure to create the "
"package, how to build the package, and how to upload it to the Python "
"Package Index (PyPI)."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:10
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you have trouble running the commands in this tutorial, please copy the "
"command and its output, then `open an issue`_ on the `packaging-problems`_ "
"repository on GitHub. We'll do our best to help you!"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:18
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some of the commands require a newer version of :ref:`pip`, so start by "
"making sure you have the latest version installed:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:35
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "A simple project"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:37
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This tutorial uses a simple project named "
"``example_package_YOUR_USERNAME_HERE``. If your username is ``me``, then the"
" package would be ``example_package_me``; this ensures that you have a "
"unique package name that doesn't conflict with packages uploaded by other "
"people following this tutorial. We recommend following this tutorial as-is "
"using this project, before packaging your own project."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:44
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Create the following file structure locally:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:54
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The directory containing the Python files should match the project name. "
"This simplifies the configuration and is more obvious to users who install "
"the package."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:57
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Creating the file :file:`__init__.py` is recommended because the existence "
"of an :file:`__init__.py` file allows users to import the directory as a "
"regular package, even if (as is the case in this tutorial) "
":file:`__init__.py` is empty. [#namespace-packages]_"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:62
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":file:`example.py` is an example of a module within the package that could "
"contain the logic (functions, classes, constants, etc.) of your package. "
"Open that file and enter the following content:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:71
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you are unfamiliar with Python's :term:`modules <Module>` and "
":term:`import packages <Import Package>`, take a few minutes to read over "
"the `Python documentation for packages and modules`_."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:75
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Once you create this structure, you'll want to run all of the commands in "
"this tutorial within the ``packaging_tutorial`` directory."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:83
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating the package files"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:85
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You will now add files that are used to prepare the project for "
"distribution. When you're done, the project structure will look like this:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:103
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating a test directory"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:105
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
":file:`tests/` is a placeholder for test files. Leave it empty for now."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:111
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Choosing a build backend"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:113
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Tools like :ref:`pip` and :ref:`build` do not actually convert your sources "
"into a :term:`distribution package <Distribution Package>` (like a wheel); "
"that job is performed by a :term:`build backend <Build Backend>`. The build "
"backend determines how your project will specify its configuration, "
"including metadata (information about the project, for example, the name and"
" tags that are displayed on PyPI) and input files. Build backends have "
"different levels of functionality, such as whether they support building "
":term:`extension modules <Extension Module>`, and you should choose one that"
" suits your needs and preferences."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:122
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can choose from a number of backends; this tutorial uses :ref:`Hatchling"
" <hatch>` by default, but it will work identically with :ref:`setuptools`, "
":ref:`Flit <flit>`, :ref:`PDM <pdm>`, and others that support the "
"``[project]`` table for :ref:`metadata <configuring metadata>`."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:129
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Some build backends are part of larger tools that provide a command-line "
"interface with additional features like project initialization and version "
"management, as well as building, uploading, and installing packages. This "
"tutorial uses single-purpose tools that work independently."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:134
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The :file:`pyproject.toml` tells :term:`build frontend <Build Frontend>` "
"tools like :ref:`pip` and :ref:`build` which backend to use for your "
"project. Below are some examples for common build backends, but check your "
"backend's own documentation for more details."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:172
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``requires`` key is a list of packages that are needed to build your "
"package. The :term:`frontend <Build Frontend>` should install them "
"automatically when building your package. Frontends usually run builds in "
"isolated environments, so omitting dependencies here may cause build-time "
"errors. This should always include your backend's package, and might have "
"other build-time dependencies."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:179
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``build-backend`` key is the name of the Python object that frontends "
"will use to perform the build."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:182
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Both of these values will be provided by the documentation for your build "
"backend, or generated by its command line interface. There should be no need"
" for you to customize these settings."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:186
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Additional configuration of the build tool will either be in a ``tool`` "
"section of the ``pyproject.toml``, or in a special file defined by the build"
" tool. For example, when using ``setuptools`` as your build backend, "
"additional configuration may be added to a ``setup.py`` or ``setup.cfg`` "
"file, and specifying ``setuptools.build_meta`` in your build allows the "
"tools to locate and use these automatically."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:196
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Configuring metadata"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:198
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Open :file:`pyproject.toml` and enter the following content. Change the "
"``name`` to include your username; this ensures that you have a unique "
"package name that doesn't conflict with packages uploaded by other people "
"following this tutorial."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:225
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``name`` is the *distribution name* of your package. This can be any name as"
" long as it only contains letters, numbers, ``.``, ``_`` , and ``-``. It "
"also must not already be taken on PyPI. **Be sure to update this with your "
"username** for this tutorial, as this ensures you won't try to upload a "
"package with the same name as one which already exists."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:230
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``version`` is the package version. (Some build backends allow it to be "
"specified another way, such as from a file or Git tag.)"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:232
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``authors`` is used to identify the author of the package; you specify a "
"name and an email for each author. You can also list ``maintainers`` in the "
"same format."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:235
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "``description`` is a short, one-sentence summary of the package."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:236
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``readme`` is a path to a file containing a detailed description of the "
"package. This is shown on the package detail page on PyPI. In this case, the"
" description is loaded from :file:`README.md` (which is a common pattern). "
"There also is a more advanced table form described in the "
":ref:`pyproject.toml guide <writing-pyproject-toml>`."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:241
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``requires-python`` gives the versions of Python supported by your project. "
"An installer like :ref:`pip` will look back through older versions of "
"packages until it finds one that has a matching Python version."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:244
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``classifiers`` gives the index and :ref:`pip` some additional metadata "
"about your package. In this case, the package is only compatible with Python"
" 3 and is OS-independent. You should always include at least which "
"version(s) of Python your package works on and which operating systems your "
"package will work on. For a complete list of classifiers, see "
"https://pypi.org/classifiers/."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:251
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``license`` is the :term:`SPDX license expression <License Expression>` of "
"your package."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:253
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``license-files`` is the list of glob paths to the license files, relative "
"to the directory where :file:`pyproject.toml` is located."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:255
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"``urls`` lets you list any number of extra links to show on PyPI. Generally "
"this could be to the source, documentation, issue trackers, etc."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:258
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"See the :ref:`pyproject.toml guide <writing-pyproject-toml>` for details on "
"these and other fields that can be defined in the ``[project]`` table. Other"
" common fields are ``keywords`` to improve discoverability and the "
"``dependencies`` that are required to install your package."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:265
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating README.md"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:267
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Open :file:`README.md` and enter the following content. You can customize "
"this if you'd like."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:280
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Creating a LICENSE"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:282
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"It's important for every package uploaded to the Python Package Index to "
"include a license. This tells users who install your package the terms under"
" which they can use your package. For help picking a license, see "
"https://choosealicense.com/. Once you have chosen a license, open "
":file:`LICENSE` and enter the license text. For example, if you had chosen "
"the MIT license:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:311
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Most build backends automatically include license files in packages. See "
"your backend's documentation for more details. If you include the path to "
"license in the ``license-files`` key of :file:`pyproject.toml`, and your "
"build backend supports :pep:`639`, the file will be automatically included "
"in the package."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:319
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Including other files"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:321
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The files listed above will be included automatically in your :term:`source "
"distribution <Source Distribution (or \"sdist\")>`. If you want to include "
"additional files, see the documentation for your build backend."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:328
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Generating distribution archives"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:330
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The next step is to generate :term:`distribution packages <Distribution "
"Package>` for the package. These are archives that are uploaded to the "
"Python Package Index and can be installed by :ref:`pip`."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:334
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Make sure you have the latest version of PyPA's :ref:`build` installed:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:348
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"If you have trouble installing these, see the :doc:`installing-packages` "
"tutorial."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:351
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now run this command from the same directory where :file:`pyproject.toml` is"
" located:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:365
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This command should output a lot of text and once completed should generate "
"two files in the :file:`dist` directory:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:375
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The ``tar.gz`` file is a :term:`source distribution <Source Distribution (or"
" \"sdist\")>` whereas the ``.whl`` file is a :term:`built distribution "
"<Built Distribution>`. Newer :ref:`pip` versions preferentially install "
"built distributions, but will fall back to source distributions if needed. "
"You should always upload a source distribution and provide built "
"distributions for the platforms your project is compatible with. In this "
"case, our example package is compatible with Python on any platform so only "
"one built distribution is needed."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:384
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Uploading the distribution archives"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:386
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Finally, it's time to upload your package to the Python Package Index!"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:388
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"The first thing you'll need to do is register an account on TestPyPI, which "
"is a separate instance of the package index intended for testing and "
"experimentation. It's great for things like this tutorial where we don't "
"necessarily want to upload to the real index. To register an account, go to "
"https://test.pypi.org/account/register/ and complete the steps on that page."
" You will also need to verify your email address before you're able to "
"upload any packages.  For more details, see :doc:`/guides/using-testpypi`."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:396
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"To securely upload your project, you'll need a PyPI `API token`_. Create one"
" at https://test.pypi.org/manage/account/#api-tokens, setting the \"Scope\" "
"to \"Entire account\". **Don't close the page until you have copied and "
"saved the token — you won't see that token again.**"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:403
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Now that you are registered, you can use :ref:`twine` to upload the "
"distribution packages. You'll need to install Twine:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:418
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Once installed, run Twine to upload all of the archives under :file:`dist`:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:432
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You will be prompted for an API token. Use the token value, including the "
"``pypi-`` prefix. Note that the input will be hidden, so be sure to paste "
"correctly."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:435
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "After the command completes, you should see output similar to this:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:446
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Once uploaded, your package should be viewable on TestPyPI; for example: "
"``https://test.pypi.org/project/example_package_YOUR_USERNAME_HERE``."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:451
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Installing your newly uploaded package"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:453
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can use :ref:`pip` to install your package and verify that it works. "
"Create a :ref:`virtual environment <Creating and using Virtual "
"Environments>` and install your package from TestPyPI:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:469
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Make sure to specify your username in the package name!"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:471
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"pip should install the package from TestPyPI and the output should look "
"something like this:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:481
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"This example uses ``--index-url`` flag to specify TestPyPI instead of live "
"PyPI. Additionally, it specifies ``--no-deps``. Since TestPyPI doesn't have "
"the same packages as the live PyPI, it's possible that attempting to install"
" dependencies may fail or install something unexpected. While our example "
"package doesn't have any dependencies, it's a good practice to avoid "
"installing dependencies when using TestPyPI."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:488
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"You can test that it was installed correctly by importing the package. Make "
"sure you're still in your virtual environment, then run Python:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:503
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "and import the package:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:515
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"**Congratulations, you've packaged and distributed a Python project!** ✨ 🍰 ✨"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:518
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Keep in mind that this tutorial showed you how to upload your package to "
"Test PyPI, which isn't a permanent storage. The Test system occasionally "
"deletes packages and accounts. It is best to use TestPyPI for testing and "
"experiments like this tutorial."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:523
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"When you are ready to upload a real package to the Python Package Index you "
"can do much the same as you did in this tutorial, but with these important "
"differences:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:527
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Choose a memorable and unique name for your package. You don't have to "
"append your username as you did in the tutorial, but you can't use an "
"existing name."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:529
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Register an account on https://pypi.org - note that these are two separate "
"servers and the login details from the test server are not shared with the "
"main server."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:532
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Use ``twine upload dist/*`` to upload your package and enter your "
"credentials for the account you registered on the real PyPI.  Now that "
"you're uploading the package in production, you don't need to specify "
"``--repository``; the package will upload to https://pypi.org/ by default."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:536
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Install your package from the real PyPI using ``python3 -m pip install "
"[your-package]``."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:538
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"At this point if you want to read more on packaging Python libraries here "
"are some things you can do:"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:541
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Read about advanced configuration for your chosen build backend: `Hatchling "
"<hatchling-config_>`_, :doc:`setuptools "
"<setuptools:userguide/pyproject_config>`, :doc:`Flit <flit:pyproject_toml>`,"
" `PDM <pdm-config_>`_."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:545
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Look at the :doc:`guides </guides/index>` on this site for more advanced "
"practical information, or the :doc:`discussions </discussions/index>` for "
"explanations and background on specific topics."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:548
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Consider packaging tools that provide a single command-line interface for "
"project management and packaging, such as :ref:`hatch`, :ref:`flit`, "
":ref:`pdm`, and :ref:`poetry`."
msgstr ""

#: ../source/tutorials/packaging-projects.rst:556
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid "Notes"
msgstr ""

#: ../source/tutorials/packaging-projects.rst:558
#, placeholders:BigQuery:easy_install:HTML:HTTP:Linux:pip:PSF:PyPI:Python:setuptools:venv:virtualenv:Windows:":pep:`440`":``pip``:``setuptools``:"::":|PyPUG|, rst-text
msgid ""
"Technically, you can also create Python packages without an ``__init__.py`` "
"file, but those are called :doc:`namespace packages </guides/packaging-"
"namespace-packages>` and considered an **advanced topic** (not covered in "
"this tutorial). If you are only getting started with Python packaging, it is"
" recommended to stick with *regular packages* and ``__init__.py`` (even if "
"the file is empty)."
msgstr ""
